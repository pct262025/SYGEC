{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v12.3.0 (2025-06-21)\n * @module highcharts/highcharts-more\n * @requires highcharts\n *\n * (c) 2009-2025 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(root[\"_Highcharts\"], root[\"_Highcharts\"][\"SeriesRegistry\"], root[\"_Highcharts\"][\"Series\"], root[\"_Highcharts\"][\"Series\"][\"types\"][\"column\"], root[\"_Highcharts\"][\"Templating\"], root[\"_Highcharts\"][\"Point\"], root[\"_Highcharts\"][\"Color\"], root[\"_Highcharts\"][\"Chart\"], root[\"_Highcharts\"][\"SVGElement\"], root[\"_Highcharts\"][\"StackItem\"]);\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"highcharts/highcharts-more\", [\"highcharts/highcharts\"], function (amd1) {return factory(amd1,amd1[\"SeriesRegistry\"],amd1[\"Series\"],amd1[\"Series\"],[\"types\"],[\"column\"],amd1[\"Templating\"],amd1[\"Point\"],amd1[\"Color\"],amd1[\"Chart\"],amd1[\"SVGElement\"],amd1[\"StackItem\"]);});\n\telse if(typeof exports === 'object')\n\t\texports[\"highcharts/highcharts-more\"] = factory(root[\"_Highcharts\"], root[\"_Highcharts\"][\"SeriesRegistry\"], root[\"_Highcharts\"][\"Series\"], root[\"_Highcharts\"][\"Series\"][\"types\"][\"column\"], root[\"_Highcharts\"][\"Templating\"], root[\"_Highcharts\"][\"Point\"], root[\"_Highcharts\"][\"Color\"], root[\"_Highcharts\"][\"Chart\"], root[\"_Highcharts\"][\"SVGElement\"], root[\"_Highcharts\"][\"StackItem\"]);\n\telse\n\t\troot[\"Highcharts\"] = factory(root[\"Highcharts\"], root[\"Highcharts\"][\"SeriesRegistry\"], root[\"Highcharts\"][\"Series\"], root[\"Highcharts\"][\"Series\"][\"types\"][\"column\"], root[\"Highcharts\"][\"Templating\"], root[\"Highcharts\"][\"Point\"], root[\"Highcharts\"][\"Color\"], root[\"Highcharts\"][\"Chart\"], root[\"Highcharts\"][\"SVGElement\"], root[\"Highcharts\"][\"StackItem\"]);\n})(typeof window === 'undefined' ? this : window, (__WEBPACK_EXTERNAL_MODULE__944__, __WEBPACK_EXTERNAL_MODULE__512__, __WEBPACK_EXTERNAL_MODULE__820__, __WEBPACK_EXTERNAL_MODULE__448__, __WEBPACK_EXTERNAL_MODULE__984__, __WEBPACK_EXTERNAL_MODULE__260__, __WEBPACK_EXTERNAL_MODULE__620__, __WEBPACK_EXTERNAL_MODULE__960__, __WEBPACK_EXTERNAL_MODULE__28__, __WEBPACK_EXTERNAL_MODULE__184__) => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 28:\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__28__;\n\n/***/ }),\n\n/***/ 184:\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__184__;\n\n/***/ }),\n\n/***/ 260:\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__260__;\n\n/***/ }),\n\n/***/ 448:\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__448__;\n\n/***/ }),\n\n/***/ 512:\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__512__;\n\n/***/ }),\n\n/***/ 620:\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__620__;\n\n/***/ }),\n\n/***/ 820:\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__820__;\n\n/***/ }),\n\n/***/ 944:\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__944__;\n\n/***/ }),\n\n/***/ 960:\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__960__;\n\n/***/ }),\n\n/***/ 984:\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__984__;\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t(() => {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = (module) => {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\t() => (module['default']) :\n/******/ \t\t\t\t() => (module);\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ highcharts_more_src)\n});\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\"],\"commonjs\":[\"highcharts\"],\"commonjs2\":[\"highcharts\"],\"root\":[\"Highcharts\"]}\nvar highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_ = __webpack_require__(944);\nvar highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default = /*#__PURE__*/__webpack_require__.n(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_);\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"SeriesRegistry\"],\"commonjs\":[\"highcharts\",\"SeriesRegistry\"],\"commonjs2\":[\"highcharts\",\"SeriesRegistry\"],\"root\":[\"Highcharts\",\"SeriesRegistry\"]}\nvar highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_ = __webpack_require__(512);\nvar highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default = /*#__PURE__*/__webpack_require__.n(highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_);\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"Series\"],\"commonjs\":[\"highcharts\",\"Series\"],\"commonjs2\":[\"highcharts\",\"Series\"],\"root\":[\"Highcharts\",\"Series\"]}\nvar highcharts_Series_commonjs_highcharts_Series_commonjs2_highcharts_Series_root_Highcharts_Series_ = __webpack_require__(820);\nvar highcharts_Series_commonjs_highcharts_Series_commonjs2_highcharts_Series_root_Highcharts_Series_default = /*#__PURE__*/__webpack_require__.n(highcharts_Series_commonjs_highcharts_Series_commonjs2_highcharts_Series_root_Highcharts_Series_);\n;// ./code/es-modules/Series/CenteredUtilities.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { deg2rad } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\n\nconst { fireEvent, isNumber, pick, relativeLength } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/**\n * @private\n */\nvar CenteredUtilities;\n(function (CenteredUtilities) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Get the center of the pie based on the size and center options relative\n     * to the plot area. Borrowed by the polar and gauge series types.\n     *\n     * @private\n     * @function Highcharts.CenteredSeriesMixin.getCenter\n     */\n    function getCenter() {\n        const options = this.options, chart = this.chart, slicingRoom = 2 * (options.slicedOffset || 0), plotWidth = chart.plotWidth - 2 * slicingRoom, plotHeight = chart.plotHeight - 2 * slicingRoom, centerOption = options.center, smallestSize = Math.min(plotWidth, plotHeight), thickness = options.thickness;\n        let handleSlicingRoom, size = options.size, innerSize = options.innerSize || 0, i, value;\n        if (typeof size === 'string') {\n            size = parseFloat(size);\n        }\n        if (typeof innerSize === 'string') {\n            innerSize = parseFloat(innerSize);\n        }\n        const positions = [\n            pick(centerOption?.[0], '50%'),\n            pick(centerOption?.[1], '50%'),\n            // Prevent from negative values\n            pick(size && size < 0 ? void 0 : options.size, '100%'),\n            pick(innerSize && innerSize < 0 ? void 0 : options.innerSize || 0, '0%')\n        ];\n        // No need for inner size in angular (gauges) series but still required\n        // for pie series\n        if (chart.angular && !(this instanceof (highcharts_Series_commonjs_highcharts_Series_commonjs2_highcharts_Series_root_Highcharts_Series_default()))) {\n            positions[3] = 0;\n        }\n        for (i = 0; i < 4; ++i) {\n            value = positions[i];\n            handleSlicingRoom = i < 2 || (i === 2 && /%$/.test(value));\n            // I == 0: centerX, relative to width\n            // i == 1: centerY, relative to height\n            // i == 2: size, relative to smallestSize\n            // i == 3: innerSize, relative to size\n            positions[i] = relativeLength(value, [plotWidth, plotHeight, smallestSize, positions[2]][i]) + (handleSlicingRoom ? slicingRoom : 0);\n        }\n        // Inner size cannot be larger than size (#3632)\n        if (positions[3] > positions[2]) {\n            positions[3] = positions[2];\n        }\n        // Thickness overrides innerSize, need to be less than pie size (#6647)\n        if (isNumber(thickness) &&\n            thickness * 2 < positions[2] && thickness > 0) {\n            positions[3] = positions[2] - thickness * 2;\n        }\n        fireEvent(this, 'afterGetCenter', { positions });\n        return positions;\n    }\n    CenteredUtilities.getCenter = getCenter;\n    /**\n     * GetStartAndEndRadians - Calculates start and end angles in radians.\n     * Used in series types such as pie and sunburst.\n     *\n     * @private\n     * @function Highcharts.CenteredSeriesMixin.getStartAndEndRadians\n     *\n     * @param {number} [start]\n     *        Start angle in degrees.\n     *\n     * @param {number} [end]\n     *        Start angle in degrees.\n     *\n     * @return {Highcharts.RadianAngles}\n     *         Returns an object containing start and end angles as radians.\n     */\n    function getStartAndEndRadians(start, end) {\n        const startAngle = isNumber(start) ? start : 0, // Must be a number\n        endAngle = ((isNumber(end) && // Must be a number\n            end > startAngle && // Must be larger than the start angle\n            // difference must be less than 360 degrees\n            (end - startAngle) < 360) ?\n            end :\n            startAngle + 360), correction = -90;\n        return {\n            start: deg2rad * (startAngle + correction),\n            end: deg2rad * (endAngle + correction)\n        };\n    }\n    CenteredUtilities.getStartAndEndRadians = getStartAndEndRadians;\n})(CenteredUtilities || (CenteredUtilities = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Series_CenteredUtilities = (CenteredUtilities);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * @private\n * @interface Highcharts.RadianAngles\n */ /**\n* @name Highcharts.RadianAngles#end\n* @type {number}\n*/ /**\n* @name Highcharts.RadianAngles#start\n* @type {number}\n*/\n''; // Keeps doclets above in JS file\n\n;// ./code/es-modules/Extensions/Pane/PaneComposition.js\n/* *\n *\n *  Imports\n *\n * */\n\nconst { addEvent, correctFloat, defined, pick: PaneComposition_pick } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Functions\n *\n * */\n/** @private */\nfunction chartGetHoverPane(eventArgs) {\n    const chart = this;\n    let hoverPane;\n    if (eventArgs) {\n        chart.pane.forEach((pane) => {\n            const x = eventArgs.chartX - chart.plotLeft, y = eventArgs.chartY - chart.plotTop;\n            if (isInsidePane(x, y, pane.center)) {\n                hoverPane = pane;\n            }\n        });\n    }\n    return hoverPane;\n}\n/** @private */\nfunction compose(ChartClass, PointerClass) {\n    const chartProto = ChartClass.prototype;\n    if (!chartProto.getHoverPane) {\n        chartProto.collectionsWithUpdate.push('pane');\n        chartProto.getHoverPane = chartGetHoverPane;\n        addEvent(ChartClass, 'afterIsInsidePlot', onChartAfterIsInsiderPlot);\n        addEvent(PointerClass, 'afterGetHoverData', onPointerAfterGetHoverData);\n        addEvent(PointerClass, 'beforeGetHoverData', onPointerBeforeGetHoverData);\n    }\n}\n/**\n * Check whether element is inside or outside pane.\n * @private\n * @param  {number} x\n * Element's x coordinate\n * @param  {number} y\n * Element's y coordinate\n * @param  {Array<number>} center\n * Pane's center (x, y) and diameter\n * @param  {number} startAngle\n * Pane's normalized start angle in radians (<-PI, PI>)\n * @param  {number} endAngle\n * Pane's normalized end angle in radians (<-PI, PI>)\n */\nfunction isInsidePane(x, y, center, startAngle, endAngle) {\n    let insideSlice = true;\n    const cx = center[0], cy = center[1];\n    const distance = Math.sqrt(Math.pow(x - cx, 2) + Math.pow(y - cy, 2));\n    if (defined(startAngle) && defined(endAngle)) {\n        // Round angle to N-decimals to avoid numeric errors\n        const angle = Math.atan2(correctFloat(y - cy, 8), correctFloat(x - cx, 8));\n        // Ignore full circle panes:\n        if (endAngle !== startAngle) {\n            // If normalized start angle is bigger than normalized end,\n            // it means angles have different signs. In such situation we\n            // check the <-PI, startAngle> and <endAngle, PI> ranges.\n            if (startAngle > endAngle) {\n                insideSlice = (angle >= startAngle &&\n                    angle <= Math.PI) || (angle <= endAngle &&\n                    angle >= -Math.PI);\n            }\n            else {\n                // In this case, we simple check if angle is within the\n                // <startAngle, endAngle> range\n                insideSlice = angle >= startAngle &&\n                    angle <= correctFloat(endAngle, 8);\n            }\n        }\n    }\n    // Round up radius because x and y values are rounded\n    return distance <= Math.ceil(center[2] / 2) && insideSlice;\n}\n/**\n * Check if (x, y) position is within pane for polar.\n * @private\n */\nfunction onChartAfterIsInsiderPlot(e) {\n    const chart = this;\n    if (chart.polar) {\n        if (e.options.inverted) {\n            [e.x, e.y] = [e.y, e.x];\n        }\n        e.isInsidePlot = chart.pane.some((pane) => isInsidePane(e.x, e.y, pane.center, pane.axis && pane.axis.normalizedStartAngleRad, pane.axis && pane.axis.normalizedEndAngleRad));\n    }\n}\n/**\n *\n */\nfunction onPointerAfterGetHoverData(eventArgs) {\n    const chart = this.chart;\n    if (eventArgs.hoverPoint &&\n        eventArgs.hoverPoint.plotX &&\n        eventArgs.hoverPoint.plotY &&\n        chart.hoverPane &&\n        !isInsidePane(eventArgs.hoverPoint.plotX, eventArgs.hoverPoint.plotY, chart.hoverPane.center)) {\n        eventArgs.hoverPoint = void 0;\n    }\n}\n/** @private */\nfunction onPointerBeforeGetHoverData(eventArgs) {\n    const chart = this.chart;\n    if (chart.polar) {\n        // Find pane we are currently hovering over.\n        chart.hoverPane = chart.getHoverPane(eventArgs);\n        // Edit filter method to handle polar\n        eventArgs.filter = function (s) {\n            return (s.visible &&\n                !(!eventArgs.shared && s.directTouch) && // #3821\n                PaneComposition_pick(s.options.enableMouseTracking, true) &&\n                (!chart.hoverPane || s.xAxis.pane === chart.hoverPane));\n        };\n    }\n    else {\n        chart.hoverPane = void 0;\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst PaneComposition = {\n    compose\n};\n/* harmony default export */ const Pane_PaneComposition = (PaneComposition);\n\n;// ./code/es-modules/Extensions/Pane/PaneDefaults.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { defaultOptions } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A background item or an array of such for the pane. When used in\n * `Highcharts.setOptions` for theming, the background must be a single item.\n *\n * @sample {highcharts} highcharts/demo/gauge-speedometer/\n *         Speedometer gauge with multiple backgrounds\n *\n * @type         {Array<*>}\n * @optionparent pane.background\n */\nconst background = {\n    /**\n     * The class name for this background.\n     *\n     * @sample {highcharts} highcharts/css/pane/\n     *         Panes styled by CSS\n     * @sample {highstock} highcharts/css/pane/\n     *         Panes styled by CSS\n     * @sample {highmaps} highcharts/css/pane/\n     *         Panes styled by CSS\n     *\n     * @type      {string}\n     * @default   highcharts-pane\n     * @since     5.0.0\n     * @apioption pane.background.className\n     */\n    /**\n     * The shape of the pane background. When `solid`, the background\n     * is circular. When `arc`, the background extends only from the min\n     * to the max of the value axis.\n     *\n     * @type    {Highcharts.PaneBackgroundShapeValue}\n     * @since   2.3.0\n     * @product highcharts\n     */\n    shape: 'circle',\n    /**\n     * The border radius of the pane background when the shape is `arc`. Can be\n     * a number (pixels) or a percentage string.\n     *\n     * @since 11.4.2\n     * @sample  highcharts/series-solidgauge/pane-borderradius\n     *          Circular gauge and pane with equal border radius\n     * @product highcharts\n     * @type    {number|string}\n     */\n    borderRadius: 0,\n    /**\n     * The pixel border width of the pane background.\n     *\n     * @since 2.3.0\n     * @product highcharts\n     */\n    borderWidth: 1,\n    /**\n     * The pane background border color.\n     *\n     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @since   2.3.0\n     * @product highcharts\n     */\n    borderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n    /**\n     * The background color or gradient for the pane.\n     *\n     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @default { linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 }, stops: [[0, #ffffff], [1, #e6e6e6]] }\n     * @since   2.3.0\n     * @product highcharts\n     */\n    backgroundColor: {\n        /** @ignore-option */\n        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n        /** @ignore-option */\n        stops: [\n            [0, \"#ffffff\" /* Palette.backgroundColor */],\n            [1, \"#e6e6e6\" /* Palette.neutralColor10 */]\n        ]\n    },\n    /** @ignore-option */\n    from: -Number.MAX_VALUE, // Corrected to axis min\n    /**\n     * The inner radius of the pane background. Can be either numeric\n     * (pixels) or a percentage string.\n     *\n     * @type    {number|string}\n     * @since   2.3.0\n     * @product highcharts\n     */\n    innerRadius: 0,\n    /** @ignore-option */\n    to: Number.MAX_VALUE, // Corrected to axis max\n    /**\n     * The outer radius of the circular pane background. Can be either\n     * numeric (pixels) or a percentage string.\n     *\n     * @type     {number|string}\n     * @since    2.3.0\n     * @product  highcharts\n     */\n    outerRadius: '105%'\n};\n/**\n * The pane serves as a container for axes and backgrounds for circular\n * gauges and polar charts.\n *\n * When used in `Highcharts.setOptions` for theming, the pane must be a single\n * object, otherwise arrays are supported.\n *\n * @type         {*|Array<*>}\n * @since        2.3.0\n * @product      highcharts\n * @requires     highcharts-more\n * @optionparent pane\n */\nconst pane = {\n    background,\n    /**\n     * The end angle of the polar X axis or gauge value axis, given in\n     * degrees where 0 is north. Defaults to [startAngle](#pane.startAngle)\n     * + 360.\n     *\n     * @sample {highcharts} highcharts/demo/gauge-vu-meter/\n     *         VU-meter with custom start and end angle\n     *\n     * @type      {number}\n     * @since     2.3.0\n     * @product   highcharts\n     * @apioption pane.endAngle\n     */\n    /**\n     * The center of a polar chart or angular gauge, given as an array\n     * of [x, y] positions. Positions can be given as integers that\n     * transform to pixels, or as percentages of the plot area size.\n     *\n     * @sample {highcharts} highcharts/demo/gauge-vu-meter/\n     *         Two gauges with different center\n     *\n     * @type    {Array<string|number>}\n     * @default [\"50%\", \"50%\"]\n     * @since   2.3.0\n     * @product highcharts\n     */\n    center: ['50%', '50%'],\n    /**\n     * The size of the pane, either as a number defining pixels, or a\n     * percentage defining a percentage of the available plot area (the\n     * smallest of the plot height or plot width).\n     *\n     * @sample {highcharts} highcharts/demo/gauge-vu-meter/\n     *         Smaller size\n     *\n     * @type    {number|string}\n     * @product highcharts\n     */\n    size: '85%',\n    /**\n     * The inner size of the pane, either as a number defining pixels, or a\n     * percentage defining a percentage of the pane's size.\n     *\n     * @sample {highcharts} highcharts/series-polar/column-inverted-inner\n     *         The inner size set to 20%\n     *\n     * @type    {number|string}\n     * @product highcharts\n     */\n    innerSize: '0%',\n    /**\n     * The start angle of the polar X axis or gauge axis, given in degrees\n     * where 0 is north. Defaults to 0.\n     *\n     * @sample {highcharts} highcharts/demo/gauge-vu-meter/\n     *         VU-meter with custom start and end angle\n     *\n     * @since   2.3.0\n     * @product highcharts\n     */\n    startAngle: 0\n};\ndefaultOptions.pane = pane;\n/* *\n *\n *  Default Export\n *\n * */\nconst PaneDefaults = {\n    pane,\n    background\n};\n/* harmony default export */ const Pane_PaneDefaults = (PaneDefaults);\n\n;// ./code/es-modules/Extensions/Pane/Pane.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\n\nconst { extend, merge, splat } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * The Pane object allows options that are common to a set of X and Y axes.\n *\n * In the future, this can be extended to basic Highcharts and Highcharts Stock.\n *\n * @private\n * @class\n * @name Highcharts.Pane\n * @param {Highcharts.PaneOptions} options\n * @param {Highcharts.Chart} chart\n */\nclass Pane {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(options, chart) {\n        this.coll = 'pane'; // Member of chart.pane\n        this.init(options, chart);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Initialize the Pane object\n     *\n     * @private\n     * @function Highcharts.Pane#init\n     *\n     * @param {Highcharts.PaneOptions} options\n     *\n     * @param {Highcharts.Chart} chart\n     */\n    init(options, chart) {\n        this.chart = chart;\n        this.background = [];\n        chart.pane.push(this);\n        this.setOptions(options);\n    }\n    /**\n     * @private\n     * @function Highcharts.Pane#setOptions\n     *\n     * @param {Highcharts.PaneOptions} options\n     */\n    setOptions(options) {\n        // Set options. Angular charts have a default background (#3318)\n        this.options = options = merge(Pane_PaneDefaults.pane, { background: this.chart.angular ? {} : void 0 }, options);\n    }\n    /**\n     * Render the pane with its backgrounds.\n     *\n     * @private\n     * @function Highcharts.Pane#render\n     */\n    render() {\n        const options = this.options, renderer = this.chart.renderer;\n        if (!this.group) {\n            this.group = renderer.g('pane-group')\n                .attr({ zIndex: options.zIndex || 0 })\n                .add();\n        }\n        this.updateCenter();\n        let backgroundOption = this.options.background;\n        // Render the backgrounds\n        if (backgroundOption) {\n            backgroundOption = splat(backgroundOption);\n            const len = Math.max(backgroundOption.length, this.background.length || 0);\n            for (let i = 0; i < len; i++) {\n                // #6641 - if axis exists, chart is circular and apply\n                // background\n                if (backgroundOption[i] && this.axis) {\n                    this.renderBackground(merge(Pane_PaneDefaults.background, backgroundOption[i]), i);\n                }\n                else if (this.background[i]) {\n                    this.background[i] = this.background[i].destroy();\n                    this.background.splice(i, 1);\n                }\n            }\n        }\n    }\n    /**\n     * Render an individual pane background.\n     *\n     * @private\n     * @function Highcharts.Pane#renderBackground\n     *\n     * @param {Highcharts.PaneBackgroundOptions} backgroundOptions\n     *        Background options\n     *\n     * @param {number} i\n     *        The index of the background in this.backgrounds\n     */\n    renderBackground(backgroundOptions, i) {\n        const attribs = {\n            'class': 'highcharts-pane ' + (backgroundOptions.className || '')\n        };\n        let method = 'animate';\n        if (!this.chart.styledMode) {\n            extend(attribs, {\n                'fill': backgroundOptions.backgroundColor,\n                'stroke': backgroundOptions.borderColor,\n                'stroke-width': backgroundOptions.borderWidth\n            });\n        }\n        if (!this.background[i]) {\n            this.background[i] = this.chart.renderer\n                .path()\n                .add(this.group);\n            method = 'attr';\n        }\n        this.background[i][method]({\n            'd': this.axis.getPlotBandPath(backgroundOptions.from, backgroundOptions.to, backgroundOptions)\n        }).attr(attribs);\n    }\n    /**\n     * Gets the center for the pane and its axis.\n     *\n     * @private\n     * @function Highcharts.Pane#updateCenter\n     * @param {Highcharts.Axis} [axis]\n     */\n    updateCenter(axis) {\n        this.center = (axis ||\n            this.axis ||\n            {}).center = Series_CenteredUtilities.getCenter.call(this);\n    }\n    /**\n     * Destroy the pane item\n     *\n     * @ignore\n     * @private\n     * @function Highcharts.Pane#destroy\n     * /\n    destroy: function () {\n        erase(this.chart.pane, this);\n        this.background.forEach(function (background) {\n            background.destroy();\n        });\n        this.background.length = 0;\n        this.group = this.group.destroy();\n    },\n    */\n    /**\n     * Update the pane item with new options\n     *\n     * @private\n     * @function Highcharts.Pane#update\n     * @param {Highcharts.PaneOptions} options\n     *        New pane options\n     * @param {boolean} [redraw]\n     */\n    update(options, redraw) {\n        merge(true, this.options, options);\n        this.setOptions(this.options);\n        this.render();\n        this.chart.axes.forEach(function (axis) {\n            if (axis.pane === this) {\n                axis.pane = null;\n                axis.update({}, redraw);\n            }\n        }, this);\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\nPane.compose = Pane_PaneComposition.compose;\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Pane_Pane = (Pane);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * @typedef {\"arc\"|\"circle\"|\"solid\"} Highcharts.PaneBackgroundShapeValue\n */\n''; // Keeps doclets above in JS file\n\n;// ./code/es-modules/Series/AreaRange/AreaRangePoint.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { area: { prototype: { pointClass: AreaPoint, pointClass: { prototype: areaProto } } } } = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default()).seriesTypes;\n\nconst { defined: AreaRangePoint_defined, isNumber: AreaRangePoint_isNumber } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Class\n *\n * */\nclass AreaRangePoint extends AreaPoint {\n    /**\n     * Range series only. The high or maximum value for each data point.\n     * @name Highcharts.Point#high\n     * @type {number|undefined}\n     */\n    /**\n     * Range series only. The low or minimum value for each data point.\n     * @name Highcharts.Point#low\n     * @type {number|undefined}\n     */\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    setState() {\n        const prevState = this.state, series = this.series, isPolar = series.chart.polar;\n        if (!AreaRangePoint_defined(this.plotHigh)) {\n            // Boost doesn't calculate plotHigh\n            this.plotHigh = series.yAxis.toPixels(this.high, true);\n        }\n        if (!AreaRangePoint_defined(this.plotLow)) {\n            // Boost doesn't calculate plotLow\n            this.plotLow = this.plotY = series.yAxis.toPixels(this.low, true);\n        }\n        series.lowerStateMarkerGraphic = series.stateMarkerGraphic;\n        series.stateMarkerGraphic = series.upperStateMarkerGraphic;\n        // Change state also for the top marker\n        this.graphic = this.graphics && this.graphics[1];\n        this.plotY = this.plotHigh;\n        if (isPolar && AreaRangePoint_isNumber(this.plotHighX)) {\n            this.plotX = this.plotHighX;\n        }\n        // Top state:\n        areaProto.setState.apply(this, arguments);\n        this.state = prevState;\n        // Now restore defaults\n        this.plotY = this.plotLow;\n        this.graphic = this.graphics && this.graphics[0];\n        if (isPolar && AreaRangePoint_isNumber(this.plotLowX)) {\n            this.plotX = this.plotLowX;\n        }\n        series.upperStateMarkerGraphic = series.stateMarkerGraphic;\n        series.stateMarkerGraphic = series.lowerStateMarkerGraphic;\n        // Lower marker is stored at stateMarkerGraphic\n        // to avoid reference duplication (#7021)\n        series.lowerStateMarkerGraphic = void 0;\n        const originalSettings = series.modifyMarkerSettings();\n        // Bottom state\n        areaProto.setState.apply(this, arguments);\n        // Restore previous state\n        series.restoreMarkerSettings(originalSettings);\n    }\n    haloPath() {\n        const isPolar = this.series.chart.polar;\n        let path = [];\n        // Bottom halo\n        this.plotY = this.plotLow;\n        if (isPolar && AreaRangePoint_isNumber(this.plotLowX)) {\n            this.plotX = this.plotLowX;\n        }\n        if (this.isInside) {\n            path = areaProto.haloPath.apply(this, arguments);\n        }\n        // Top halo\n        this.plotY = this.plotHigh;\n        if (isPolar && AreaRangePoint_isNumber(this.plotHighX)) {\n            this.plotX = this.plotHighX;\n        }\n        if (this.isTopInside) {\n            path = path.concat(areaProto.haloPath.apply(this, arguments));\n        }\n        return path;\n    }\n    isValid() {\n        return AreaRangePoint_isNumber(this.low) && AreaRangePoint_isNumber(this.high);\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const AreaRange_AreaRangePoint = (AreaRangePoint);\n\n;// ./code/es-modules/Series/AreaRange/AreaRangeSeries.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { noop } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\nconst { area: AreaSeries, area: { prototype: AreaRangeSeries_areaProto }, column: { prototype: columnProto } } = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default()).seriesTypes;\n\nconst { addEvent: AreaRangeSeries_addEvent, defined: AreaRangeSeries_defined, extend: AreaRangeSeries_extend, isArray, isNumber: AreaRangeSeries_isNumber, pick: AreaRangeSeries_pick, merge: AreaRangeSeries_merge } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Constants\n *\n * */\n/**\n * The area range series is a carteseian series with higher and lower values for\n * each point along an X axis, where the area between the values is shaded.\n *\n * @sample {highcharts} highcharts/demo/arearange/\n *         Area range chart\n * @sample {highstock} stock/demo/arearange/\n *         Area range chart\n *\n * @extends      plotOptions.area\n * @product      highcharts highstock\n * @excluding    stack, stacking\n * @requires     highcharts-more\n * @optionparent plotOptions.arearange\n *\n * @private\n */\nconst areaRangeSeriesOptions = {\n    /**\n     * @see [fillColor](#plotOptions.arearange.fillColor)\n     * @see [fillOpacity](#plotOptions.arearange.fillOpacity)\n     *\n     * @apioption plotOptions.arearange.color\n     */\n    /**\n     * @default   low\n     * @apioption plotOptions.arearange.colorKey\n     */\n    /**\n     * @see [color](#plotOptions.arearange.color)\n     * @see [fillOpacity](#plotOptions.arearange.fillOpacity)\n     *\n     * @apioption plotOptions.arearange.fillColor\n     */\n    /**\n     * @see [color](#plotOptions.arearange.color)\n     * @see [fillColor](#plotOptions.arearange.fillColor)\n     *\n     * @default   {highcharts} 0.75\n     * @default   {highstock} 0.75\n     * @apioption plotOptions.arearange.fillOpacity\n     */\n    /**\n     * Whether to apply a drop shadow to the graph line. Since 2.3 the\n     * shadow can be an object configuration containing `color`, `offsetX`,\n     * `offsetY`, `opacity` and `width`.\n     *\n     * @type      {boolean|Highcharts.ShadowOptionsObject}\n     * @product   highcharts\n     * @apioption plotOptions.arearange.shadow\n     */\n    /**\n     * Pixel width of the arearange graph line.\n     *\n     * @since 2.3.0\n     *\n     * @private\n     */\n    lineWidth: 1,\n    /**\n     * @type {number|null}\n     */\n    threshold: null,\n    tooltip: {\n        pointFormat: '<span style=\"color:{series.color}\">\\u25CF</span> ' +\n            '{series.name}: <b>{point.low}</b> - <b>{point.high}</b><br/>'\n    },\n    /**\n     * Whether the whole area or just the line should respond to mouseover\n     * tooltips and other mouse or touch events.\n     *\n     * @since 2.3.0\n     *\n     * @private\n     */\n    trackByArea: true,\n    /**\n     * Extended data labels for range series types. Range series data\n     * labels use no `x` and `y` options. Instead, they have `xLow`,\n     * `xHigh`, `yLow` and `yHigh` options to allow the higher and lower\n     * data label sets individually.\n     *\n     * @declare Highcharts.SeriesAreaRangeDataLabelsOptionsObject\n     * @exclude x, y\n     * @since   2.3.0\n     * @product highcharts highstock\n     *\n     * @private\n     */\n    dataLabels: {\n        align: void 0,\n        verticalAlign: void 0,\n        /**\n         * X offset of the lower data labels relative to the point value.\n         *\n         * @sample highcharts/plotoptions/arearange-datalabels/\n         *         Data labels on range series\n         * @sample highcharts/plotoptions/arearange-datalabels/\n         *         Data labels on range series\n         */\n        xLow: 0,\n        /**\n         * X offset of the higher data labels relative to the point value.\n         *\n         * @sample highcharts/plotoptions/arearange-datalabels/\n         *         Data labels on range series\n         */\n        xHigh: 0,\n        /**\n         * Y offset of the lower data labels relative to the point value.\n         *\n         * @sample highcharts/plotoptions/arearange-datalabels/\n         *         Data labels on range series\n         */\n        yLow: 0,\n        /**\n         * Y offset of the higher data labels relative to the point value.\n         *\n         * @sample highcharts/plotoptions/arearange-datalabels/\n         *         Data labels on range series\n         */\n        yHigh: 0\n    }\n};\n/* *\n *\n *  Class\n *\n * */\n/**\n * The AreaRange series type.\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.arearange\n *\n * @augments Highcharts.Series\n */\nclass AreaRangeSeries extends AreaSeries {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    toYData(point) {\n        return [point.low, point.high];\n    }\n    /**\n     * Translate a point's plotHigh from the internal angle and radius measures\n     * to true plotHigh coordinates. This is an addition of the toXY method\n     * found in Polar.js, because it runs too early for arearanges to be\n     * considered (#3419).\n     * @private\n     */\n    highToXY(point) {\n        // Find the polar plotX and plotY\n        const chart = this.chart, xy = this.xAxis.postTranslate(point.rectPlotX || 0, this.yAxis.len - (point.plotHigh || 0));\n        point.plotHighX = xy.x - chart.plotLeft;\n        point.plotHigh = xy.y - chart.plotTop;\n        point.plotLowX = point.plotX;\n    }\n    /**\n     * Extend the line series' getSegmentPath method by applying the segment\n     * path to both lower and higher values of the range.\n     * @private\n     */\n    getGraphPath(points) {\n        const highPoints = [], highAreaPoints = [], getGraphPath = AreaRangeSeries_areaProto.getGraphPath, options = this.options, polar = this.chart.polar, connectEnds = polar && options.connectEnds !== false, connectNulls = options.connectNulls;\n        let i, point, pointShim, step = options.step;\n        points = points || this.points;\n        // Create the top line and the top part of the area fill. The area fill\n        // compensates for null points by drawing down to the lower graph,\n        // moving across the null gap and starting again at the lower graph.\n        i = points.length;\n        while (i--) {\n            point = points[i];\n            // Support for polar\n            const highAreaPoint = polar ? {\n                plotX: point.rectPlotX,\n                plotY: point.yBottom,\n                doCurve: false // #5186, gaps in areasplinerange fill\n            } : {\n                plotX: point.plotX,\n                plotY: point.plotY,\n                doCurve: false // #5186, gaps in areasplinerange fill\n            };\n            if (!point.isNull &&\n                !connectEnds &&\n                !connectNulls &&\n                (!points[i + 1] || points[i + 1].isNull)) {\n                highAreaPoints.push(highAreaPoint);\n            }\n            pointShim = {\n                polarPlotY: point.polarPlotY,\n                rectPlotX: point.rectPlotX,\n                yBottom: point.yBottom,\n                // `plotHighX` is for polar charts\n                plotX: AreaRangeSeries_pick(point.plotHighX, point.plotX),\n                plotY: point.plotHigh,\n                isNull: point.isNull\n            };\n            highAreaPoints.push(pointShim);\n            highPoints.push(pointShim);\n            if (!point.isNull &&\n                !connectEnds &&\n                !connectNulls &&\n                (!points[i - 1] || points[i - 1].isNull)) {\n                highAreaPoints.push(highAreaPoint);\n            }\n        }\n        // Get the paths\n        const lowerPath = getGraphPath.call(this, points);\n        if (step) {\n            if (step === true) {\n                step = 'left';\n            }\n            options.step = {\n                left: 'right',\n                center: 'center',\n                right: 'left'\n            }[step]; // Swap for reading in getGraphPath\n        }\n        const higherPath = getGraphPath.call(this, highPoints);\n        const higherAreaPath = getGraphPath.call(this, highAreaPoints);\n        options.step = step;\n        // Create a line on both top and bottom of the range\n        const linePath = [].concat(lowerPath, higherPath);\n        // For the area path, we need to change the 'move' statement into\n        // 'lineTo'\n        if (!this.chart.polar &&\n            higherAreaPath[0] &&\n            higherAreaPath[0][0] === 'M') {\n            // This probably doesn't work for spline\n            higherAreaPath[0] = [\n                'L',\n                higherAreaPath[0][1],\n                higherAreaPath[0][2]\n            ];\n        }\n        this.graphPath = linePath;\n        this.areaPath = lowerPath.concat(higherAreaPath);\n        // Prepare for sideways animation\n        linePath.isArea = true;\n        linePath.xMap = lowerPath.xMap;\n        this.areaPath.xMap = lowerPath.xMap;\n        return linePath;\n    }\n    /**\n     * Extend the basic drawDataLabels method by running it for both lower and\n     * higher values.\n     * @private\n     */\n    drawDataLabels() {\n        const data = this.points, length = data.length, originalDataLabels = [], dataLabelOptions = this.options.dataLabels, inverted = this.chart.inverted;\n        let i, point, up, upperDataLabelOptions, lowerDataLabelOptions;\n        if (dataLabelOptions) {\n            // Split into upper and lower options. If data labels is an array,\n            // the first element is the upper label, the second is the lower.\n            //\n            // TODO: We want to change this and allow multiple labels for both\n            // upper and lower values in the future - introducing some options\n            // for which point value to use as Y for the dataLabel, so that this\n            // could be handled in Series.drawDataLabels. This would also\n            // improve performance since we now have to loop over all the points\n            // multiple times to work around the data label logic.\n            if (isArray(dataLabelOptions)) {\n                upperDataLabelOptions = dataLabelOptions[0] || {\n                    enabled: false\n                };\n                lowerDataLabelOptions = dataLabelOptions[1] || {\n                    enabled: false\n                };\n            }\n            else {\n                // Make copies\n                upperDataLabelOptions = AreaRangeSeries_extend({}, dataLabelOptions);\n                upperDataLabelOptions.x = dataLabelOptions.xHigh;\n                upperDataLabelOptions.y = dataLabelOptions.yHigh;\n                lowerDataLabelOptions = AreaRangeSeries_extend({}, dataLabelOptions);\n                lowerDataLabelOptions.x = dataLabelOptions.xLow;\n                lowerDataLabelOptions.y = dataLabelOptions.yLow;\n            }\n            // Draw upper labels\n            if (upperDataLabelOptions.enabled || this.hasDataLabels?.()) {\n                // Set preliminary values for plotY and dataLabel\n                // and draw the upper labels\n                i = length;\n                while (i--) {\n                    point = data[i];\n                    if (point) {\n                        const { plotHigh = 0, plotLow = 0 } = point;\n                        up = upperDataLabelOptions.inside ?\n                            plotHigh < plotLow :\n                            plotHigh > plotLow;\n                        point.y = point.high;\n                        point._plotY = point.plotY;\n                        point.plotY = plotHigh;\n                        // Store original data labels and set preliminary label\n                        // objects to be picked up in the uber method\n                        originalDataLabels[i] = point.dataLabel;\n                        point.dataLabel = point.dataLabelUpper;\n                        // Set the default offset\n                        point.below = up;\n                        if (inverted) {\n                            if (!upperDataLabelOptions.align) {\n                                upperDataLabelOptions.align = up ?\n                                    'right' : 'left';\n                            }\n                        }\n                        else {\n                            if (!upperDataLabelOptions.verticalAlign) {\n                                upperDataLabelOptions.verticalAlign = up ?\n                                    'top' :\n                                    'bottom';\n                            }\n                        }\n                    }\n                }\n                this.options.dataLabels = upperDataLabelOptions;\n                if (AreaRangeSeries_areaProto.drawDataLabels) {\n                    // #1209:\n                    AreaRangeSeries_areaProto.drawDataLabels.apply(this, arguments);\n                }\n                // Reset state after the upper labels were created. Move\n                // it to point.dataLabelUpper and reassign the originals.\n                // We do this here to support not drawing a lower label.\n                i = length;\n                while (i--) {\n                    point = data[i];\n                    if (point) {\n                        point.dataLabelUpper = point.dataLabel;\n                        point.dataLabel = originalDataLabels[i];\n                        delete point.dataLabels;\n                        point.y = point.low;\n                        point.plotY = point._plotY;\n                    }\n                }\n            }\n            // Draw lower labels\n            if (lowerDataLabelOptions.enabled || this.hasDataLabels?.()) {\n                i = length;\n                while (i--) {\n                    point = data[i];\n                    if (point) {\n                        const { plotHigh = 0, plotLow = 0 } = point;\n                        up = lowerDataLabelOptions.inside ?\n                            plotHigh < plotLow :\n                            plotHigh > plotLow;\n                        // Set the default offset\n                        point.below = !up;\n                        if (inverted) {\n                            if (!lowerDataLabelOptions.align) {\n                                lowerDataLabelOptions.align = up ?\n                                    'left' : 'right';\n                            }\n                        }\n                        else {\n                            if (!lowerDataLabelOptions.verticalAlign) {\n                                lowerDataLabelOptions.verticalAlign = up ?\n                                    'bottom' :\n                                    'top';\n                            }\n                        }\n                    }\n                }\n                this.options.dataLabels = lowerDataLabelOptions;\n                if (AreaRangeSeries_areaProto.drawDataLabels) {\n                    AreaRangeSeries_areaProto.drawDataLabels.apply(this, arguments);\n                }\n            }\n            // Merge upper and lower into point.dataLabels for later destroying\n            if (upperDataLabelOptions.enabled) {\n                i = length;\n                while (i--) {\n                    point = data[i];\n                    if (point) {\n                        point.dataLabels = [\n                            point.dataLabelUpper,\n                            point.dataLabel\n                        ].filter(function (label) {\n                            return !!label;\n                        });\n                    }\n                }\n            }\n            // Reset options\n            this.options.dataLabels = dataLabelOptions;\n        }\n    }\n    alignDataLabel() {\n        columnProto.alignDataLabel.apply(this, arguments);\n    }\n    modifyMarkerSettings() {\n        const series = this, originalMarkerSettings = {\n            marker: series.options.marker,\n            symbol: series.symbol\n        };\n        if (series.options.lowMarker) {\n            const { options: { marker, lowMarker } } = series;\n            series.options.marker = AreaRangeSeries_merge(marker, lowMarker);\n            if (lowMarker.symbol) {\n                series.symbol = lowMarker.symbol;\n            }\n        }\n        return originalMarkerSettings;\n    }\n    restoreMarkerSettings(originalSettings) {\n        const series = this;\n        series.options.marker = originalSettings.marker;\n        series.symbol = originalSettings.symbol;\n    }\n    drawPoints() {\n        const series = this, pointLength = series.points.length;\n        let i, point;\n        const originalSettings = series.modifyMarkerSettings();\n        // Draw bottom points\n        AreaRangeSeries_areaProto.drawPoints.apply(series, arguments);\n        // Restore previous state\n        series.restoreMarkerSettings(originalSettings);\n        // Prepare drawing top points\n        i = 0;\n        while (i < pointLength) {\n            point = series.points[i];\n            /**\n             * Array for multiple SVG graphics representing the point in the\n             * chart. Only used in cases where the point can not be represented\n             * by a single graphic.\n             *\n             * @see Highcharts.Point#graphic\n             *\n             * @name Highcharts.Point#graphics\n             * @type {Array<Highcharts.SVGElement>|undefined}\n             */\n            point.graphics = point.graphics || [];\n            // Save original props to be overridden by temporary props for top\n            // points\n            point.origProps = {\n                plotY: point.plotY,\n                plotX: point.plotX,\n                isInside: point.isInside,\n                negative: point.negative,\n                zone: point.zone,\n                y: point.y\n            };\n            if (point.graphic || point.graphics[0]) {\n                point.graphics[0] = point.graphic;\n            }\n            point.graphic = point.graphics[1];\n            point.plotY = point.plotHigh;\n            if (AreaRangeSeries_defined(point.plotHighX)) {\n                point.plotX = point.plotHighX;\n            }\n            point.y = AreaRangeSeries_pick(point.high, point.origProps.y); // #15523\n            point.negative = point.y < (series.options.threshold || 0);\n            if (series.zones.length) {\n                point.zone = point.getZone();\n            }\n            if (!series.chart.polar) {\n                point.isInside = point.isTopInside = (typeof point.plotY !== 'undefined' &&\n                    point.plotY >= 0 &&\n                    point.plotY <= series.yAxis.len && // #3519\n                    point.plotX >= 0 &&\n                    point.plotX <= series.xAxis.len);\n            }\n            i++;\n        }\n        // Draw top points\n        AreaRangeSeries_areaProto.drawPoints.apply(series, arguments);\n        // Reset top points preliminary modifications\n        i = 0;\n        while (i < pointLength) {\n            point = series.points[i];\n            point.graphics = point.graphics || [];\n            if (point.graphic || point.graphics[1]) {\n                point.graphics[1] = point.graphic;\n            }\n            point.graphic = point.graphics[0];\n            if (point.origProps) {\n                AreaRangeSeries_extend(point, point.origProps);\n                delete point.origProps;\n            }\n            i++;\n        }\n    }\n    hasMarkerChanged(options, oldOptions) {\n        const lowMarker = options.lowMarker, oldMarker = oldOptions.lowMarker || {};\n        return (lowMarker && (lowMarker.enabled === false ||\n            oldMarker.symbol !== lowMarker.symbol || // #10870, #15946\n            oldMarker.height !== lowMarker.height || // #16274\n            oldMarker.width !== lowMarker.width // #16274\n        )) || super.hasMarkerChanged(options, oldOptions);\n    }\n}\n/**\n *\n *  Static Properties\n *\n */\nAreaRangeSeries.defaultOptions = AreaRangeSeries_merge(AreaSeries.defaultOptions, areaRangeSeriesOptions);\nAreaRangeSeries_addEvent(AreaRangeSeries, 'afterTranslate', function () {\n    // Set plotLow and plotHigh\n    // Rules out lollipop, but lollipop should not inherit range series in the\n    // first place\n    if (this.pointArrayMap.join(',') === 'low,high') {\n        this.points.forEach((point) => {\n            const high = point.high, plotY = point.plotY;\n            if (point.isNull) {\n                point.plotY = void 0;\n            }\n            else {\n                point.plotLow = plotY;\n                // Calculate plotHigh value based on each yAxis scale (#15752)\n                point.plotHigh = AreaRangeSeries_isNumber(high) ? this.yAxis.translate(this.dataModify ?\n                    this.dataModify.modifyValue(high) : high, false, true, void 0, true) : void 0;\n                if (this.dataModify) {\n                    point.yBottom = point.plotHigh;\n                }\n            }\n        });\n    }\n}, { order: 0 });\nAreaRangeSeries_addEvent(AreaRangeSeries, 'afterTranslate', function () {\n    this.points.forEach((point) => {\n        // Postprocessing after the PolarComposition's afterTranslate\n        if (this.chart.polar) {\n            this.highToXY(point);\n            point.plotLow = point.plotY;\n            point.tooltipPos = [\n                ((point.plotHighX || 0) + (point.plotLowX || 0)) / 2,\n                ((point.plotHigh || 0) + (point.plotLow || 0)) / 2\n            ];\n            // Put the tooltip in the middle of the range\n        }\n        else {\n            const tooltipPos = point.pos(false, point.plotLow), posHigh = point.pos(false, point.plotHigh);\n            if (tooltipPos && posHigh) {\n                tooltipPos[0] = (tooltipPos[0] + posHigh[0]) / 2;\n                tooltipPos[1] = (tooltipPos[1] + posHigh[1]) / 2;\n            }\n            point.tooltipPos = tooltipPos;\n        }\n    });\n}, { order: 3 });\nAreaRangeSeries_extend(AreaRangeSeries.prototype, {\n    deferTranslatePolar: true,\n    pointArrayMap: ['low', 'high'],\n    pointClass: AreaRange_AreaRangePoint,\n    pointValKey: 'low',\n    setStackedPoints: noop\n});\nhighcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType('arearange', AreaRangeSeries);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const AreaRange_AreaRangeSeries = (AreaRangeSeries);\n\n;// ./code/es-modules/Series/AreaSplineRange/AreaSplineRangeSeries.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { spline: { prototype: splineProto } } = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default()).seriesTypes;\n\nconst { merge: AreaSplineRangeSeries_merge, extend: AreaSplineRangeSeries_extend } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * The areasplinerange series type.\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.areasplinerange\n *\n * @augments Highcharts.Series\n */\nclass AreaSplineRangeSeries extends AreaRange_AreaRangeSeries {\n}\n/* *\n *\n *  Static Properties\n *\n * */\nAreaSplineRangeSeries.defaultOptions = AreaSplineRangeSeries_merge(AreaRange_AreaRangeSeries.defaultOptions);\nAreaSplineRangeSeries_extend(AreaSplineRangeSeries.prototype, {\n    getPointSpline: splineProto.getPointSpline\n});\nhighcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType('areasplinerange', AreaSplineRangeSeries);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const AreaSplineRange_AreaSplineRangeSeries = ((/* unused pure expression or super */ null && (AreaSplineRangeSeries)));\n/* *\n *\n *  API Options\n *\n * */\n/**\n * The area spline range is a cartesian series type with higher and\n * lower Y values along an X axis. The area inside the range is colored, and\n * the graph outlining the area is a smoothed spline.\n *\n * @sample {highstock|highstock} stock/demo/areasplinerange/\n *         Area spline range\n *\n * @extends   plotOptions.arearange\n * @since     2.3.0\n * @excluding step, boostThreshold, boostBlending\n * @product   highcharts highstock\n * @requires  highcharts-more\n * @apioption plotOptions.areasplinerange\n */\n/**\n * @see [fillColor](#plotOptions.areasplinerange.fillColor)\n * @see [fillOpacity](#plotOptions.areasplinerange.fillOpacity)\n *\n * @apioption plotOptions.areasplinerange.color\n */\n/**\n * @see [color](#plotOptions.areasplinerange.color)\n * @see [fillOpacity](#plotOptions.areasplinerange.fillOpacity)\n *\n * @apioption plotOptions.areasplinerange.fillColor\n */\n/**\n * @see [color](#plotOptions.areasplinerange.color)\n * @see [fillColor](#plotOptions.areasplinerange.fillColor)\n *\n * @default   0.75\n * @apioption plotOptions.areasplinerange.fillOpacity\n */\n/**\n * A `areasplinerange` series. If the [type](#series.areasplinerange.type)\n * option is not specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.areasplinerange\n * @excluding dataParser, dataURL, stack, step, boostThreshold, boostBlending\n * @product   highcharts highstock\n * @requires  highcharts-more\n * @apioption series.areasplinerange\n */\n/**\n * @see [fillColor](#series.areasplinerange.fillColor)\n * @see [fillOpacity](#series.areasplinerange.fillOpacity)\n *\n * @apioption series.areasplinerange.color\n */\n/**\n * An array of data points for the series. For the `areasplinerange`\n * series type, points can be given in the following ways:\n *\n * 1. An array of arrays with 3 or 2 values. In this case, the values correspond\n *    to `x,low,high`. If the first value is a string, it is applied as the name\n *    of the point, and the `x` value is inferred. The `x` value can also be\n *    omitted, in which case the inner arrays should be of length 2\\. Then the\n *    `x` value is automatically calculated, either starting at 0 and\n *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n *    series options.\n *    ```js\n *    data: [\n *        [0, 0, 5],\n *        [1, 9, 1],\n *        [2, 5, 2]\n *    ]\n *    ```\n *\n * 2. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.areasplinerange.turboThreshold), this option is\n *    not available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        low: 5,\n *        high: 0,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        low: 4,\n *        high: 1,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @sample {highcharts} highcharts/series/data-array-of-arrays/\n *         Arrays of numeric x and y\n * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n *         Arrays of datetime x and y\n * @sample {highcharts} highcharts/series/data-array-of-name-value/\n *         Arrays of point.name and y\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<Array<(number|string),number>|Array<(number|string),number,number>|*>}\n * @extends   series.arearange.data\n * @product   highcharts highstock\n * @apioption series.areasplinerange.data\n */\n/**\n * @see [color](#series.areasplinerange.color)\n * @see [fillOpacity](#series.areasplinerange.fillOpacity)\n *\n * @apioption series.areasplinerange.fillColor\n */\n/**\n * @see [color](#series.areasplinerange.color)\n * @see [fillColor](#series.areasplinerange.fillColor)\n *\n * @default   0.75\n * @apioption series.areasplinerange.fillOpacity\n */\n''; // Adds doclets above to transpiled file\n\n;// ./code/es-modules/Series/BoxPlot/BoxPlotSeriesDefaults.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A box plot is a convenient way of depicting groups of data through their\n * five-number summaries: the smallest observation (sample minimum), lower\n * quartile (Q1), median (Q2), upper quartile (Q3), and largest observation\n * (sample maximum).\n *\n * @sample highcharts/demo/box-plot/\n *         Box plot\n * @sample {highcharts} highcharts/css/boxplot/\n *         Box plot in styled mode\n * @sample {highcharts} highcharts/series-scatter/jitter-boxplot\n *         Jittered scatter plot on top of a box plot\n *\n * @extends      plotOptions.column\n * @excluding    borderColor, borderRadius, borderWidth, groupZPadding,\n *               states, boostThreshold, boostBlending\n * @product      highcharts\n * @requires     highcharts-more\n * @optionparent plotOptions.boxplot\n */\nconst BoxPlotSeriesDefaults = {\n    /**\n     * @type {number|null}\n     */\n    threshold: null,\n    tooltip: {\n        pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> <b>' +\n            '{series.name}</b><br/>' +\n            'Maximum: {point.high}<br/>' +\n            'Upper quartile: {point.q3}<br/>' +\n            'Median: {point.median}<br/>' +\n            'Lower quartile: {point.q1}<br/>' +\n            'Minimum: {point.low}<br/>'\n    },\n    /**\n     * The length of the whiskers, the horizontal lines marking low and\n     * high values. It can be a numerical pixel value, or a percentage\n     * value of the box width. Set `0` to disable whiskers.\n     *\n     * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n     *         Box plot styling\n     *\n     * @type    {number|string}\n     * @since   3.0\n     * @product highcharts\n     */\n    whiskerLength: '50%',\n    /**\n     * The fill color of the box.\n     *\n     * In styled mode, the fill color can be set with the\n     * `.highcharts-boxplot-box` class.\n     *\n     * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n     *         Box plot styling\n     *\n     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @default #ffffff\n     * @since   3.0\n     * @product highcharts\n     */\n    fillColor: \"#ffffff\" /* Palette.backgroundColor */,\n    /**\n     * The width of the line surrounding the box. If any of\n     * [stemWidth](#plotOptions.boxplot.stemWidth),\n     * [medianWidth](#plotOptions.boxplot.medianWidth)\n     * or [whiskerWidth](#plotOptions.boxplot.whiskerWidth) are `null`,\n     * the lineWidth also applies to these lines.\n     *\n     * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n     *         Box plot styling\n     * @sample {highcharts} highcharts/plotoptions/error-bar-styling/\n     *         Error bar styling\n     *\n     * @since   3.0\n     * @product highcharts\n     */\n    lineWidth: 1,\n    /**\n     * The color of the median line. If `undefined`, the general series\n     * color applies.\n     *\n     * In styled mode, the median stroke width can be set with the\n     * `.highcharts-boxplot-median` class.\n     *\n     * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n     *         Box plot styling\n     * @sample {highcharts} highcharts/css/boxplot/\n     *         Box plot in styled mode\n     * @sample {highcharts} highcharts/plotoptions/error-bar-styling/\n     *         Error bar styling\n     *\n     * @type      {Highcharts.ColorString|Highcharts.GradientColorObject}\n     * @since     3.0\n     * @product   highcharts\n     * @apioption plotOptions.boxplot.medianColor\n     */\n    /**\n     * The pixel width of the median line. If `null`, the\n     * [lineWidth](#plotOptions.boxplot.lineWidth) is used.\n     *\n     * In styled mode, the median stroke width can be set with the\n     * `.highcharts-boxplot-median` class.\n     *\n     * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n     *         Box plot styling\n     * @sample {highcharts} highcharts/css/boxplot/\n     *         Box plot in styled mode\n     *\n     * @type    {number|null}\n     * @since   3.0\n     * @product highcharts\n     */\n    medianWidth: 2,\n    /*\n    // States are not working and are removed from docs.\n    // Refer to: #2340\n    states: {\n        hover: {\n            brightness: -0.3\n        }\n    },\n    */\n    /**\n     * The color of the stem, the vertical line extending from the box to\n     * the whiskers. If `undefined`, the series color is used.\n     *\n     * In styled mode, the stem stroke can be set with the\n     * `.highcharts-boxplot-stem` class.\n     *\n     * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n     *         Box plot styling\n     * @sample {highcharts} highcharts/css/boxplot/\n     *         Box plot in styled mode\n     * @sample {highcharts} highcharts/plotoptions/error-bar-styling/\n     *         Error bar styling\n     *\n     * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @since     3.0\n     * @product   highcharts\n     * @apioption plotOptions.boxplot.stemColor\n     */\n    /**\n     * The dash style of the box.\n     *\n     * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n     *         Box plot styling\n     * @sample {highcharts} highcharts/css/boxplot/\n     *         Box plot in styled mode\n     *\n     * @type      {Highcharts.DashStyleValue}\n     * @default   Solid\n     * @since 8.1.0\n     * @product   highcharts\n     * @apioption plotOptions.boxplot.boxDashStyle\n     */\n    /**\n     * The dash style of the median.\n     *\n     * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n     *         Box plot styling\n     * @sample {highcharts} highcharts/css/boxplot/\n     *         Box plot in styled mode\n     *\n     * @type      {Highcharts.DashStyleValue}\n     * @default   Solid\n     * @since 8.1.0\n     * @product   highcharts\n     * @apioption plotOptions.boxplot.medianDashStyle\n     */\n    /**\n     * The dash style of the stem, the vertical line extending from the\n     * box to the whiskers.\n     *\n     * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n     *         Box plot styling\n     * @sample {highcharts} highcharts/css/boxplot/\n     *         Box plot in styled mode\n     * @sample {highcharts} highcharts/plotoptions/error-bar-styling/\n     *         Error bar styling\n     *\n     * @type      {Highcharts.DashStyleValue}\n     * @default   Solid\n     * @since     3.0\n     * @product   highcharts\n     * @apioption plotOptions.boxplot.stemDashStyle\n     */\n    /**\n     * The dash style of the whiskers.\n     *\n     * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n     *         Box plot styling\n     * @sample {highcharts} highcharts/css/boxplot/\n     *         Box plot in styled mode\n     *\n     * @type      {Highcharts.DashStyleValue}\n     * @default   Solid\n     * @since 8.1.0\n     * @product   highcharts\n     * @apioption plotOptions.boxplot.whiskerDashStyle\n     */\n    /**\n     * The width of the stem, the vertical line extending from the box to\n     * the whiskers. If `undefined`, the width is inherited from the\n     * [lineWidth](#plotOptions.boxplot.lineWidth) option.\n     *\n     * In styled mode, the stem stroke width can be set with the\n     * `.highcharts-boxplot-stem` class.\n     *\n     * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n     *         Box plot styling\n     * @sample {highcharts} highcharts/css/boxplot/\n     *         Box plot in styled mode\n     * @sample {highcharts} highcharts/plotoptions/error-bar-styling/\n     *         Error bar styling\n     *\n     * @type      {number}\n     * @since     3.0\n     * @product   highcharts\n     * @apioption plotOptions.boxplot.stemWidth\n     */\n    /**\n     * @default   high\n     * @apioption plotOptions.boxplot.colorKey\n     */\n    /**\n     * The color of the whiskers, the horizontal lines marking low and high\n     * values. When `undefined`, the general series color is used.\n     *\n     * In styled mode, the whisker stroke can be set with the\n     * `.highcharts-boxplot-whisker` class .\n     *\n     * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n     *         Box plot styling\n     * @sample {highcharts} highcharts/css/boxplot/\n     *         Box plot in styled mode\n     *\n     * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @since     3.0\n     * @product   highcharts\n     * @apioption plotOptions.boxplot.whiskerColor\n     */\n    /**\n     * The line width of the whiskers, the horizontal lines marking low and\n     * high values. When `undefined`, the general\n     * [lineWidth](#plotOptions.boxplot.lineWidth) applies.\n     *\n     * In styled mode, the whisker stroke width can be set with the\n     * `.highcharts-boxplot-whisker` class.\n     *\n     * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n     *         Box plot styling\n     * @sample {highcharts} highcharts/css/boxplot/\n     *         Box plot in styled mode\n     *\n     * @since   3.0\n     * @product highcharts\n     */\n    whiskerWidth: 2\n};\n/**\n * A `boxplot` series. If the [type](#series.boxplot.type) option is\n * not specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.boxplot\n * @excluding dataParser, dataURL, marker, stack, stacking, states,\n *            boostThreshold, boostBlending\n * @product   highcharts\n * @requires  highcharts-more\n * @apioption series.boxplot\n */\n/**\n * An array of data points for the series. For the `boxplot` series\n * type, points can be given in the following ways:\n *\n * 1. An array of arrays with 6 or 5 values. In this case, the values correspond\n *    to `x,low,q1,median,q3,high`. If the first value is a string, it is\n *    applied as the name of the point, and the `x` value is inferred. The `x`\n *    value can also be omitted, in which case the inner arrays should be of\n *    length 5. Then the `x` value is automatically calculated, either starting\n *    at 0 and incremented by 1, or from `pointStart` and `pointInterval` given\n *    in the series options.\n *    ```js\n *    data: [\n *        [0, 3, 0, 10, 3, 5],\n *        [1, 7, 8, 7, 2, 9],\n *        [2, 6, 9, 5, 1, 3]\n *    ]\n *    ```\n *\n * 2. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.boxplot.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        low: 4,\n *        q1: 9,\n *        median: 9,\n *        q3: 1,\n *        high: 10,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        low: 5,\n *        q1: 7,\n *        median: 3,\n *        q3: 6,\n *        high: 2,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @sample {highcharts} highcharts/series/data-array-of-arrays/\n *         Arrays of numeric x and y\n * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n *         Arrays of datetime x and y\n * @sample {highcharts} highcharts/series/data-array-of-name-value/\n *         Arrays of point.name and y\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<Array<(number|string),number,number,number,number>|Array<(number|string),number,number,number,number,number>|*>}\n * @extends   series.line.data\n * @excluding marker\n * @product   highcharts\n * @apioption series.boxplot.data\n */\n/**\n * The `high` value for each data point, signifying the highest value\n * in the sample set. The top whisker is drawn here.\n *\n * @type      {number}\n * @product   highcharts\n * @apioption series.boxplot.data.high\n */\n/**\n * The `low` value for each data point, signifying the lowest value\n * in the sample set. The bottom whisker is drawn here.\n *\n * @type      {number}\n * @product   highcharts\n * @apioption series.boxplot.data.low\n */\n/**\n * The median for each data point. This is drawn as a line through the\n * middle area of the box.\n *\n * @type      {number}\n * @product   highcharts\n * @apioption series.boxplot.data.median\n */\n/**\n * The lower quartile for each data point. This is the bottom of the\n * box.\n *\n * @type      {number}\n * @product   highcharts\n * @apioption series.boxplot.data.q1\n */\n/**\n * The higher quartile for each data point. This is the top of the box.\n *\n * @type      {number}\n * @product   highcharts\n * @apioption series.boxplot.data.q3\n */\n/**\n * The dash style of the box.\n *\n * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n *         Box plot styling\n * @sample {highcharts} highcharts/css/boxplot/\n *         Box plot in styled mode\n *\n * @type      {Highcharts.DashStyleValue}\n * @default   Solid\n * @since 8.1.0\n * @product   highcharts\n * @apioption series.boxplot.data.boxDashStyle\n */\n/**\n * The dash style of the median.\n *\n * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n *         Box plot styling\n * @sample {highcharts} highcharts/css/boxplot/\n *         Box plot in styled mode\n *\n * @type      {Highcharts.DashStyleValue}\n * @default   Solid\n * @since 8.1.0\n * @product   highcharts\n * @apioption series.boxplot.data.medianDashStyle\n */\n/**\n * The dash style of the stem.\n *\n * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n *         Box plot styling\n * @sample {highcharts} highcharts/css/boxplot/\n *         Box plot in styled mode\n *\n * @type      {Highcharts.DashStyleValue}\n * @default   Solid\n * @since 8.1.0\n * @product   highcharts\n * @apioption series.boxplot.data.stemDashStyle\n */\n/**\n * The dash style of the whiskers.\n *\n * @sample {highcharts} highcharts/plotoptions/box-plot-styling/\n *         Box plot styling\n * @sample {highcharts} highcharts/css/boxplot/\n *         Box plot in styled mode\n *\n * @type      {Highcharts.DashStyleValue}\n * @default   Solid\n * @since 8.1.0\n * @product   highcharts\n * @apioption series.boxplot.data.whiskerDashStyle\n */\n''; // Keeps doclets above separate\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const BoxPlot_BoxPlotSeriesDefaults = (BoxPlotSeriesDefaults);\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"Series\",\"types\",\"column\"],\"commonjs\":[\"highcharts\",\"Series\",\"types\",\"column\"],\"commonjs2\":[\"highcharts\",\"Series\",\"types\",\"column\"],\"root\":[\"Highcharts\",\"Series\",\"types\",\"column\"]}\nvar highcharts_Series_types_column_commonjs_highcharts_Series_types_column_commonjs2_highcharts_Series_types_column_root_Highcharts_Series_types_column_ = __webpack_require__(448);\nvar highcharts_Series_types_column_commonjs_highcharts_Series_types_column_commonjs2_highcharts_Series_types_column_root_Highcharts_Series_types_column_default = /*#__PURE__*/__webpack_require__.n(highcharts_Series_types_column_commonjs_highcharts_Series_types_column_commonjs2_highcharts_Series_types_column_root_Highcharts_Series_types_column_);\n;// ./code/es-modules/Series/BoxPlot/BoxPlotSeries.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\nconst { noop: BoxPlotSeries_noop } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\n\nconst { crisp, extend: BoxPlotSeries_extend, merge: BoxPlotSeries_merge, pick: BoxPlotSeries_pick, relativeLength: BoxPlotSeries_relativeLength } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * The boxplot series type.\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes#boxplot\n *\n * @augments Highcharts.Series\n */\nclass BoxPlotSeries extends (highcharts_Series_types_column_commonjs_highcharts_Series_types_column_commonjs2_highcharts_Series_types_column_root_Highcharts_Series_types_column_default()) {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    // Get presentational attributes\n    pointAttribs() {\n        // No attributes should be set on point.graphic which is the group\n        return {};\n    }\n    // Get an SVGPath object for both whiskers\n    getWhiskerPair(halfWidth, stemX, upperWhiskerLength, lowerWhiskerLength, point) {\n        const strokeWidth = point.whiskers.strokeWidth(), getWhisker = (xLen, yPos) => {\n            const halfLen = BoxPlotSeries_relativeLength(xLen, 2 * halfWidth) / 2, crispedYPos = crisp(yPos, strokeWidth);\n            return [\n                [\n                    'M',\n                    crisp(stemX - halfLen),\n                    crispedYPos\n                ],\n                [\n                    'L',\n                    crisp(stemX + halfLen),\n                    crispedYPos\n                ]\n            ];\n        };\n        return [\n            ...getWhisker(upperWhiskerLength, point.highPlot),\n            ...getWhisker(lowerWhiskerLength, point.lowPlot)\n        ];\n    }\n    // Translate data points from raw values x and y to plotX and plotY\n    translate() {\n        const series = this, yAxis = series.yAxis, pointArrayMap = series.pointArrayMap;\n        super.translate.apply(series);\n        // Do the translation on each point dimension\n        series.points.forEach(function (point) {\n            pointArrayMap.forEach(function (key) {\n                if (point[key] !== null) {\n                    point[key + 'Plot'] = yAxis.translate(point[key], 0, 1, 0, 1);\n                }\n            });\n            point.plotHigh = point.highPlot; // For data label validation\n        });\n    }\n    /**\n     * Draw the data points\n     * @private\n     */\n    drawPoints() {\n        const series = this, points = series.points, options = series.options, chart = series.chart, renderer = chart.renderer, \n        // Error bar inherits this series type but doesn't do quartiles\n        doQuartiles = series.doQuartiles !== false, whiskerLength = series.options.whiskerLength;\n        let q1Plot, q3Plot, highPlot, lowPlot, medianPlot, medianPath, boxPath, graphic, width, x, right;\n        for (const point of points) {\n            graphic = point.graphic;\n            const verb = graphic ? 'animate' : 'attr', shapeArgs = point.shapeArgs, boxAttr = {}, stemAttr = {}, whiskersAttr = {}, medianAttr = {}, color = point.color || series.color, pointWhiskerLength = (point.options.whiskerLength ||\n                whiskerLength);\n            if (typeof point.plotY !== 'undefined') {\n                // Vector coordinates\n                width = shapeArgs.width;\n                x = shapeArgs.x;\n                right = x + width;\n                q1Plot = doQuartiles ? point.q1Plot : point.lowPlot;\n                q3Plot = doQuartiles ? point.q3Plot : point.lowPlot;\n                highPlot = point.highPlot;\n                lowPlot = point.lowPlot;\n                if (!graphic) {\n                    point.graphic = graphic = renderer.g('point')\n                        .add(series.group);\n                    point.stem = renderer.path()\n                        .addClass('highcharts-boxplot-stem')\n                        .add(graphic);\n                    if (whiskerLength) {\n                        point.whiskers = renderer.path()\n                            .addClass('highcharts-boxplot-whisker')\n                            .add(graphic);\n                    }\n                    if (doQuartiles) {\n                        point.box = renderer.path(boxPath)\n                            .addClass('highcharts-boxplot-box')\n                            .add(graphic);\n                    }\n                    point.medianShape = renderer.path(medianPath)\n                        .addClass('highcharts-boxplot-median')\n                        .add(graphic);\n                }\n                if (!chart.styledMode) {\n                    // Stem attributes\n                    stemAttr.stroke =\n                        point.stemColor || options.stemColor || color;\n                    stemAttr['stroke-width'] = BoxPlotSeries_pick(point.stemWidth, options.stemWidth, options.lineWidth);\n                    stemAttr.dashstyle = (point.stemDashStyle ||\n                        options.stemDashStyle ||\n                        options.dashStyle);\n                    point.stem.attr(stemAttr);\n                    // Whiskers attributes\n                    if (pointWhiskerLength) {\n                        whiskersAttr.stroke = (point.whiskerColor ||\n                            options.whiskerColor ||\n                            color);\n                        whiskersAttr['stroke-width'] = BoxPlotSeries_pick(point.whiskerWidth, options.whiskerWidth, options.lineWidth);\n                        whiskersAttr.dashstyle = (point.whiskerDashStyle ||\n                            options.whiskerDashStyle ||\n                            options.dashStyle);\n                        point.whiskers.attr(whiskersAttr);\n                    }\n                    if (doQuartiles) {\n                        boxAttr.fill = (point.fillColor ||\n                            options.fillColor ||\n                            color);\n                        boxAttr.stroke = options.lineColor || color;\n                        boxAttr['stroke-width'] = options.lineWidth || 0;\n                        boxAttr.dashstyle = (point.boxDashStyle ||\n                            options.boxDashStyle ||\n                            options.dashStyle);\n                        point.box.attr(boxAttr);\n                    }\n                    // Median attributes\n                    medianAttr.stroke = (point.medianColor ||\n                        options.medianColor ||\n                        color);\n                    medianAttr['stroke-width'] = BoxPlotSeries_pick(point.medianWidth, options.medianWidth, options.lineWidth);\n                    medianAttr.dashstyle = (point.medianDashStyle ||\n                        options.medianDashStyle ||\n                        options.dashStyle);\n                    point.medianShape.attr(medianAttr);\n                }\n                let d;\n                // The stem\n                const stemX = crisp((point.plotX || 0) + (series.pointXOffset || 0) +\n                    ((series.barW || 0) / 2), point.stem.strokeWidth());\n                d = [\n                    // Stem up\n                    ['M', stemX, q3Plot],\n                    ['L', stemX, highPlot],\n                    // Stem down\n                    ['M', stemX, q1Plot],\n                    ['L', stemX, lowPlot]\n                ];\n                point.stem[verb]({ d });\n                // The box\n                if (doQuartiles) {\n                    const boxStrokeWidth = point.box.strokeWidth();\n                    q1Plot = crisp(q1Plot, boxStrokeWidth);\n                    q3Plot = crisp(q3Plot, boxStrokeWidth);\n                    x = crisp(x, boxStrokeWidth);\n                    right = crisp(right, boxStrokeWidth);\n                    d = [\n                        ['M', x, q3Plot],\n                        ['L', x, q1Plot],\n                        ['L', right, q1Plot],\n                        ['L', right, q3Plot],\n                        ['L', x, q3Plot],\n                        ['Z']\n                    ];\n                    point.box[verb]({ d });\n                }\n                // The whiskers\n                if (pointWhiskerLength) {\n                    const halfWidth = width / 2, whiskers = this.getWhiskerPair(halfWidth, stemX, (point.upperWhiskerLength ??\n                        options.upperWhiskerLength ??\n                        pointWhiskerLength), (point.lowerWhiskerLength ??\n                        options.lowerWhiskerLength ??\n                        pointWhiskerLength), point);\n                    point.whiskers[verb]({ d: whiskers });\n                }\n                // The median\n                medianPlot = crisp(point.medianPlot, point.medianShape.strokeWidth());\n                d = [\n                    ['M', x, medianPlot],\n                    ['L', right, medianPlot]\n                ];\n                point.medianShape[verb]({ d });\n            }\n        }\n    }\n    // Return a plain array for speedy calculation\n    toYData(point) {\n        return [point.low, point.q1, point.median, point.q3, point.high];\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\nBoxPlotSeries.defaultOptions = BoxPlotSeries_merge((highcharts_Series_types_column_commonjs_highcharts_Series_types_column_commonjs2_highcharts_Series_types_column_root_Highcharts_Series_types_column_default()).defaultOptions, BoxPlot_BoxPlotSeriesDefaults);\nBoxPlotSeries_extend(BoxPlotSeries.prototype, {\n    // Array point configs are mapped to this\n    pointArrayMap: ['low', 'q1', 'median', 'q3', 'high'],\n    // Defines the top of the tracker\n    pointValKey: 'high',\n    // Disable data labels for box plot\n    drawDataLabels: BoxPlotSeries_noop,\n    setStackedPoints: BoxPlotSeries_noop // #3890\n});\nhighcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType('boxplot', BoxPlotSeries);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const BoxPlot_BoxPlotSeries = (BoxPlotSeries);\n\n;// ./code/es-modules/Series/Bubble/BubbleLegendDefaults.js\n/* *\n *\n *  (c) 2010-2025 Highsoft AS\n *\n *  Author: Paweł Potaczek\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Constants\n *\n * */\n/**\n * The bubble legend is an additional element in legend which\n * presents the scale of the bubble series. Individual bubble ranges\n * can be defined by user or calculated from series. In the case of\n * automatically calculated ranges, a 1px margin of error is\n * permitted.\n *\n * @since        7.0.0\n * @product      highcharts highstock highmaps\n * @requires     highcharts-more\n * @optionparent legend.bubbleLegend\n */\nconst BubbleLegendDefaults = {\n    /**\n     * The color of the ranges borders, can be also defined for an\n     * individual range.\n     *\n     * @sample highcharts/bubble-legend/similartoseries/\n     *         Similar look to the bubble series\n     * @sample highcharts/bubble-legend/bordercolor/\n     *         Individual bubble border color\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    borderColor: void 0,\n    /**\n     * The width of the ranges borders in pixels, can be also\n     * defined for an individual range.\n     */\n    borderWidth: 2,\n    /**\n     * An additional class name to apply to the bubble legend'\n     * circle graphical elements. This option does not replace\n     * default class names of the graphical element.\n     *\n     * @sample {highcharts} highcharts/css/bubble-legend/\n     *         Styling by CSS\n     *\n     * @type {string}\n     */\n    className: void 0,\n    /**\n     * The main color of the bubble legend. Applies to ranges, if\n     * individual color is not defined.\n     *\n     * @sample highcharts/bubble-legend/similartoseries/\n     *         Similar look to the bubble series\n     * @sample highcharts/bubble-legend/color/\n     *         Individual bubble color\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    color: void 0,\n    /**\n     * An additional class name to apply to the bubble legend's\n     * connector graphical elements. This option does not replace\n     * default class names of the graphical element.\n     *\n     * @sample {highcharts} highcharts/css/bubble-legend/\n     *         Styling by CSS\n     *\n     * @type {string}\n     */\n    connectorClassName: void 0,\n    /**\n     * The color of the connector, can be also defined\n     * for an individual range.\n     *\n     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     */\n    connectorColor: void 0,\n    /**\n     * The length of the connectors in pixels. If labels are\n     * centered, the distance is reduced to 0.\n     *\n     * @sample highcharts/bubble-legend/connectorandlabels/\n     *         Increased connector length\n     */\n    connectorDistance: 60,\n    /**\n     * The width of the connectors in pixels.\n     *\n     * @sample highcharts/bubble-legend/connectorandlabels/\n     *         Increased connector width\n     */\n    connectorWidth: 1,\n    /**\n     * Enable or disable the bubble legend.\n     */\n    enabled: false,\n    /**\n     * Options for the bubble legend labels.\n     */\n    labels: {\n        /**\n         * An additional class name to apply to the bubble legend\n         * label graphical elements. This option does not replace\n         * default class names of the graphical element.\n         *\n         * @sample {highcharts} highcharts/css/bubble-legend/\n         *         Styling by CSS\n         *\n         * @type {string}\n         */\n        className: void 0,\n        /**\n         * Whether to allow data labels to overlap.\n         */\n        allowOverlap: false,\n        /**\n         * A format string for the bubble legend labels. Available\n         * variables are the same as for `formatter`.\n         *\n         * @sample highcharts/bubble-legend/format/\n         *         Add a unit\n         *\n         * @type {string}\n         */\n        format: '',\n        /**\n         * Available `this` properties are:\n         *\n         * - `this.value`: The bubble value.\n         *\n         * - `this.radius`: The radius of the bubble range.\n         *\n         * - `this.center`: The center y position of the range.\n         *\n         * @type {Highcharts.FormatterCallbackFunction<Highcharts.BubbleLegendFormatterContextObject>}\n         */\n        formatter: void 0,\n        /**\n         * The alignment of the labels compared to the bubble\n         * legend. Can be one of `left`, `center` or `right`.\n         *\n         * @sample highcharts/bubble-legend/connectorandlabels/\n         *         Labels on left\n         *\n         * @type {Highcharts.AlignValue}\n         */\n        align: 'right',\n        /**\n         * CSS styles for the labels.\n         *\n         * @type {Highcharts.CSSObject}\n         */\n        style: {\n            /** @ignore-option */\n            fontSize: '0.9em',\n            /** @ignore-option */\n            color: \"#000000\" /* Palette.neutralColor100 */\n        },\n        /**\n         * The x position offset of the label relative to the\n         * connector.\n         */\n        x: 0,\n        /**\n         * The y position offset of the label relative to the\n         * connector.\n         */\n        y: 0\n    },\n    /**\n     * Maximum bubble legend range size. If values for ranges are\n     * not specified, the `minSize` and the `maxSize` are calculated\n     * from bubble series.\n     */\n    maxSize: 60, // Number\n    /**\n     * Minimum bubble legend range size. If values for ranges are\n     * not specified, the `minSize` and the `maxSize` are calculated\n     * from bubble series.\n     */\n    minSize: 10, // Number\n    /**\n     * The position of the bubble legend in the legend.\n     * @sample highcharts/bubble-legend/connectorandlabels/\n     *         Bubble legend as last item in legend\n     */\n    legendIndex: 0, // Number\n    /**\n     * Options for specific range. One range consists of bubble,\n     * label and connector.\n     *\n     * @sample highcharts/bubble-legend/ranges/\n     *         Manually defined ranges\n     * @sample highcharts/bubble-legend/autoranges/\n     *         Auto calculated ranges\n     *\n     * @type {Array<*>}\n     */\n    ranges: {\n        /**\n         * Range size value, similar to bubble Z data.\n         * @type {number}\n         */\n        value: void 0,\n        /**\n         * The color of the border for individual range.\n         * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         */\n        borderColor: void 0,\n        /**\n         * The color of the bubble for individual range.\n         * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         */\n        color: void 0,\n        /**\n         * The color of the connector for individual range.\n         * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         */\n        connectorColor: void 0\n    },\n    /**\n     * Whether the bubble legend range value should be represented\n     * by the area or the width of the bubble. The default, area,\n     * corresponds best to the human perception of the size of each\n     * bubble.\n     *\n     * @sample highcharts/bubble-legend/ranges/\n     *         Size by width\n     *\n     * @type {Highcharts.BubbleSizeByValue}\n     */\n    sizeBy: 'area',\n    /**\n     * When this is true, the absolute value of z determines the\n     * size of the bubble. This means that with the default\n     * zThreshold of 0, a bubble of value -1 will have the same size\n     * as a bubble of value 1, while a bubble of value 0 will have a\n     * smaller size according to minSize.\n     */\n    sizeByAbsoluteValue: false,\n    /**\n     * Define the visual z index of the bubble legend.\n     */\n    zIndex: 1,\n    /**\n     * Ranges with lower value than zThreshold are skipped.\n     */\n    zThreshold: 0\n};\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Bubble_BubbleLegendDefaults = (BubbleLegendDefaults);\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"Templating\"],\"commonjs\":[\"highcharts\",\"Templating\"],\"commonjs2\":[\"highcharts\",\"Templating\"],\"root\":[\"Highcharts\",\"Templating\"]}\nvar highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_ = __webpack_require__(984);\nvar highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_default = /*#__PURE__*/__webpack_require__.n(highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_);\n;// ./code/es-modules/Series/Bubble/BubbleLegendItem.js\n/* *\n *\n *  (c) 2010-2025 Highsoft AS\n *\n *  Author: Paweł Potaczek\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { noop: BubbleLegendItem_noop } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\nconst { arrayMax, arrayMin, isNumber: BubbleLegendItem_isNumber, merge: BubbleLegendItem_merge, pick: BubbleLegendItem_pick, stableSort } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * BubbleLegend class.\n *\n * @private\n * @class\n * @name Highcharts.BubbleLegend\n * @param {Highcharts.LegendBubbleLegendOptions} options\n * Options of BubbleLegendItem.\n *\n * @param {Highcharts.Legend} legend\n * Legend of item.\n */\nclass BubbleLegendItem {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(options, legend) {\n        this.setState = BubbleLegendItem_noop;\n        this.init(options, legend);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Create basic bubbleLegend properties similar to item in legend.\n     * @private\n     */\n    init(options, legend) {\n        this.options = options;\n        this.visible = true;\n        this.chart = legend.chart;\n        this.legend = legend;\n    }\n    /**\n     * Depending on the position option, add bubbleLegend to legend items.\n     *\n     * @private\n     *\n     * @param {Array<(Highcharts.Point|Highcharts.Series)>} items\n     *        All legend items\n     */\n    addToLegend(items) {\n        // Insert bubbleLegend into legend items\n        items.splice(this.options.legendIndex, 0, this);\n    }\n    /**\n     * Calculate ranges, sizes and call the next steps of bubbleLegend\n     * creation.\n     *\n     * @private\n     *\n     * @param {Highcharts.Legend} legend\n     *        Legend instance\n     */\n    drawLegendSymbol(legend) {\n        const itemDistance = BubbleLegendItem_pick(legend.options.itemDistance, 20), legendItem = this.legendItem || {}, options = this.options, ranges = options.ranges, connectorDistance = options.connectorDistance;\n        let connectorSpace;\n        // Do not create bubbleLegend now if ranges or ranges values are not\n        // specified or if are empty array.\n        if (!ranges || !ranges.length || !BubbleLegendItem_isNumber(ranges[0].value)) {\n            legend.options.bubbleLegend.autoRanges = true;\n            return;\n        }\n        // Sort ranges to right render order\n        stableSort(ranges, function (a, b) {\n            return b.value - a.value;\n        });\n        this.ranges = ranges;\n        this.setOptions();\n        this.render();\n        // Get max label size\n        const maxLabel = this.getMaxLabelSize(), radius = this.ranges[0].radius, size = radius * 2;\n        // Space for connectors and labels.\n        connectorSpace =\n            connectorDistance - radius + maxLabel.width;\n        connectorSpace = connectorSpace > 0 ? connectorSpace : 0;\n        this.maxLabel = maxLabel;\n        this.movementX = options.labels.align === 'left' ?\n            connectorSpace : 0;\n        legendItem.labelWidth = size + connectorSpace + itemDistance;\n        legendItem.labelHeight = size + maxLabel.height / 2;\n    }\n    /**\n     * Set style options for each bubbleLegend range.\n     * @private\n     */\n    setOptions() {\n        const ranges = this.ranges, options = this.options, series = this.chart.series[options.seriesIndex], baseline = this.legend.baseline, bubbleAttribs = {\n            zIndex: options.zIndex,\n            'stroke-width': options.borderWidth\n        }, connectorAttribs = {\n            zIndex: options.zIndex,\n            'stroke-width': options.connectorWidth\n        }, labelAttribs = {\n            align: (this.legend.options.rtl ||\n                options.labels.align === 'left') ? 'right' : 'left',\n            zIndex: options.zIndex\n        }, fillOpacity = series.options.marker.fillOpacity, styledMode = this.chart.styledMode;\n        // Allow to parts of styles be used individually for range\n        ranges.forEach(function (range, i) {\n            if (!styledMode) {\n                bubbleAttribs.stroke = BubbleLegendItem_pick(range.borderColor, options.borderColor, series.color);\n                bubbleAttribs.fill = range.color || options.color;\n                if (!bubbleAttribs.fill) {\n                    bubbleAttribs.fill = series.color;\n                    bubbleAttribs['fill-opacity'] = fillOpacity ?? 1;\n                }\n                connectorAttribs.stroke = BubbleLegendItem_pick(range.connectorColor, options.connectorColor, series.color);\n            }\n            // Set options needed for rendering each range\n            ranges[i].radius = this.getRangeRadius(range.value);\n            ranges[i] = BubbleLegendItem_merge(ranges[i], {\n                center: (ranges[0].radius - ranges[i].radius +\n                    baseline)\n            });\n            if (!styledMode) {\n                BubbleLegendItem_merge(true, ranges[i], {\n                    bubbleAttribs: BubbleLegendItem_merge(bubbleAttribs),\n                    connectorAttribs: BubbleLegendItem_merge(connectorAttribs),\n                    labelAttribs: labelAttribs\n                });\n            }\n        }, this);\n    }\n    /**\n     * Calculate radius for each bubble range,\n     * used code from BubbleSeries.js 'getRadius' method.\n     *\n     * @private\n     *\n     * @param {number} value\n     *        Range value\n     *\n     * @return {number|null}\n     *         Radius for one range\n     */\n    getRangeRadius(value) {\n        const options = this.options, seriesIndex = this.options.seriesIndex, bubbleSeries = this.chart.series[seriesIndex], zMax = options.ranges[0].value, zMin = options.ranges[options.ranges.length - 1].value, minSize = options.minSize, maxSize = options.maxSize;\n        return bubbleSeries.getRadius.call(this, zMin, zMax, minSize, maxSize, value);\n    }\n    /**\n     * Render the legendItem group.\n     * @private\n     */\n    render() {\n        const legendItem = this.legendItem || {}, renderer = this.chart.renderer, zThreshold = this.options.zThreshold;\n        if (!this.symbols) {\n            this.symbols = {\n                connectors: [],\n                bubbleItems: [],\n                labels: []\n            };\n        }\n        // Nesting SVG groups to enable handleOverflow\n        legendItem.symbol = renderer.g('bubble-legend');\n        legendItem.label = renderer.g('bubble-legend-item')\n            .css(this.legend.itemStyle || {});\n        // To enable default 'hideOverlappingLabels' method\n        legendItem.symbol.translateX = 0;\n        legendItem.symbol.translateY = 0;\n        // To use handleOverflow method\n        legendItem.symbol.add(legendItem.label);\n        legendItem.label.add(legendItem.group);\n        for (const range of this.ranges) {\n            if (range.value >= zThreshold) {\n                this.renderRange(range);\n            }\n        }\n        this.hideOverlappingLabels();\n    }\n    /**\n     * Render one range, consisting of bubble symbol, connector and label.\n     *\n     * @private\n     *\n     * @param {Highcharts.LegendBubbleLegendRangesOptions} range\n     *        Range options\n     */\n    renderRange(range) {\n        const mainRange = this.ranges[0], legend = this.legend, options = this.options, labelsOptions = options.labels, chart = this.chart, bubbleSeries = chart.series[options.seriesIndex], renderer = chart.renderer, symbols = this.symbols, labels = symbols.labels, elementCenter = range.center, absoluteRadius = Math.abs(range.radius), connectorDistance = options.connectorDistance || 0, labelsAlign = labelsOptions.align, rtl = legend.options.rtl, borderWidth = options.borderWidth, connectorWidth = options.connectorWidth, posX = mainRange.radius || 0, posY = elementCenter - absoluteRadius -\n            borderWidth / 2 + connectorWidth / 2, crispMovement = (posY % 1 ? 1 : 0.5) -\n            (connectorWidth % 2 ? 0 : 0.5), styledMode = renderer.styledMode;\n        let connectorLength = rtl || labelsAlign === 'left' ?\n            -connectorDistance : connectorDistance;\n        // Set options for centered labels\n        if (labelsAlign === 'center') {\n            connectorLength = 0; // Do not use connector\n            options.connectorDistance = 0;\n            range.labelAttribs.align = 'center';\n        }\n        // Render bubble symbol\n        symbols.bubbleItems.push(renderer\n            .circle(posX, elementCenter + crispMovement, absoluteRadius)\n            .attr(styledMode ? {} : range.bubbleAttribs)\n            .addClass((styledMode ?\n            'highcharts-color-' +\n                bubbleSeries.colorIndex + ' ' :\n            '') +\n            'highcharts-bubble-legend-symbol ' +\n            (options.className || '')).add(this.legendItem.symbol));\n        // Render connector\n        symbols.connectors.push(renderer\n            .path(renderer.crispLine([\n            ['M', posX, posY],\n            ['L', posX + connectorLength, posY]\n        ], options.connectorWidth))\n            .attr((styledMode ? {} : range.connectorAttribs))\n            .addClass((styledMode ?\n            'highcharts-color-' +\n                this.options.seriesIndex + ' ' : '') +\n            'highcharts-bubble-legend-connectors ' +\n            (options.connectorClassName || '')).add(this.legendItem.symbol));\n        // Render label\n        const label = renderer\n            .text(this.formatLabel(range))\n            .attr((styledMode ? {} : range.labelAttribs))\n            .css(styledMode ? {} : labelsOptions.style)\n            .addClass('highcharts-bubble-legend-labels ' +\n            (options.labels.className || '')).add(this.legendItem.symbol);\n        // Now that the label is added we can read the bounding box and\n        // vertically align\n        const position = {\n            x: posX + connectorLength + options.labels.x,\n            y: posY + options.labels.y + label.getBBox().height * 0.4\n        };\n        label.attr(position);\n        labels.push(label);\n        // To enable default 'hideOverlappingLabels' method\n        label.placed = true;\n        label.alignAttr = position;\n    }\n    /**\n     * Get the label which takes up the most space.\n     * @private\n     */\n    getMaxLabelSize() {\n        const labels = this.symbols.labels;\n        let maxLabel, labelSize;\n        labels.forEach(function (label) {\n            labelSize = label.getBBox(true);\n            if (maxLabel) {\n                maxLabel = labelSize.width > maxLabel.width ?\n                    labelSize : maxLabel;\n            }\n            else {\n                maxLabel = labelSize;\n            }\n        });\n        return maxLabel || {};\n    }\n    /**\n     * Get formatted label for range.\n     *\n     * @private\n     *\n     * @param {Highcharts.LegendBubbleLegendRangesOptions} range\n     *        Range options\n     *\n     * @return {string}\n     *         Range label text\n     */\n    formatLabel(range) {\n        const options = this.options, formatter = options.labels.formatter, format = options.labels.format;\n        const { numberFormatter } = this.chart;\n        return format ? highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_default().format(format, range, this.chart) :\n            formatter ? formatter.call(range) :\n                numberFormatter(range.value, 1);\n    }\n    /**\n     * By using default chart 'hideOverlappingLabels' method, hide or show\n     * labels and connectors.\n     * @private\n     */\n    hideOverlappingLabels() {\n        const chart = this.chart, allowOverlap = this.options.labels.allowOverlap, symbols = this.symbols;\n        if (!allowOverlap && symbols) {\n            chart.hideOverlappingLabels(symbols.labels);\n            // Hide or show connectors\n            symbols.labels.forEach(function (label, index) {\n                if (!label.newOpacity) {\n                    symbols.connectors[index].hide();\n                }\n                else if (label.newOpacity !== label.oldOpacity) {\n                    symbols.connectors[index].show();\n                }\n            });\n        }\n    }\n    /**\n     * Calculate ranges from created series.\n     *\n     * @private\n     *\n     * @return {Array<Highcharts.LegendBubbleLegendRangesOptions>}\n     *         Array of range objects\n     */\n    getRanges() {\n        const bubbleLegend = this.legend.bubbleLegend, series = bubbleLegend.chart.series, rangesOptions = bubbleLegend.options.ranges;\n        let ranges, zData, minZ = Number.MAX_VALUE, maxZ = -Number.MAX_VALUE;\n        series.forEach(function (s) {\n            // Find the min and max Z, like in bubble series\n            if (s.isBubble && !s.ignoreSeries) {\n                zData = s.getColumn('z').filter(BubbleLegendItem_isNumber);\n                if (zData.length) {\n                    minZ = BubbleLegendItem_pick(s.options.zMin, Math.min(minZ, Math.max(arrayMin(zData), s.options.displayNegative === false ?\n                        s.options.zThreshold :\n                        -Number.MAX_VALUE)));\n                    maxZ = BubbleLegendItem_pick(s.options.zMax, Math.max(maxZ, arrayMax(zData)));\n                }\n            }\n        });\n        // Set values for ranges\n        if (minZ === maxZ) {\n            // Only one range if min and max values are the same.\n            ranges = [{ value: maxZ }];\n        }\n        else {\n            ranges = [\n                { value: minZ },\n                { value: (minZ + maxZ) / 2 },\n                { value: maxZ, autoRanges: true }\n            ];\n        }\n        // Prevent reverse order of ranges after redraw\n        if (rangesOptions.length && rangesOptions[0].radius) {\n            ranges.reverse();\n        }\n        // Merge ranges values with user options\n        ranges.forEach(function (range, i) {\n            if (rangesOptions && rangesOptions[i]) {\n                ranges[i] = BubbleLegendItem_merge(rangesOptions[i], range);\n            }\n        });\n        return ranges;\n    }\n    /**\n     * Calculate bubble legend sizes from rendered series.\n     *\n     * @private\n     *\n     * @return {Array<number,number>}\n     *         Calculated min and max bubble sizes\n     */\n    predictBubbleSizes() {\n        const chart = this.chart, legendOptions = chart.legend.options, floating = legendOptions.floating, horizontal = legendOptions.layout === 'horizontal', lastLineHeight = horizontal ? chart.legend.lastLineHeight : 0, plotSizeX = chart.plotSizeX, plotSizeY = chart.plotSizeY, bubbleSeries = chart.series[this.options.seriesIndex], pxSizes = bubbleSeries.getPxExtremes(), minSize = Math.ceil(pxSizes.minPxSize), maxPxSize = Math.ceil(pxSizes.maxPxSize), plotSize = Math.min(plotSizeY, plotSizeX);\n        let calculatedSize, maxSize = bubbleSeries.options.maxSize;\n        // Calculate predicted max size of bubble\n        if (floating || !(/%$/.test(maxSize))) {\n            calculatedSize = maxPxSize;\n        }\n        else {\n            maxSize = parseFloat(maxSize);\n            calculatedSize = ((plotSize + lastLineHeight) * maxSize / 100) /\n                (maxSize / 100 + 1);\n            // Get maxPxSize from bubble series if calculated bubble legend\n            // size will not affect to bubbles series.\n            if ((horizontal && plotSizeY - calculatedSize >=\n                plotSizeX) || (!horizontal && plotSizeX -\n                calculatedSize >= plotSizeY)) {\n                calculatedSize = maxPxSize;\n            }\n        }\n        return [minSize, Math.ceil(calculatedSize)];\n    }\n    /**\n     * Correct ranges with calculated sizes.\n     * @private\n     */\n    updateRanges(min, max) {\n        const bubbleLegendOptions = this.legend.options.bubbleLegend;\n        bubbleLegendOptions.minSize = min;\n        bubbleLegendOptions.maxSize = max;\n        bubbleLegendOptions.ranges = this.getRanges();\n    }\n    /**\n     * Because of the possibility of creating another legend line, predicted\n     * bubble legend sizes may differ by a few pixels, so it is necessary to\n     * correct them.\n     * @private\n     */\n    correctSizes() {\n        const legend = this.legend, chart = this.chart, bubbleSeries = chart.series[this.options.seriesIndex], pxSizes = bubbleSeries.getPxExtremes(), bubbleSeriesSize = pxSizes.maxPxSize, bubbleLegendSize = this.options.maxSize;\n        if (Math.abs(Math.ceil(bubbleSeriesSize) - bubbleLegendSize) >\n            1) {\n            this.updateRanges(this.options.minSize, pxSizes.maxPxSize);\n            legend.render();\n        }\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Bubble_BubbleLegendItem = (BubbleLegendItem);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * @interface Highcharts.BubbleLegendFormatterContextObject\n */ /**\n* The center y position of the range.\n* @name Highcharts.BubbleLegendFormatterContextObject#center\n* @type {number}\n*/ /**\n* The radius of the bubble range.\n* @name Highcharts.BubbleLegendFormatterContextObject#radius\n* @type {number}\n*/ /**\n* The bubble value.\n* @name Highcharts.BubbleLegendFormatterContextObject#value\n* @type {number}\n*/\n''; // Detach doclets above\n\n;// ./code/es-modules/Series/Bubble/BubbleLegendComposition.js\n/* *\n *\n *  (c) 2010-2025 Highsoft AS\n *\n *  Author: Paweł Potaczek\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\nconst { setOptions } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\nconst { composed } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\nconst { addEvent: BubbleLegendComposition_addEvent, objectEach, pushUnique, wrap } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * If ranges are not specified, determine ranges from rendered bubble series\n * and render legend again.\n */\nfunction chartDrawChartBox(proceed, options, callback) {\n    const chart = this, legend = chart.legend, bubbleSeries = getVisibleBubbleSeriesIndex(chart) >= 0;\n    let bubbleLegendOptions, bubbleSizes, legendItem;\n    if (legend && legend.options.enabled && legend.bubbleLegend &&\n        legend.options.bubbleLegend.autoRanges && bubbleSeries) {\n        bubbleLegendOptions = legend.bubbleLegend.options;\n        bubbleSizes = legend.bubbleLegend.predictBubbleSizes();\n        legend.bubbleLegend.updateRanges(bubbleSizes[0], bubbleSizes[1]);\n        // Disable animation on init\n        if (!bubbleLegendOptions.placed) {\n            legend.group.placed = false;\n            legend.allItems.forEach((item) => {\n                legendItem = item.legendItem || {};\n                if (legendItem.group) {\n                    legendItem.group.translateY = void 0;\n                }\n            });\n        }\n        // Create legend with bubbleLegend\n        legend.render();\n        // Calculate margins after first rendering the bubble legend\n        if (!bubbleLegendOptions.placed) {\n            chart.getMargins();\n            chart.axes.forEach((axis) => {\n                axis.setScale();\n                axis.updateNames();\n                // Disable axis animation on init\n                objectEach(axis.ticks, function (tick) {\n                    tick.isNew = true;\n                    tick.isNewLabel = true;\n                });\n            });\n            chart.getMargins();\n        }\n        bubbleLegendOptions.placed = true;\n        // Call default 'drawChartBox' method.\n        proceed.call(chart, options, callback);\n        // Check bubble legend sizes and correct them if necessary.\n        legend.bubbleLegend.correctSizes();\n        // Correct items positions with different dimensions in legend.\n        retranslateItems(legend, getLinesHeights(legend));\n    }\n    else {\n        proceed.call(chart, options, callback);\n        // Allow color change on static bubble legend after click on legend\n        if (legend && legend.options.enabled && legend.bubbleLegend) {\n            legend.render();\n            retranslateItems(legend, getLinesHeights(legend));\n        }\n    }\n}\n/**\n * Compose classes for use with Bubble series.\n * @private\n *\n * @param {Highcharts.Chart} ChartClass\n * Core chart class to use with Bubble series.\n *\n * @param {Highcharts.Legend} LegendClass\n * Core legend class to use with Bubble series.\n */\nfunction BubbleLegendComposition_compose(ChartClass, LegendClass) {\n    if (pushUnique(composed, 'Series.BubbleLegend')) {\n        setOptions({\n            // Set default bubble legend options\n            legend: {\n                bubbleLegend: Bubble_BubbleLegendDefaults\n            }\n        });\n        wrap(ChartClass.prototype, 'drawChartBox', chartDrawChartBox);\n        BubbleLegendComposition_addEvent(LegendClass, 'afterGetAllItems', onLegendAfterGetAllItems);\n        BubbleLegendComposition_addEvent(LegendClass, 'itemClick', onLegendItemClick);\n    }\n}\n/**\n * Check if there is at least one visible bubble series.\n *\n * @private\n * @function getVisibleBubbleSeriesIndex\n * @param {Highcharts.Chart} chart\n * Chart to check.\n * @return {number}\n * First visible bubble series index\n */\nfunction getVisibleBubbleSeriesIndex(chart) {\n    const series = chart.series;\n    let i = 0;\n    while (i < series.length) {\n        if (series[i] &&\n            series[i].isBubble &&\n            series[i].visible &&\n            series[i].dataTable.rowCount) {\n            return i;\n        }\n        i++;\n    }\n    return -1;\n}\n/**\n * Calculate height for each row in legend.\n *\n * @private\n * @function getLinesHeights\n *\n * @param {Highcharts.Legend} legend\n * Legend to calculate from.\n *\n * @return {Array<Highcharts.Dictionary<number>>}\n * Informations about line height and items amount\n */\nfunction getLinesHeights(legend) {\n    const items = legend.allItems, lines = [], length = items.length;\n    let lastLine, legendItem, legendItem2, i = 0, j = 0;\n    for (i = 0; i < length; i++) {\n        legendItem = items[i].legendItem || {};\n        legendItem2 = (items[i + 1] || {}).legendItem || {};\n        if (legendItem.labelHeight) {\n            // For bubbleLegend\n            items[i].itemHeight = legendItem.labelHeight;\n        }\n        if ( // Line break\n        items[i] === items[length - 1] ||\n            legendItem.y !== legendItem2.y) {\n            lines.push({ height: 0 });\n            lastLine = lines[lines.length - 1];\n            // Find the highest item in line\n            for (j; j <= i; j++) {\n                if (items[j].itemHeight > lastLine.height) {\n                    lastLine.height = items[j].itemHeight;\n                }\n            }\n            lastLine.step = i;\n        }\n    }\n    return lines;\n}\n/**\n * Start the bubble legend creation process.\n */\nfunction onLegendAfterGetAllItems(e) {\n    const legend = this, bubbleLegend = legend.bubbleLegend, legendOptions = legend.options, options = legendOptions.bubbleLegend, bubbleSeriesIndex = getVisibleBubbleSeriesIndex(legend.chart);\n    // Remove unnecessary element\n    if (bubbleLegend && bubbleLegend.ranges && bubbleLegend.ranges.length) {\n        // Allow change the way of calculating ranges in update\n        if (options.ranges.length) {\n            options.autoRanges =\n                !!options.ranges[0].autoRanges;\n        }\n        // Update bubbleLegend dimensions in each redraw\n        legend.destroyItem(bubbleLegend);\n    }\n    // Create bubble legend\n    if (bubbleSeriesIndex >= 0 &&\n        legendOptions.enabled &&\n        options.enabled) {\n        options.seriesIndex = bubbleSeriesIndex;\n        legend.bubbleLegend = new Bubble_BubbleLegendItem(options, legend);\n        legend.bubbleLegend.addToLegend(e.allItems);\n    }\n}\n/**\n * Toggle bubble legend depending on the visible status of bubble series.\n */\nfunction onLegendItemClick(e) {\n    // #14080 don't fire this code if click function is prevented\n    if (e.defaultPrevented) {\n        return false;\n    }\n    const legend = this, series = e.legendItem, chart = legend.chart, visible = series.visible;\n    let status;\n    if (legend && legend.bubbleLegend) {\n        // Temporary correct 'visible' property\n        series.visible = !visible;\n        // Save future status for getRanges method\n        series.ignoreSeries = visible;\n        // Check if at lest one bubble series is visible\n        status = getVisibleBubbleSeriesIndex(chart) >= 0;\n        // Hide bubble legend if all bubble series are disabled\n        if (legend.bubbleLegend.visible !== status) {\n            // Show or hide bubble legend\n            legend.update({\n                bubbleLegend: { enabled: status }\n            });\n            legend.bubbleLegend.visible = status; // Restore default status\n        }\n        series.visible = visible;\n    }\n}\n/**\n * Correct legend items translation in case of different elements heights.\n *\n * @private\n * @function Highcharts.Legend#retranslateItems\n *\n * @param {Highcharts.Legend} legend\n * Legend to translate in.\n *\n * @param {Array<Highcharts.Dictionary<number>>} lines\n * Informations about line height and items amount\n */\nfunction retranslateItems(legend, lines) {\n    const items = legend.allItems, rtl = legend.options.rtl;\n    let orgTranslateX, orgTranslateY, movementX, legendItem, actualLine = 0;\n    items.forEach((item, index) => {\n        legendItem = item.legendItem || {};\n        if (!legendItem.group) {\n            return;\n        }\n        orgTranslateX = legendItem.group.translateX || 0;\n        orgTranslateY = legendItem.y || 0;\n        movementX = item.movementX;\n        if (movementX || (rtl && item.ranges)) {\n            movementX = rtl ?\n                orgTranslateX - item.options.maxSize / 2 :\n                orgTranslateX + movementX;\n            legendItem.group.attr({ translateX: movementX });\n        }\n        if (index > lines[actualLine].step) {\n            actualLine++;\n        }\n        legendItem.group.attr({\n            translateY: Math.round(orgTranslateY + lines[actualLine].height / 2)\n        });\n        legendItem.y = orgTranslateY + lines[actualLine].height / 2;\n    });\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst BubbleLegendComposition = {\n    compose: BubbleLegendComposition_compose\n};\n/* harmony default export */ const Bubble_BubbleLegendComposition = (BubbleLegendComposition);\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"Point\"],\"commonjs\":[\"highcharts\",\"Point\"],\"commonjs2\":[\"highcharts\",\"Point\"],\"root\":[\"Highcharts\",\"Point\"]}\nvar highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_ = __webpack_require__(260);\nvar highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_default = /*#__PURE__*/__webpack_require__.n(highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_);\n;// ./code/es-modules/Series/Bubble/BubblePoint.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { seriesTypes: { scatter: { prototype: { pointClass: ScatterPoint } } } } = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default());\n\nconst { extend: BubblePoint_extend } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Class\n *\n * */\nclass BubblePoint extends ScatterPoint {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * @private\n     */\n    haloPath(size) {\n        const computedSize = (size && this.marker ?\n            this.marker.radius ||\n                0 :\n            0) + size;\n        if (this.series.chart.inverted) {\n            const pos = this.pos() || [0, 0], { xAxis, yAxis, chart } = this.series, diameter = computedSize * 2;\n            return chart.renderer.symbols.circle((xAxis?.len || 0) - pos[1] - computedSize, (yAxis?.len || 0) - pos[0] - computedSize, diameter, diameter);\n        }\n        return highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_default().prototype.haloPath.call(this, \n        // #6067\n        computedSize);\n    }\n}\n/* *\n *\n *  Class Prototype\n *\n * */\nBubblePoint_extend(BubblePoint.prototype, {\n    ttBelow: false\n});\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Bubble_BubblePoint = (BubblePoint);\n\n;// ./code/es-modules/Series/Bubble/BubbleSeries.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\nconst { composed: BubbleSeries_composed, noop: BubbleSeries_noop } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\nconst { series: Series, seriesTypes: { column: { prototype: BubbleSeries_columnProto }, scatter: ScatterSeries } } = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default());\n\nconst { addEvent: BubbleSeries_addEvent, arrayMax: BubbleSeries_arrayMax, arrayMin: BubbleSeries_arrayMin, clamp, extend: BubbleSeries_extend, isNumber: BubbleSeries_isNumber, merge: BubbleSeries_merge, pick: BubbleSeries_pick, pushUnique: BubbleSeries_pushUnique } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Add logic to pad each axis with the amount of pixels necessary to avoid the\n * bubbles to overflow.\n */\nfunction onAxisFoundExtremes() {\n    const axisLength = this.len, { coll, isXAxis, min } = this, range = (this.max || 0) - (min || 0);\n    let pxMin = 0, pxMax = axisLength, transA = axisLength / range, hasActiveSeries;\n    if (coll !== 'xAxis' && coll !== 'yAxis') {\n        return;\n    }\n    // Handle padding on the second pass, or on redraw\n    this.series.forEach((series) => {\n        if (series.bubblePadding && series.reserveSpace()) {\n            // Correction for #1673\n            this.allowZoomOutside = true;\n            hasActiveSeries = true;\n            const data = series.getColumn(isXAxis ? 'x' : 'y');\n            if (isXAxis) {\n                (series.onPoint || series).getRadii(0, 0, series);\n                if (series.onPoint) {\n                    series.radii = series.onPoint.radii;\n                }\n            }\n            if (range > 0) {\n                let i = data.length;\n                while (i--) {\n                    if (BubbleSeries_isNumber(data[i]) &&\n                        this.dataMin <= data[i] &&\n                        data[i] <= this.max) {\n                        const radius = series.radii && series.radii[i] || 0;\n                        pxMin = Math.min(((data[i] - min) * transA) - radius, pxMin);\n                        pxMax = Math.max(((data[i] - min) * transA) + radius, pxMax);\n                    }\n                }\n            }\n        }\n    });\n    // Apply the padding to the min and max properties\n    if (hasActiveSeries && range > 0 && !this.logarithmic) {\n        pxMax -= axisLength;\n        transA *= (axisLength +\n            Math.max(0, pxMin) - // #8901\n            Math.min(pxMax, axisLength)) / axisLength;\n        [\n            ['min', 'userMin', pxMin],\n            ['max', 'userMax', pxMax]\n        ].forEach((keys) => {\n            if (typeof BubbleSeries_pick(this.options[keys[0]], this[keys[1]]) === 'undefined') {\n                this[keys[0]] += keys[2] / transA;\n            }\n        });\n    }\n}\n/**\n * If a user has defined categories, it is necessary to retroactively hide any\n * ticks added by the 'onAxisFoundExtremes' function above (#21672).\n *\n * Otherwise they can show up on the axis, alongside user-defined categories.\n */\nfunction onAxisAfterRender() {\n    const { ticks, tickPositions, dataMin = 0, dataMax = 0, categories } = this, type = this.options.type;\n    if ((categories?.length || type === 'category') &&\n        this.series.find((s) => s.bubblePadding)) {\n        let tickCount = tickPositions.length;\n        while (tickCount--) {\n            const tick = ticks[tickPositions[tickCount]], pos = tick.pos || 0;\n            if (pos > dataMax || pos < dataMin) {\n                tick.label?.hide();\n            }\n        }\n    }\n}\n/* *\n *\n *  Class\n *\n * */\nclass BubbleSeries extends ScatterSeries {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    static compose(AxisClass, ChartClass, LegendClass) {\n        Bubble_BubbleLegendComposition.compose(ChartClass, LegendClass);\n        if (BubbleSeries_pushUnique(BubbleSeries_composed, 'Series.Bubble')) {\n            BubbleSeries_addEvent(AxisClass, 'foundExtremes', onAxisFoundExtremes);\n            BubbleSeries_addEvent(AxisClass, 'afterRender', onAxisAfterRender);\n        }\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Perform animation on the bubbles\n     * @private\n     */\n    animate(init) {\n        if (!init &&\n            this.points.length < this.options.animationLimit // #8099\n        ) {\n            this.points.forEach(function (point) {\n                const { graphic, plotX = 0, plotY = 0 } = point;\n                if (graphic && graphic.width) { // URL symbols don't have width\n                    // Start values\n                    if (!this.hasRendered) {\n                        graphic.attr({\n                            x: plotX,\n                            y: plotY,\n                            width: 1,\n                            height: 1\n                        });\n                    }\n                    graphic.animate(this.markerAttribs(point), this.options.animation);\n                }\n            }, this);\n        }\n    }\n    /**\n     * Get the radius for each point based on the minSize, maxSize and each\n     * point's Z value. This must be done prior to Series.translate because\n     * the axis needs to add padding in accordance with the point sizes.\n     * @private\n     */\n    getRadii() {\n        const zData = this.getColumn('z'), yData = this.getColumn('y'), radii = [];\n        let len, i, value, zExtremes = this.chart.bubbleZExtremes;\n        const { minPxSize, maxPxSize } = this.getPxExtremes();\n        // Get the collective Z extremes of all bubblish series. The chart-level\n        // `bubbleZExtremes` are only computed once, and reset on `updatedData`\n        // in any member series.\n        if (!zExtremes) {\n            let zMin = Number.MAX_VALUE;\n            let zMax = -Number.MAX_VALUE;\n            let valid;\n            this.chart.series.forEach((otherSeries) => {\n                if (otherSeries.bubblePadding && otherSeries.reserveSpace()) {\n                    const zExtremes = (otherSeries.onPoint || otherSeries).getZExtremes();\n                    if (zExtremes) {\n                        // Changed '||' to 'pick' because min or max can be 0.\n                        // #17280\n                        zMin = Math.min(BubbleSeries_pick(zMin, zExtremes.zMin), zExtremes.zMin);\n                        zMax = Math.max(BubbleSeries_pick(zMax, zExtremes.zMax), zExtremes.zMax);\n                        valid = true;\n                    }\n                }\n            });\n            if (valid) {\n                zExtremes = { zMin, zMax };\n                this.chart.bubbleZExtremes = zExtremes;\n            }\n            else {\n                zExtremes = { zMin: 0, zMax: 0 };\n            }\n        }\n        // Set the shape type and arguments to be picked up in drawPoints\n        for (i = 0, len = zData.length; i < len; i++) {\n            value = zData[i];\n            // Separate method to get individual radius for bubbleLegend\n            radii.push(this.getRadius(zExtremes.zMin, zExtremes.zMax, minPxSize, maxPxSize, value, yData && yData[i]));\n        }\n        this.radii = radii;\n    }\n    /**\n     * Get the individual radius for one point.\n     * @private\n     */\n    getRadius(zMin, zMax, minSize, maxSize, value, yValue) {\n        const options = this.options, sizeByArea = options.sizeBy !== 'width', zThreshold = options.zThreshold;\n        let zRange = zMax - zMin, pos = 0.5;\n        // #8608 - bubble should be visible when z is undefined\n        if (yValue === null || value === null) {\n            return null;\n        }\n        if (BubbleSeries_isNumber(value)) {\n            // When sizing by threshold, the absolute value of z determines\n            // the size of the bubble.\n            if (options.sizeByAbsoluteValue) {\n                value = Math.abs(value - zThreshold);\n                zMax = zRange = Math.max(zMax - zThreshold, Math.abs(zMin - zThreshold));\n                zMin = 0;\n            }\n            // Issue #4419 - if value is less than zMin, push a radius that's\n            // always smaller than the minimum size\n            if (value < zMin) {\n                return minSize / 2 - 1;\n            }\n            // Relative size, a number between 0 and 1\n            if (zRange > 0) {\n                pos = (value - zMin) / zRange;\n            }\n        }\n        if (sizeByArea && pos >= 0) {\n            pos = Math.sqrt(pos);\n        }\n        return Math.ceil(minSize + pos * (maxSize - minSize)) / 2;\n    }\n    /**\n     * Define hasData function for non-cartesian series.\n     * Returns true if the series has points at all.\n     * @private\n     */\n    hasData() {\n        return !!this.dataTable.rowCount;\n    }\n    /**\n     * @private\n     */\n    markerAttribs(point, state) {\n        const attr = super.markerAttribs(point, state), { height = 0, width = 0 } = attr;\n        // Bubble needs a specific `markerAttribs` override because the markers\n        // are rendered into the potentially inverted `series.group`. Unlike\n        // regular markers, which are rendered into the `markerGroup` (#21125).\n        return this.chart.inverted ? BubbleSeries_extend(attr, {\n            x: (point.plotX || 0) - width / 2,\n            y: (point.plotY || 0) - height / 2\n        }) : attr;\n    }\n    /**\n     * @private\n     */\n    pointAttribs(point, state) {\n        const markerOptions = this.options.marker, fillOpacity = markerOptions?.fillOpacity, attr = Series.prototype.pointAttribs.call(this, point, state);\n        attr['fill-opacity'] = fillOpacity ?? 1;\n        return attr;\n    }\n    /**\n     * Extend the base translate method to handle bubble size\n     * @private\n     */\n    translate() {\n        // Run the parent method\n        super.translate.call(this);\n        this.getRadii();\n        this.translateBubble();\n    }\n    translateBubble() {\n        const { data, options, radii } = this, { minPxSize } = this.getPxExtremes();\n        // Set the shape type and arguments to be picked up in drawPoints\n        let i = data.length;\n        while (i--) {\n            const point = data[i], radius = radii ? radii[i] : 0; // #1737\n            // Negative points means negative z values (#9728)\n            if (this.zoneAxis === 'z') {\n                point.negative = (point.z || 0) < (options.zThreshold || 0);\n            }\n            if (BubbleSeries_isNumber(radius) && radius >= minPxSize / 2) {\n                // Shape arguments\n                point.marker = BubbleSeries_extend(point.marker, {\n                    radius,\n                    width: 2 * radius,\n                    height: 2 * radius\n                });\n                // Alignment box for the data label\n                point.dlBox = {\n                    x: point.plotX - radius,\n                    y: point.plotY - radius,\n                    width: 2 * radius,\n                    height: 2 * radius\n                };\n            }\n            else { // Below zThreshold\n                // #1691\n                point.shapeArgs = point.plotY = point.dlBox = void 0;\n                point.isInside = false; // #17281\n            }\n        }\n    }\n    getPxExtremes() {\n        const smallestSize = Math.min(this.chart.plotWidth, this.chart.plotHeight);\n        const getPxSize = (length) => {\n            let isPercent;\n            if (typeof length === 'string') {\n                isPercent = /%$/.test(length);\n                length = parseInt(length, 10);\n            }\n            return isPercent ? smallestSize * length / 100 : length;\n        };\n        const minPxSize = getPxSize(BubbleSeries_pick(this.options.minSize, 8));\n        // Prioritize min size if conflict to make sure bubbles are\n        // always visible. #5873\n        const maxPxSize = Math.max(getPxSize(BubbleSeries_pick(this.options.maxSize, '20%')), minPxSize);\n        return { minPxSize, maxPxSize };\n    }\n    getZExtremes() {\n        const options = this.options, zData = this.getColumn('z').filter(BubbleSeries_isNumber);\n        if (zData.length) {\n            const zMin = BubbleSeries_pick(options.zMin, clamp(BubbleSeries_arrayMin(zData), options.displayNegative === false ?\n                (options.zThreshold || 0) :\n                -Number.MAX_VALUE, Number.MAX_VALUE));\n            const zMax = BubbleSeries_pick(options.zMax, BubbleSeries_arrayMax(zData));\n            if (BubbleSeries_isNumber(zMin) && BubbleSeries_isNumber(zMax)) {\n                return { zMin, zMax };\n            }\n        }\n    }\n    /**\n     * @private\n     * @function Highcharts.Series#searchKDTree\n     */\n    searchKDTree(point, compareX, e, suppliedPointEvaluator = BubbleSeries_noop, suppliedBSideCheckEvaluator = BubbleSeries_noop) {\n        suppliedPointEvaluator = (p1, p2, comparisonProp) => {\n            const p1Dist = p1[comparisonProp] || 0;\n            const p2Dist = p2[comparisonProp] || 0;\n            let ret, flip = false;\n            if (p1Dist === p2Dist) {\n                ret = p1.index > p2.index ? p1 : p2;\n            }\n            else if (p1Dist < 0 && p2Dist < 0) {\n                ret = (p1Dist - (p1.marker?.radius || 0) >=\n                    p2Dist - (p2.marker?.radius || 0)) ?\n                    p1 :\n                    p2;\n                flip = true;\n            }\n            else {\n                ret = p1Dist < p2Dist ? p1 : p2;\n            }\n            return [ret, flip];\n        };\n        suppliedBSideCheckEvaluator = (a, b, flip) => !flip && (a > b) || (a < b);\n        return super.searchKDTree(point, compareX, e, suppliedPointEvaluator, suppliedBSideCheckEvaluator);\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\n/**\n * A bubble series is a three dimensional series type where each point\n * renders an X, Y and Z value. Each points is drawn as a bubble where the\n * position along the X and Y axes mark the X and Y values, and the size of\n * the bubble relates to the Z value.\n *\n * @sample {highcharts} highcharts/demo/bubble/\n *         Bubble chart\n *\n * @extends      plotOptions.scatter\n * @excluding    cluster\n * @product      highcharts highstock\n * @requires     highcharts-more\n * @optionparent plotOptions.bubble\n */\nBubbleSeries.defaultOptions = BubbleSeries_merge(ScatterSeries.defaultOptions, {\n    dataLabels: {\n        formatter: function () {\n            const { numberFormatter } = this.series.chart;\n            const { z } = this.point;\n            return BubbleSeries_isNumber(z) ? numberFormatter(z, -1) : '';\n        },\n        inside: true,\n        verticalAlign: 'middle'\n    },\n    /**\n     * If there are more points in the series than the `animationLimit`, the\n     * animation won't run. Animation affects overall performance and\n     * doesn't work well with heavy data series.\n     *\n     * @since 6.1.0\n     */\n    animationLimit: 250,\n    /**\n     * Whether to display negative sized bubbles. The threshold is given\n     * by the [zThreshold](#plotOptions.bubble.zThreshold) option, and negative\n     * bubbles can be visualized by setting\n     * [negativeColor](#plotOptions.bubble.negativeColor).\n     *\n     * @sample {highcharts} highcharts/plotoptions/bubble-negative/\n     *         Negative bubbles\n     *\n     * @type      {boolean}\n     * @default   true\n     * @since     3.0\n     * @apioption plotOptions.bubble.displayNegative\n     */\n    /**\n     * @extends   plotOptions.series.marker\n     * @excluding enabled, enabledThreshold, height, radius, width\n     */\n    marker: {\n        lineColor: null, // Inherit from series.color\n        lineWidth: 1,\n        /**\n         * The fill opacity of the bubble markers.\n         */\n        fillOpacity: 0.5,\n        /**\n         * In bubble charts, the radius is overridden and determined based\n         * on the point's data value.\n         *\n         * @ignore-option\n         */\n        radius: null,\n        states: {\n            hover: {\n                radiusPlus: 0\n            }\n        },\n        /**\n         * A predefined shape or symbol for the marker. Possible values are\n         * \"circle\", \"square\", \"diamond\", \"triangle\" and \"triangle-down\".\n         *\n         * Additionally, the URL to a graphic can be given on the form\n         * `url(graphic.png)`. Note that for the image to be applied to\n         * exported charts, its URL needs to be accessible by the export\n         * server.\n         *\n         * Custom callbacks for symbol path generation can also be added to\n         * `Highcharts.SVGRenderer.prototype.symbols`. The callback is then\n         * used by its method name, as shown in the demo.\n         *\n         * @sample {highcharts} highcharts/plotoptions/bubble-symbol/\n         *         Bubble chart with various symbols\n         * @sample {highcharts} highcharts/plotoptions/series-marker-symbol/\n         *         General chart with predefined, graphic and custom markers\n         *\n         * @type  {Highcharts.SymbolKeyValue|string}\n         * @since 5.0.11\n         */\n        symbol: 'circle'\n    },\n    /**\n     * Minimum bubble size. Bubbles will automatically size between the\n     * `minSize` and `maxSize` to reflect the `z` value of each bubble.\n     * Can be either pixels (when no unit is given), or a percentage of\n     * the smallest one of the plot width and height.\n     *\n     * @sample {highcharts} highcharts/plotoptions/bubble-size/\n     *         Bubble size\n     *\n     * @type    {number|string}\n     * @since   3.0\n     * @product highcharts highstock\n     */\n    minSize: 8,\n    /**\n     * Maximum bubble size. Bubbles will automatically size between the\n     * `minSize` and `maxSize` to reflect the `z` value of each bubble.\n     * Can be either pixels (when no unit is given), or a percentage of\n     * the smallest one of the plot width and height.\n     *\n     * @sample {highcharts} highcharts/plotoptions/bubble-size/\n     *         Bubble size\n     *\n     * @type    {number|string}\n     * @since   3.0\n     * @product highcharts highstock\n     */\n    maxSize: '20%',\n    /**\n     * When a point's Z value is below the\n     * [zThreshold](#plotOptions.bubble.zThreshold)\n     * setting, this color is used.\n     *\n     * @sample {highcharts} highcharts/plotoptions/bubble-negative/\n     *         Negative bubbles\n     *\n     * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @since     3.0\n     * @product   highcharts\n     * @apioption plotOptions.bubble.negativeColor\n     */\n    /**\n     * Whether the bubble's value should be represented by the area or the\n     * width of the bubble. The default, `area`, corresponds best to the\n     * human perception of the size of each bubble.\n     *\n     * @sample {highcharts} highcharts/plotoptions/bubble-sizeby/\n     *         Comparison of area and size\n     *\n     * @type       {Highcharts.BubbleSizeByValue}\n     * @default    area\n     * @since      3.0.7\n     * @apioption  plotOptions.bubble.sizeBy\n     */\n    /**\n     * When this is true, the absolute value of z determines the size of\n     * the bubble. This means that with the default `zThreshold` of 0, a\n     * bubble of value -1 will have the same size as a bubble of value 1,\n     * while a bubble of value 0 will have a smaller size according to\n     * `minSize`.\n     *\n     * @sample    {highcharts} highcharts/plotoptions/bubble-sizebyabsolutevalue/\n     *            Size by absolute value, various thresholds\n     *\n     * @type      {boolean}\n     * @default   false\n     * @since     4.1.9\n     * @product   highcharts\n     * @apioption plotOptions.bubble.sizeByAbsoluteValue\n     */\n    /**\n     * When this is true, the series will not cause the Y axis to cross\n     * the zero plane (or [threshold](#plotOptions.series.threshold) option)\n     * unless the data actually crosses the plane.\n     *\n     * For example, if `softThreshold` is `false`, a series of 0, 1, 2,\n     * 3 will make the Y axis show negative values according to the\n     * `minPadding` option. If `softThreshold` is `true`, the Y axis starts\n     * at 0.\n     *\n     * @since   4.1.9\n     * @product highcharts\n     */\n    softThreshold: false,\n    states: {\n        hover: {\n            halo: {\n                size: 5\n            }\n        }\n    },\n    tooltip: {\n        pointFormat: '({point.x}, {point.y}), Size: {point.z}'\n    },\n    turboThreshold: 0,\n    /**\n     * The minimum for the Z value range. Defaults to the highest Z value\n     * in the data.\n     *\n     * @see [zMin](#plotOptions.bubble.zMin)\n     *\n     * @sample {highcharts} highcharts/plotoptions/bubble-zmin-zmax/\n     *         Z has a possible range of 0-100\n     *\n     * @type      {number}\n     * @since     4.0.3\n     * @product   highcharts\n     * @apioption plotOptions.bubble.zMax\n     */\n    /**\n     * @default   z\n     * @apioption plotOptions.bubble.colorKey\n     */\n    /**\n     * The minimum for the Z value range. Defaults to the lowest Z value\n     * in the data.\n     *\n     * @see [zMax](#plotOptions.bubble.zMax)\n     *\n     * @sample {highcharts} highcharts/plotoptions/bubble-zmin-zmax/\n     *         Z has a possible range of 0-100\n     *\n     * @type      {number}\n     * @since     4.0.3\n     * @product   highcharts\n     * @apioption plotOptions.bubble.zMin\n     */\n    /**\n     * When [displayNegative](#plotOptions.bubble.displayNegative) is `false`,\n     * bubbles with lower Z values are skipped. When `displayNegative`\n     * is `true` and a [negativeColor](#plotOptions.bubble.negativeColor)\n     * is given, points with lower Z is colored.\n     *\n     * @sample {highcharts} highcharts/plotoptions/bubble-negative/\n     *         Negative bubbles\n     *\n     * @since   3.0\n     * @product highcharts\n     */\n    zThreshold: 0,\n    zoneAxis: 'z'\n});\nBubbleSeries_extend(BubbleSeries.prototype, {\n    alignDataLabel: BubbleSeries_columnProto.alignDataLabel,\n    applyZones: BubbleSeries_noop,\n    bubblePadding: true,\n    isBubble: true,\n    keysAffectYAxis: ['y'],\n    pointArrayMap: ['y', 'z'],\n    pointClass: Bubble_BubblePoint,\n    parallelArrays: ['x', 'y', 'z'],\n    trackerGroups: ['group', 'dataLabelsGroup'],\n    specialGroup: 'group', // To allow clipping (#6296)\n    zoneAxis: 'z'\n});\n// On updated data in any series, delete the chart-level Z extremes cache\nBubbleSeries_addEvent(BubbleSeries, 'updatedData', (e) => {\n    delete e.target.chart.bubbleZExtremes;\n});\n// After removing series, delete the chart-level Z extremes cache, #17502.\nBubbleSeries_addEvent(BubbleSeries, 'remove', (e) => {\n    delete e.target.chart.bubbleZExtremes;\n});\nhighcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType('bubble', BubbleSeries);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Bubble_BubbleSeries = (BubbleSeries);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * @typedef {\"area\"|\"width\"} Highcharts.BubbleSizeByValue\n */\n''; // Detach doclets above\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A `bubble` series. If the [type](#series.bubble.type) option is\n * not specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.bubble\n * @excluding dataParser, dataURL, legendSymbolColor, stack\n * @product   highcharts highstock\n * @requires  highcharts-more\n * @apioption series.bubble\n */\n/**\n * An array of data points for the series. For the `bubble` series type,\n * points can be given in the following ways:\n *\n * 1. An array of arrays with 3 or 2 values. In this case, the values correspond\n *    to `x,y,z`. If the first value is a string, it is applied as the name of\n *    the point, and the `x` value is inferred. The `x` value can also be\n *    omitted, in which case the inner arrays should be of length 2\\. Then the\n *    `x` value is automatically calculated, either starting at 0 and\n *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n *    series options.\n *    ```js\n *    data: [\n *        [0, 1, 2],\n *        [1, 5, 5],\n *        [2, 0, 2]\n *    ]\n *    ```\n *\n * 2. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.bubble.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        y: 1,\n *        z: 1,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        y: 5,\n *        z: 4,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @sample {highcharts} highcharts/series/data-array-of-arrays/\n *         Arrays of numeric x and y\n * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n *         Arrays of datetime x and y\n * @sample {highcharts} highcharts/series/data-array-of-name-value/\n *         Arrays of point.name and y\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<Array<(number|string),number>|Array<(number|string),number,number>|*>}\n * @extends   series.line.data\n * @product   highcharts\n * @apioption series.bubble.data\n */\n/**\n * @extends     series.line.data.marker\n * @excluding   enabledThreshold, height, radius, width\n * @product     highcharts\n * @apioption   series.bubble.data.marker\n */\n/**\n * The size value for each bubble. The bubbles' diameters are computed\n * based on the `z`, and controlled by series options like `minSize`,\n * `maxSize`, `sizeBy`, `zMin` and `zMax`.\n *\n * @type      {number|null}\n * @product   highcharts\n * @apioption series.bubble.data.z\n */\n/**\n * @excluding enabled, enabledThreshold, height, radius, width\n * @apioption series.bubble.marker\n */\n''; // Adds doclets above to transpiled file\n\n;// ./code/es-modules/Series/ColumnRange/ColumnRangePoint.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { seriesTypes: { column: { prototype: { pointClass: { prototype: ColumnRangePoint_columnProto } } }, arearange: { prototype: { pointClass: ColumnRangePoint_AreaRangePoint } } } } = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default());\n\nconst { extend: ColumnRangePoint_extend, isNumber: ColumnRangePoint_isNumber } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Class\n *\n * */\nclass ColumnRangePoint extends ColumnRangePoint_AreaRangePoint {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    isValid() {\n        return ColumnRangePoint_isNumber(this.low);\n    }\n}\nColumnRangePoint_extend(ColumnRangePoint.prototype, {\n    setState: ColumnRangePoint_columnProto.setState\n});\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const ColumnRange_ColumnRangePoint = (ColumnRangePoint);\n\n;// ./code/es-modules/Series/ColumnRange/ColumnRangeSeries.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { noop: ColumnRangeSeries_noop } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\nconst { seriesTypes: { arearange: ColumnRangeSeries_AreaRangeSeries, column: ColumnSeries, column: { prototype: ColumnRangeSeries_columnProto } } } = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default());\n\nconst { addEvent: ColumnRangeSeries_addEvent, clamp: ColumnRangeSeries_clamp, extend: ColumnRangeSeries_extend, isNumber: ColumnRangeSeries_isNumber, merge: ColumnRangeSeries_merge, pick: ColumnRangeSeries_pick } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Constants\n *\n * */\n/**\n * The column range is a cartesian series type with higher and lower\n * Y values along an X axis. To display horizontal bars, set\n * [chart.inverted](#chart.inverted) to `true`.\n *\n * @sample {highcharts|highstock} highcharts/demo/columnrange/\n *         Inverted column range\n *\n * @extends      plotOptions.column\n * @since        2.3.0\n * @excluding    negativeColor, stacking, softThreshold, threshold\n * @product      highcharts highstock\n * @requires     highcharts-more\n * @optionparent plotOptions.columnrange\n */\nconst columnRangeOptions = {\n    borderRadius: {\n        where: 'all'\n    },\n    /**\n     * Extended data labels for range series types. Range series data labels\n     * have no `x` and `y` options. Instead, they have `xLow`, `xHigh`,\n     * `yLow` and `yHigh` options to allow the higher and lower data label\n     * sets individually.\n     *\n     * @declare   Highcharts.SeriesAreaRangeDataLabelsOptionsObject\n     * @extends   plotOptions.arearange.dataLabels\n     * @since     2.3.0\n     * @product   highcharts highstock\n     * @apioption plotOptions.columnrange.dataLabels\n     */\n    pointRange: null,\n    legendSymbol: 'rectangle',\n    /** @ignore-option */\n    marker: null,\n    states: {\n        hover: {\n            /** @ignore-option */\n            halo: false\n        }\n    }\n};\n/* *\n *\n *  Class\n *\n * */\n/**\n * The ColumnRangeSeries class\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.columnrange\n *\n * @augments Highcharts.Series\n */\nclass ColumnRangeSeries extends ColumnRangeSeries_AreaRangeSeries {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    setOptions() {\n        // #14359 Prevent side-effect from stacking.\n        ColumnRangeSeries_merge(true, arguments[0], { stacking: void 0 });\n        return ColumnRangeSeries_AreaRangeSeries.prototype.setOptions.apply(this, arguments);\n    }\n    // Overrides from modules that may be loaded after this module\n    // @todo move to compositions\n    translate() {\n        return ColumnRangeSeries_columnProto.translate.apply(this);\n    }\n    // Public crispCol(): BBoxObject {\n    //     return columnProto.crispCol.apply(this, arguments as any);\n    // }\n    // public drawPoints(): void {\n    //     return columnProto.drawPoints.apply(this, arguments as any);\n    // }\n    // public drawTracker(): void {\n    //     return columnProto.drawTracker.apply(this, arguments as any);\n    // }\n    // public getColumnMetrics(): ColumnMetricsObject {\n    //     return columnProto.getColumnMetrics.apply(this, arguments as any);\n    // }\n    pointAttribs() {\n        return ColumnRangeSeries_columnProto.pointAttribs.apply(this, arguments);\n    }\n    // Public adjustForMissingColumns(): number {\n    //     return columnProto.adjustForMissingColumns.apply(this, arguments);\n    // }\n    // public animate(): void {\n    //     return columnProto.animate.apply(this, arguments as any);\n    // }\n    translate3dPoints() {\n        return ColumnRangeSeries_columnProto.translate3dPoints.apply(this, arguments);\n    }\n    translate3dShapes() {\n        return ColumnRangeSeries_columnProto.translate3dShapes.apply(this, arguments);\n    }\n    afterColumnTranslate() {\n        /**\n         * Translate data points from raw values x and y to plotX and plotY\n         * @private\n         */\n        const yAxis = this.yAxis, xAxis = this.xAxis, startAngleRad = xAxis.startAngleRad, chart = this.chart, isRadial = this.xAxis.isRadial, safeDistance = Math.max(chart.chartWidth, chart.chartHeight) + 999;\n        let height, heightDifference, start, y;\n        // eslint-disable-next-line valid-jsdoc\n        /**\n         * Don't draw too far outside plot area (#6835)\n         * @private\n         */\n        function safeBounds(pixelPos) {\n            return ColumnRangeSeries_clamp(pixelPos, -safeDistance, safeDistance);\n        }\n        // Set plotLow and plotHigh\n        this.points.forEach((point) => {\n            const shapeArgs = point.shapeArgs || {}, minPointLength = this.options.minPointLength, plotY = point.plotY, plotHigh = yAxis.translate(point.high, 0, 1, 0, 1);\n            if (ColumnRangeSeries_isNumber(plotHigh) && ColumnRangeSeries_isNumber(plotY)) {\n                point.plotHigh = safeBounds(plotHigh);\n                point.plotLow = safeBounds(plotY);\n                // Adjust shape\n                y = point.plotHigh;\n                height = ColumnRangeSeries_pick(point.rectPlotY, point.plotY) - point.plotHigh;\n                // Adjust for minPointLength\n                if (Math.abs(height) < minPointLength) {\n                    heightDifference = (minPointLength - height);\n                    height += heightDifference;\n                    y -= heightDifference / 2;\n                    // Adjust for negative ranges or reversed Y axis (#1457)\n                }\n                else if (height < 0) {\n                    height *= -1;\n                    y -= height;\n                }\n                if (isRadial && this.polar) {\n                    start = point.barX + startAngleRad;\n                    point.shapeType = 'arc';\n                    point.shapeArgs = this.polar.arc(y + height, y, start, start + point.pointWidth);\n                }\n                else {\n                    shapeArgs.height = height;\n                    shapeArgs.y = y;\n                    const { x = 0, width = 0 } = shapeArgs;\n                    // #17912, aligning column range points\n                    // merge if shapeArgs contains more properties e.g. for 3d\n                    point.shapeArgs = ColumnRangeSeries_merge(point.shapeArgs, this.crispCol(x, y, width, height));\n                    point.tooltipPos = chart.inverted ?\n                        [\n                            yAxis.len + yAxis.pos - chart.plotLeft - y -\n                                height / 2,\n                            xAxis.len + xAxis.pos - chart.plotTop - x -\n                                width / 2,\n                            height\n                        ] : [\n                        xAxis.left - chart.plotLeft + x + width / 2,\n                        yAxis.pos - chart.plotTop + y + height / 2,\n                        height\n                    ]; // Don't inherit from column tooltip position - #3372\n                }\n            }\n        });\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\nColumnRangeSeries.defaultOptions = ColumnRangeSeries_merge(ColumnSeries.defaultOptions, ColumnRangeSeries_AreaRangeSeries.defaultOptions, columnRangeOptions);\nColumnRangeSeries_addEvent(ColumnRangeSeries, 'afterColumnTranslate', function () {\n    ColumnRangeSeries.prototype.afterColumnTranslate.apply(this);\n}, { order: 5 });\nColumnRangeSeries_extend(ColumnRangeSeries.prototype, {\n    directTouch: true,\n    pointClass: ColumnRange_ColumnRangePoint,\n    trackerGroups: ['group', 'dataLabelsGroup'],\n    adjustForMissingColumns: ColumnRangeSeries_columnProto.adjustForMissingColumns,\n    animate: ColumnRangeSeries_columnProto.animate,\n    crispCol: ColumnRangeSeries_columnProto.crispCol,\n    drawGraph: ColumnRangeSeries_noop,\n    drawPoints: ColumnRangeSeries_columnProto.drawPoints,\n    getSymbol: ColumnRangeSeries_noop,\n    drawTracker: ColumnRangeSeries_columnProto.drawTracker,\n    getColumnMetrics: ColumnRangeSeries_columnProto.getColumnMetrics\n});\nhighcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType('columnrange', ColumnRangeSeries);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const ColumnRange_ColumnRangeSeries = ((/* unused pure expression or super */ null && (ColumnRangeSeries)));\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A `columnrange` series. If the [type](#series.columnrange.type)\n * option is not specified, it is inherited from\n * [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.columnrange\n * @excluding dataParser, dataURL, stack, stacking\n * @product   highcharts highstock\n * @requires  highcharts-more\n * @apioption series.columnrange\n */\n/**\n * An array of data points for the series. For the `columnrange` series\n * type, points can be given in the following ways:\n *\n * 1. An array of arrays with 3 or 2 values. In this case, the values correspond\n *    to `x,low,high`. If the first value is a string, it is applied as the name\n *    of the point, and the `x` value is inferred. The `x` value can also be\n *    omitted, in which case the inner arrays should be of length 2\\. Then the\n *    `x` value is automatically calculated, either starting at 0 and\n *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n *    series options.\n *    ```js\n *    data: [\n *        [0, 4, 2],\n *        [1, 2, 1],\n *        [2, 9, 10]\n *    ]\n *    ```\n *\n * 2. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.columnrange.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        low: 0,\n *        high: 4,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        low: 5,\n *        high: 3,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @sample {highcharts} highcharts/series/data-array-of-arrays/\n *         Arrays of numeric x and y\n * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n *         Arrays of datetime x and y\n * @sample {highcharts} highcharts/series/data-array-of-name-value/\n *         Arrays of point.name and y\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<Array<(number|string),number>|Array<(number|string),number,number>|*>}\n * @extends   series.arearange.data\n * @excluding marker\n * @product   highcharts highstock\n * @apioption series.columnrange.data\n */\n/**\n * @extends   series.columnrange.dataLabels\n * @product   highcharts highstock\n * @apioption series.columnrange.data.dataLabels\n */\n/**\n * @excluding halo, lineWidth, lineWidthPlus, marker\n * @product   highcharts highstock\n * @apioption series.columnrange.states.hover\n */\n/**\n * @excluding halo, lineWidth, lineWidthPlus, marker\n * @product   highcharts highstock\n * @apioption series.columnrange.states.select\n */\n''; // Adds doclets above into transpiled\n\n;// ./code/es-modules/Series/ColumnPyramid/ColumnPyramidSeriesDefaults.js\n/* *\n *\n *  (c) 2010-2025 Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  API Options\n *\n * */\n/**\n * Column pyramid series display one pyramid per value along an X axis.\n * To display horizontal pyramids, set [chart.inverted](#chart.inverted) to\n * `true`.\n *\n * @sample {highcharts|highstock} highcharts/demo/column-pyramid/\n *         Column pyramid\n * @sample {highcharts|highstock} highcharts/plotoptions/columnpyramid-stacked/\n *         Column pyramid stacked\n * @sample {highcharts|highstock} highcharts/plotoptions/columnpyramid-inverted/\n *         Column pyramid inverted\n *\n * @extends      plotOptions.column\n * @since        7.0.0\n * @product      highcharts highstock\n * @excluding    boostThreshold, borderRadius, crisp, depth, edgeColor,\n *               edgeWidth, groupZPadding, negativeColor, softThreshold,\n *               threshold, zoneAxis, zones, boostBlending\n * @requires     highcharts-more\n * @optionparent plotOptions.columnpyramid\n */\nconst ColumnPyramidSeriesDefaults = {};\n/**\n * A `columnpyramid` series. If the [type](#series.columnpyramid.type) option is\n * not specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.columnpyramid\n * @excluding connectEnds, connectNulls, dashStyle, dataParser, dataURL,\n *            gapSize, gapUnit, linecap, lineWidth, marker, step,\n *            boostThreshold, boostBlending\n * @product   highcharts highstock\n * @requires  highcharts-more\n * @apioption series.columnpyramid\n */\n/**\n * @excluding halo, lineWidth, lineWidthPlus, marker\n * @product   highcharts highstock\n * @apioption series.columnpyramid.states.hover\n */\n/**\n * @excluding halo, lineWidth, lineWidthPlus, marker\n * @product   highcharts highstock\n * @apioption series.columnpyramid.states.select\n */\n/**\n * An array of data points for the series. For the `columnpyramid` series type,\n * points can be given in the following ways:\n *\n * 1. An array of numerical values. In this case, the numerical values will be\n *    interpreted as `y` options. The `x` values will be automatically\n *    calculated, either starting at 0 and incremented by 1, or from\n *    `pointStart` and `pointInterval` given in the series options. If the axis\n *    has categories, these will be used. Example:\n *    ```js\n *    data: [0, 5, 3, 5]\n *    ```\n *\n * 2. An array of arrays with 2 values. In this case, the values correspond to\n *    `x,y`. If the first value is a string, it is applied as the name of the\n *    point, and the `x` value is inferred.\n *    ```js\n *    data: [\n *        [0, 6],\n *        [1, 2],\n *        [2, 6]\n *    ]\n *    ```\n *\n * 3. An array of objects with named values. The objects are point configuration\n *    objects as seen below. If the total number of data points exceeds the\n *    series' [turboThreshold](#series.columnpyramid.turboThreshold), this\n *    option is not available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        y: 9,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        y: 6,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @sample {highcharts} highcharts/chart/reflow-true/\n *         Numerical values\n * @sample {highcharts} highcharts/series/data-array-of-arrays/\n *         Arrays of numeric x and y\n * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n *         Arrays of datetime x and y\n * @sample {highcharts} highcharts/series/data-array-of-name-value/\n *         Arrays of point.name and y\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<number|Array<(number|string),(number|null)>|null|*>}\n * @extends   series.line.data\n * @excluding marker\n * @product   highcharts highstock\n * @apioption series.columnpyramid.data\n */\n''; // Keeps doclets above separate\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const ColumnPyramid_ColumnPyramidSeriesDefaults = (ColumnPyramidSeriesDefaults);\n\n;// ./code/es-modules/Series/ColumnPyramid/ColumnPyramidSeries.js\n/* *\n *\n *  (c) 2010-2025 Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { column: ColumnPyramidSeries_ColumnSeries } = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default()).seriesTypes;\n\nconst { clamp: ColumnPyramidSeries_clamp, merge: ColumnPyramidSeries_merge, pick: ColumnPyramidSeries_pick } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * The ColumnPyramidSeries class\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.columnpyramid\n *\n * @augments Highcharts.Series\n */\nclass ColumnPyramidSeries extends ColumnPyramidSeries_ColumnSeries {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Overrides the column translate method\n     * @private\n     */\n    translate() {\n        const series = this, chart = series.chart, options = series.options, dense = series.dense =\n            series.closestPointRange * series.xAxis.transA < 2, borderWidth = series.borderWidth = ColumnPyramidSeries_pick(options.borderWidth, dense ? 0 : 1 // #3635\n        ), yAxis = series.yAxis, threshold = options.threshold, minPointLength = ColumnPyramidSeries_pick(options.minPointLength, 5), metrics = series.getColumnMetrics(), pointWidth = metrics.width, pointXOffset = series.pointXOffset = metrics.offset;\n        let translatedThreshold = series.translatedThreshold =\n            yAxis.getThreshold(threshold), \n        // Postprocessed for border width\n        seriesBarW = series.barW =\n            Math.max(pointWidth, 1 + 2 * borderWidth);\n        if (chart.inverted) {\n            translatedThreshold -= 0.5; // #3355\n        }\n        // When the pointPadding is 0,\n        // we want the pyramids to be packed tightly,\n        // so we allow individual pyramids to have individual sizes.\n        // When pointPadding is greater,\n        // we strive for equal-width columns (#2694).\n        if (options.pointPadding) {\n            seriesBarW = Math.ceil(seriesBarW);\n        }\n        super.translate();\n        // Record the new values\n        for (const point of series.points) {\n            const yBottom = ColumnPyramidSeries_pick(point.yBottom, translatedThreshold), safeDistance = 999 + Math.abs(yBottom), plotY = ColumnPyramidSeries_clamp(point.plotY, -safeDistance, yAxis.len + safeDistance), \n            // Don't draw too far outside plot area\n            // (#1303, #2241, #4264)\n            barW = seriesBarW / 2, barY = Math.min(plotY, yBottom), barH = Math.max(plotY, yBottom) - barY;\n            let barX = point.plotX + pointXOffset, stackTotal, stackHeight, topXwidth, bottomXwidth, invBarPos, x1, x2, x3, x4, y1, y2;\n            // Adjust for null or missing points\n            if (options.centerInCategory) {\n                barX = series.adjustForMissingColumns(barX, pointWidth, point, metrics);\n            }\n            point.barX = barX;\n            point.pointWidth = pointWidth;\n            // Fix the tooltip on center of grouped pyramids\n            // (#1216, #424, #3648)\n            point.tooltipPos = chart.inverted ?\n                [\n                    yAxis.len + yAxis.pos - chart.plotLeft - plotY,\n                    series.xAxis.len - barX - barW,\n                    barH\n                ] :\n                [\n                    barX + barW,\n                    plotY + yAxis.pos - chart.plotTop,\n                    barH\n                ];\n            stackTotal =\n                threshold + (point.total || point.y);\n            // Overwrite stacktotal (always 100 / -100)\n            if (options.stacking === 'percent') {\n                stackTotal =\n                    threshold + (point.y < 0) ?\n                        -100 :\n                        100;\n            }\n            // Get the highest point (if stack, extract from total)\n            const topPointY = yAxis.toPixels((stackTotal), true);\n            // Calculate height of stack (in pixels)\n            stackHeight =\n                chart.plotHeight - topPointY -\n                    (chart.plotHeight - translatedThreshold);\n            // `topXwidth` and `bottomXwidth` = width of lines from the center\n            // calculated from tanges proportion. Cannot be a NaN #12514.\n            topXwidth = stackHeight ?\n                (barW * (barY - topPointY)) / stackHeight : 0;\n            // Like topXwidth, but with height of point\n            bottomXwidth = stackHeight ?\n                (barW * (barY + barH - topPointY)) / stackHeight :\n                0;\n            /*\n                    /\\\n                   /  \\\n            x1,y1,------ x2,y1\n                /       \\\n               -----------\n            x4,y2        x3,y2\n            */\n            x1 = barX - topXwidth + barW;\n            x2 = barX + topXwidth + barW;\n            x3 = barX + bottomXwidth + barW;\n            x4 = barX - bottomXwidth + barW;\n            y1 = barY - minPointLength;\n            y2 = barY + barH;\n            if (point.y < 0) {\n                y1 = barY;\n                y2 = barY + barH + minPointLength;\n            }\n            // Inverted chart\n            if (chart.inverted) {\n                invBarPos = yAxis.width - barY;\n                stackHeight =\n                    topPointY - (yAxis.width - translatedThreshold);\n                // Proportion tanges\n                topXwidth = (barW *\n                    (topPointY - invBarPos)) / stackHeight;\n                bottomXwidth = (barW *\n                    (topPointY - (invBarPos - barH))) / stackHeight;\n                x1 = barX + barW + topXwidth; // Top bottom\n                x2 = x1 - 2 * topXwidth; // Top top\n                x3 = barX - bottomXwidth + barW; // Bottom top\n                x4 = barX + bottomXwidth + barW; // Bottom bottom\n                y1 = barY;\n                y2 = barY + barH - minPointLength;\n                if (point.y < 0) {\n                    y2 = barY + barH + minPointLength;\n                }\n            }\n            // Register shape type and arguments to be used in drawPoints\n            point.shapeType = 'path';\n            point.shapeArgs = {\n                x: x1,\n                y: y1,\n                width: x2 - x1,\n                height: barH,\n                // Path of pyramid\n                d: [\n                    ['M', x1, y1],\n                    ['L', x2, y1],\n                    ['L', x3, y2],\n                    ['L', x4, y2],\n                    ['Z']\n                ]\n            };\n        }\n    }\n}\n/* *\n *\n *  Static properties\n *\n * */\nColumnPyramidSeries.defaultOptions = ColumnPyramidSeries_merge(ColumnPyramidSeries_ColumnSeries.defaultOptions, ColumnPyramid_ColumnPyramidSeriesDefaults);\nhighcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType('columnpyramid', ColumnPyramidSeries);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const ColumnPyramid_ColumnPyramidSeries = ((/* unused pure expression or super */ null && (ColumnPyramidSeries)));\n\n;// ./code/es-modules/Series/ErrorBar/ErrorBarSeriesDefaults.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  API Options\n *\n * */\n/**\n * Error bars are a graphical representation of the variability of data and\n * are used on graphs to indicate the error, or uncertainty in a reported\n * measurement.\n *\n * @sample highcharts/demo/error-bar/\n *         Error bars on a column series\n * @sample highcharts/series-errorbar/on-scatter/\n *         Error bars on a scatter series\n * @sample highcharts/series-errorbar/datalabels/\n *         Error bars with data labels\n *\n * @extends      plotOptions.boxplot\n * @excluding    boostBlending, boostThreshold\n * @product      highcharts\n * @requires     highcharts-more\n * @optionparent plotOptions.errorbar\n */\nconst ErrorBarSeriesDefaults = {\n    /**\n     * The main color of the bars. This can be overridden by\n     * [stemColor](#plotOptions.errorbar.stemColor) and\n     * [whiskerColor](#plotOptions.errorbar.whiskerColor) individually.\n     *\n     * @sample {highcharts} highcharts/plotoptions/error-bar-styling/\n     *         Error bar styling\n     *\n     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @default #000000\n     * @since   3.0\n     * @product highcharts\n     */\n    color: \"#000000\" /* Palette.neutralColor100 */,\n    grouping: false,\n    /**\n     * The parent series of the error bar. The default value links it to\n     * the previous series. Otherwise, use the id of the parent series.\n     *\n     * @since   3.0\n     * @product highcharts\n     */\n    linkedTo: ':previous',\n    tooltip: {\n        pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {series.name}: <b>{point.low}</b> - <b>{point.high}</b><br/>'\n    },\n    /**\n     * The line width of the whiskers, the horizontal lines marking\n     * low and high values. When `null`, the general\n     * [lineWidth](#plotOptions.errorbar.lineWidth) applies.\n     *\n     * @sample {highcharts} highcharts/plotoptions/error-bar-styling/\n     *         Error bar styling\n     *\n     * @type    {number}\n     * @since   3.0\n     * @product highcharts\n     */\n    whiskerWidth: null\n};\n/**\n * A `errorbar` series. If the [type](#series.errorbar.type) option\n * is not specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.errorbar\n * @excluding dataParser, dataURL, stack, stacking, boostThreshold,\n *            boostBlending\n * @product   highcharts\n * @requires  highcharts-more\n * @apioption series.errorbar\n */\n/**\n * An array of data points for the series. For the `errorbar` series\n * type, points can be given in the following ways:\n *\n * 1. An array of arrays with 3 or 2 values. In this case, the values correspond\n *    to `x,low,high`. If the first value is a string, it is applied as the name\n *    of the point, and the `x` value is inferred. The `x` value can also be\n *    omitted, in which case the inner arrays should be of length 2\\. Then the\n *    `x` value is automatically calculated, either starting at 0 and\n *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n *    series options.\n *    ```js\n *    data: [\n *        [0, 10, 2],\n *        [1, 1, 8],\n *        [2, 4, 5]\n *    ]\n *    ```\n *\n * 2. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.errorbar.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        low: 0,\n *        high: 0,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        low: 5,\n *        high: 5,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @sample {highcharts} highcharts/series/data-array-of-arrays/\n *         Arrays of numeric x and y\n * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n *         Arrays of datetime x and y\n * @sample {highcharts} highcharts/series/data-array-of-name-value/\n *         Arrays of point.name and y\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<Array<(number|string),number>|Array<(number|string),number,number>|*>}\n * @extends   series.arearange.data\n * @excluding dataLabels, drilldown, marker, states\n * @product   highcharts\n * @apioption series.errorbar.data\n */\n''; // Adds doclets above to transpiled file\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const ErrorBar_ErrorBarSeriesDefaults = (ErrorBarSeriesDefaults);\n\n;// ./code/es-modules/Series/ErrorBar/ErrorBarSeries.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\n\nconst { arearange: ErrorBarSeries_AreaRangeSeries } = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default()).seriesTypes;\n\nconst { addEvent: ErrorBarSeries_addEvent, merge: ErrorBarSeries_merge, extend: ErrorBarSeries_extend } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * Errorbar series type\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.errorbar\n *\n * @augments Highcharts.Series\n */\nclass ErrorBarSeries extends BoxPlot_BoxPlotSeries {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    getColumnMetrics() {\n        const series = this;\n        // Get the width and X offset, either on top of the linked series\n        // column or standalone\n        return ((series.linkedParent && series.linkedParent.columnMetrics) ||\n            highcharts_Series_types_column_commonjs_highcharts_Series_types_column_commonjs2_highcharts_Series_types_column_root_Highcharts_Series_types_column_default().prototype.getColumnMetrics.call(series));\n    }\n    drawDataLabels() {\n        const series = this, valKey = series.pointValKey;\n        if (ErrorBarSeries_AreaRangeSeries) {\n            ErrorBarSeries_AreaRangeSeries.prototype.drawDataLabels.call(series);\n            // Arearange drawDataLabels does not reset point.y to high,\n            // but to low after drawing (#4133)\n            for (const point of series.points) {\n                point.y = point[valKey];\n            }\n        }\n    }\n    toYData(point) {\n        // Return a plain array for speedy calculation\n        return [point.low, point.high];\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\nErrorBarSeries.defaultOptions = ErrorBarSeries_merge(BoxPlot_BoxPlotSeries.defaultOptions, ErrorBar_ErrorBarSeriesDefaults);\nErrorBarSeries_addEvent(ErrorBarSeries, 'afterTranslate', function () {\n    for (const point of this.points) {\n        point.plotLow = point.plotY;\n    }\n}, { order: 0 });\nErrorBarSeries_extend(ErrorBarSeries.prototype, {\n    pointArrayMap: ['low', 'high'], // Array point configs are mapped to this\n    pointValKey: 'high', // Defines the top of the tracker\n    doQuartiles: false\n});\nhighcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType('errorbar', ErrorBarSeries);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const ErrorBar_ErrorBarSeries = ((/* unused pure expression or super */ null && (ErrorBarSeries)));\n\n;// ./code/es-modules/Series/Gauge/GaugePoint.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { series: { prototype: { pointClass: Point } } } = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default());\n/* *\n *\n *  Class\n *\n * */\nclass GaugePoint extends Point {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Don't do any hover colors or anything\n     * @private\n     */\n    setState(state) {\n        this.state = state;\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Gauge_GaugePoint = (GaugePoint);\n\n;// ./code/es-modules/Series/Gauge/GaugeSeries.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { noop: GaugeSeries_noop } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\nconst { series: GaugeSeries_Series, seriesTypes: { column: GaugeSeries_ColumnSeries } } = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default());\n\nconst { clamp: GaugeSeries_clamp, isNumber: GaugeSeries_isNumber, extend: GaugeSeries_extend, merge: GaugeSeries_merge, pick: GaugeSeries_pick, pInt, defined: GaugeSeries_defined } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n *\n * The `gauge` series type\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.map\n *\n * @augments Highcharts.Series\n */\nclass GaugeSeries extends GaugeSeries_Series {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Calculate paths etc\n     * @private\n     */\n    translate() {\n        const series = this, yAxis = series.yAxis, options = series.options, center = yAxis.center;\n        series.generatePoints();\n        series.points.forEach((point) => {\n            const dialOptions = GaugeSeries_merge(options.dial, point.dial), radius = (pInt(dialOptions.radius) * center[2]) / 200, baseLength = (pInt(dialOptions.baseLength) * radius) / 100, rearLength = (pInt(dialOptions.rearLength) * radius) / 100, baseWidth = dialOptions.baseWidth, topWidth = dialOptions.topWidth;\n            let overshoot = options.overshoot, rotation = yAxis.startAngleRad + yAxis.translate(point.y, void 0, void 0, void 0, true);\n            // Handle the wrap and overshoot options\n            if (GaugeSeries_isNumber(overshoot) || options.wrap === false) {\n                overshoot = GaugeSeries_isNumber(overshoot) ?\n                    (overshoot / 180 * Math.PI) : 0;\n                rotation = GaugeSeries_clamp(rotation, yAxis.startAngleRad - overshoot, yAxis.endAngleRad + overshoot);\n            }\n            rotation = rotation * 180 / Math.PI;\n            point.shapeType = 'path';\n            const d = dialOptions.path || [\n                ['M', -rearLength, -baseWidth / 2],\n                ['L', baseLength, -baseWidth / 2],\n                ['L', radius, -topWidth / 2],\n                ['L', radius, topWidth / 2],\n                ['L', baseLength, baseWidth / 2],\n                ['L', -rearLength, baseWidth / 2],\n                ['Z']\n            ];\n            point.shapeArgs = {\n                d,\n                translateX: center[0],\n                translateY: center[1],\n                rotation: rotation\n            };\n            // Positions for data label\n            point.plotX = center[0];\n            point.plotY = center[1];\n            if (GaugeSeries_defined(point.y) && yAxis.max - yAxis.min) {\n                point.percentage =\n                    (point.y - yAxis.min) / (yAxis.max - yAxis.min) * 100;\n            }\n        });\n    }\n    /**\n     * Draw the points where each point is one needle\n     * @private\n     */\n    drawPoints() {\n        const series = this, chart = series.chart, center = series.yAxis.center, pivot = series.pivot, options = series.options, pivotOptions = options.pivot, renderer = chart.renderer;\n        series.points.forEach((point) => {\n            const graphic = point.graphic, shapeArgs = point.shapeArgs, d = shapeArgs.d, dialOptions = GaugeSeries_merge(options.dial, point.dial); // #1233\n            if (graphic) {\n                graphic.animate(shapeArgs);\n                shapeArgs.d = d; // Animate alters it\n            }\n            else {\n                point.graphic =\n                    renderer[point.shapeType](shapeArgs)\n                        .addClass('highcharts-dial')\n                        .add(series.group);\n            }\n            // Presentational attributes\n            if (!chart.styledMode) {\n                point.graphic[graphic ? 'animate' : 'attr']({\n                    stroke: dialOptions.borderColor,\n                    'stroke-width': dialOptions.borderWidth,\n                    fill: dialOptions.backgroundColor\n                });\n            }\n        });\n        // Add or move the pivot\n        if (pivot) {\n            pivot.animate({\n                translateX: center[0],\n                translateY: center[1]\n            });\n        }\n        else if (pivotOptions) {\n            series.pivot =\n                renderer.circle(0, 0, pivotOptions.radius)\n                    .attr({\n                    zIndex: 2\n                })\n                    .addClass('highcharts-pivot')\n                    .translate(center[0], center[1])\n                    .add(series.group);\n            // Presentational attributes\n            if (!chart.styledMode) {\n                series.pivot.attr({\n                    fill: pivotOptions.backgroundColor,\n                    stroke: pivotOptions.borderColor,\n                    'stroke-width': pivotOptions.borderWidth\n                });\n            }\n        }\n    }\n    /**\n     * Animate the arrow up from startAngle\n     * @private\n     */\n    animate(init) {\n        const series = this;\n        if (!init) {\n            series.points.forEach((point) => {\n                const graphic = point.graphic;\n                if (graphic) {\n                    // Start value\n                    graphic.attr({\n                        rotation: series.yAxis.startAngleRad * 180 / Math.PI\n                    });\n                    // Animate\n                    graphic.animate({\n                        rotation: point.shapeArgs.rotation\n                    }, series.options.animation);\n                }\n            });\n        }\n    }\n    /**\n     * @private\n     */\n    render() {\n        this.group = this.plotGroup('group', 'series', this.visible ? 'inherit' : 'hidden', this.options.zIndex, this.chart.seriesGroup);\n        GaugeSeries_Series.prototype.render.call(this);\n        this.group.clip(this.chart.clipRect);\n    }\n    /**\n     * Extend the basic setData method by running processData and generatePoints\n     * immediately, in order to access the points from the legend.\n     * @private\n     */\n    setData(data, redraw) {\n        GaugeSeries_Series.prototype.setData.call(this, data, false);\n        this.processData();\n        this.generatePoints();\n        if (GaugeSeries_pick(redraw, true)) {\n            this.chart.redraw();\n        }\n    }\n    /**\n     * Define hasData function for non-cartesian series.\n     * Returns true if the series has points at all.\n     * @private\n     */\n    hasData() {\n        return !!this.points.length; // != 0\n    }\n}\n/* *\n *\n *  Static properties\n *\n * */\n/**\n * Gauges are circular plots displaying one or more values with a dial\n * pointing to values along the perimeter.\n *\n * @sample highcharts/demo/gauge-speedometer/\n *         Gauge chart\n *\n * @extends      plotOptions.line\n * @excluding    animationLimit, boostThreshold, colorAxis, colorKey,\n *               connectEnds, connectNulls, cropThreshold, dashStyle,\n *               dragDrop, findNearestPointBy, getExtremesFromAll, marker,\n *               negativeColor, pointPlacement, shadow, softThreshold,\n *               stacking, states, step, threshold, turboThreshold, xAxis,\n *               zoneAxis, zones, dataSorting, boostBlending\n * @product      highcharts\n * @requires     highcharts-more\n * @optionparent plotOptions.gauge\n */\nGaugeSeries.defaultOptions = GaugeSeries_merge(GaugeSeries_Series.defaultOptions, {\n    /**\n     * When this option is `true`, the dial will wrap around the axes.\n     * For instance, in a full-range gauge going from 0 to 360, a value\n     * of 400 will point to 40\\. When `wrap` is `false`, the dial stops\n     * at 360.\n     *\n     * @see [overshoot](#plotOptions.gauge.overshoot)\n     *\n     * @type      {boolean}\n     * @default   true\n     * @since     3.0\n     * @product   highcharts\n     * @apioption plotOptions.gauge.wrap\n     */\n    /**\n     * Data labels for the gauge. For gauges, the data labels are\n     * enabled by default and shown in a bordered box below the point.\n     *\n     * @since   2.3.0\n     * @product highcharts\n     */\n    dataLabels: {\n        borderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n        borderRadius: 3,\n        borderWidth: 1,\n        crop: false,\n        defer: false,\n        enabled: true,\n        verticalAlign: 'top',\n        y: 15,\n        zIndex: 2\n    },\n    /**\n     * Options for the dial or arrow pointer of the gauge.\n     *\n     * In styled mode, the dial is styled with the\n     * `.highcharts-gauge-series .highcharts-dial` rule.\n     *\n     * @sample {highcharts} highcharts/css/gauge/\n     *         Styled mode\n     *\n     * @type    {*}\n     * @since   2.3.0\n     * @product highcharts\n     */\n    dial: {\n        /**\n         * The background or fill color of the gauge's dial.\n         *\n         * @sample {highcharts} highcharts/plotoptions/gauge-dial/\n         *         Dial options demonstrated\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @default   #000000\n         * @since     2.3.0\n         * @product   highcharts\n         * @apioption plotOptions.gauge.dial.backgroundColor\n         */\n        backgroundColor: \"#000000\" /* Palette.neutralColor100 */,\n        /**\n         * The length of the dial's base part, relative to the total\n         * radius or length of the dial.\n         *\n         * @sample {highcharts} highcharts/plotoptions/gauge-dial/\n         *         Dial options demonstrated\n         *\n         * @type      {string}\n         * @default   70%\n         * @since     2.3.0\n         * @product   highcharts\n         * @apioption plotOptions.gauge.dial.baseLength\n         */\n        baseLength: '70%',\n        /**\n         * The pixel width of the base of the gauge dial. The base is\n         * the part closest to the pivot, defined by baseLength.\n         *\n         * @sample {highcharts} highcharts/plotoptions/gauge-dial/\n         *         Dial options demonstrated\n         *\n         * @type      {number}\n         * @default   3\n         * @since     2.3.0\n         * @product   highcharts\n         * @apioption plotOptions.gauge.dial.baseWidth\n         */\n        baseWidth: 3,\n        /**\n         * The border color or stroke of the gauge's dial. By default,\n         * the borderWidth is 0, so this must be set in addition to a\n         * custom border color.\n         *\n         * @sample {highcharts} highcharts/plotoptions/gauge-dial/\n         *         Dial options demonstrated\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @default   #cccccc\n         * @since     2.3.0\n         * @product   highcharts\n         * @apioption plotOptions.gauge.dial.borderColor\n         */\n        borderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n        /**\n         * The width of the gauge dial border in pixels.\n         *\n         * @sample {highcharts} highcharts/plotoptions/gauge-dial/\n         *         Dial options demonstrated\n         *\n         * @type      {number}\n         * @default   0\n         * @since     2.3.0\n         * @product   highcharts\n         * @apioption plotOptions.gauge.dial.borderWidth\n         */\n        borderWidth: 0,\n        /**\n         * An array with an SVG path for the custom dial.\n         *\n         * @sample {highcharts} highcharts/plotoptions/gauge-path/\n         *         Dial options demonstrated\n         *\n         * @type      {Highcharts.SVGPathArray}\n         * @since 10.2.0\n         * @product   highcharts\n         * @apioption plotOptions.gauge.dial.path\n         */\n        /**\n         * The radius or length of the dial, in percentages relative to\n         * the radius of the gauge itself.\n         *\n         * @sample {highcharts} highcharts/plotoptions/gauge-dial/\n         *         Dial options demonstrated\n         *\n         * @type      {string}\n         * @default   80%\n         * @since     2.3.0\n         * @product   highcharts\n         * @apioption plotOptions.gauge.dial.radius\n         */\n        radius: '80%',\n        /**\n         * The length of the dial's rear end, the part that extends out\n         * on the other side of the pivot. Relative to the dial's\n         * length.\n         *\n         * @sample {highcharts} highcharts/plotoptions/gauge-dial/\n         *         Dial options demonstrated\n         *\n         * @type      {string}\n         * @default   10%\n         * @since     2.3.0\n         * @product   highcharts\n         * @apioption plotOptions.gauge.dial.rearLength\n         */\n        rearLength: '10%',\n        /**\n         * The width of the top of the dial, closest to the perimeter.\n         * The pivot narrows in from the base to the top.\n         *\n         * @sample {highcharts} highcharts/plotoptions/gauge-dial/\n         *         Dial options demonstrated\n         *\n         * @type      {number}\n         * @default   1\n         * @since     2.3.0\n         * @product   highcharts\n         * @apioption plotOptions.gauge.dial.topWidth\n         */\n        topWidth: 1\n    },\n    /**\n     * Allow the dial to overshoot the end of the perimeter axis by\n     * this many degrees. Say if the gauge axis goes from 0 to 60, a\n     * value of 100, or 1000, will show 5 degrees beyond the end of the\n     * axis when this option is set to 5.\n     *\n     * @see [wrap](#plotOptions.gauge.wrap)\n     *\n     * @sample {highcharts} highcharts/plotoptions/gauge-overshoot/\n     *         Allow 5 degrees overshoot\n     *\n     * @type      {number}\n     * @since     3.0.10\n     * @product   highcharts\n     * @apioption plotOptions.gauge.overshoot\n     */\n    /**\n     * Options for the pivot or the center point of the gauge.\n     *\n     * In styled mode, the pivot is styled with the\n     * `.highcharts-gauge-series .highcharts-pivot` rule.\n     *\n     * @sample {highcharts} highcharts/css/gauge/\n     *         Styled mode\n     *\n     * @type    {*}\n     * @since   2.3.0\n     * @product highcharts\n     */\n    pivot: {\n        /**\n         * The pixel radius of the pivot.\n         *\n         * @sample {highcharts} highcharts/plotoptions/gauge-pivot/\n         *         Pivot options demonstrated\n         *\n         * @type      {number}\n         * @default   5\n         * @since     2.3.0\n         * @product   highcharts\n         * @apioption plotOptions.gauge.pivot.radius\n         */\n        radius: 5,\n        /**\n         * The border or stroke width of the pivot.\n         *\n         * @sample {highcharts} highcharts/plotoptions/gauge-pivot/\n         *         Pivot options demonstrated\n         *\n         * @type      {number}\n         * @default   0\n         * @since     2.3.0\n         * @product   highcharts\n         * @apioption plotOptions.gauge.pivot.borderWidth\n         */\n        borderWidth: 0,\n        /**\n         * The border or stroke color of the pivot. In able to change\n         * this, the borderWidth must also be set to something other\n         * than the default 0.\n         *\n         * @sample {highcharts} highcharts/plotoptions/gauge-pivot/\n         *         Pivot options demonstrated\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @default   #cccccc\n         * @since     2.3.0\n         * @product   highcharts\n         * @apioption plotOptions.gauge.pivot.borderColor\n         */\n        borderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n        /**\n         * The background color or fill of the pivot.\n         *\n         * @sample {highcharts} highcharts/plotoptions/gauge-pivot/\n         *         Pivot options demonstrated\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @default   #000000\n         * @since     2.3.0\n         * @product   highcharts\n         * @apioption plotOptions.gauge.pivot.backgroundColor\n         */\n        backgroundColor: \"#000000\" /* Palette.neutralColor100 */\n    },\n    tooltip: {\n        headerFormat: ''\n    },\n    /**\n     * Whether to display this particular series or series type in the\n     * legend. Defaults to false for gauge series.\n     *\n     * @since   2.3.0\n     * @product highcharts\n     */\n    showInLegend: false\n    // Prototype members\n});\nGaugeSeries_extend(GaugeSeries.prototype, {\n    // `chart.angular` will be set to true when a gauge series is present, and\n    // this will be used on the axes\n    angular: true,\n    directTouch: true, // #5063\n    drawGraph: GaugeSeries_noop,\n    drawTracker: GaugeSeries_ColumnSeries.prototype.drawTracker,\n    fixedBox: true,\n    forceDL: true,\n    noSharedTooltip: true,\n    pointClass: Gauge_GaugePoint,\n    trackerGroups: ['group', 'dataLabelsGroup']\n});\nhighcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType('gauge', GaugeSeries);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Gauge_GaugeSeries = ((/* unused pure expression or super */ null && (GaugeSeries)));\n/* *\n *\n *  API options\n *\n * */\n/**\n * A `gauge` series. If the [type](#series.gauge.type) option is not\n * specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.gauge\n * @excluding animationLimit, boostThreshold, connectEnds, connectNulls,\n *            cropThreshold, dashStyle, dataParser, dataURL, findNearestPointBy,\n *            getExtremesFromAll, marker, negativeColor, pointPlacement, shadow,\n *            softThreshold, stack, stacking, states, step, threshold,\n *            turboThreshold, zoneAxis, zones, dataSorting, boostBlending\n * @product   highcharts\n * @requires  highcharts-more\n * @apioption series.gauge\n */\n/**\n * An array of data points for the series. For the `gauge` series type,\n * points can be given in the following ways:\n *\n * 1. An array of numerical values. In this case, the numerical values will be\n *    interpreted as `y` options. Example:\n *    ```js\n *    data: [0, 5, 3, 5]\n *    ```\n *\n * 2. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.gauge.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        y: 6,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        y: 8,\n *        name: \"Point1\",\n *       color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * The typical gauge only contains a single data value.\n *\n * @sample {highcharts} highcharts/chart/reflow-true/\n *         Numerical values\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<number|null|*>}\n * @extends   series.line.data\n * @excluding drilldown, marker, x\n * @product   highcharts\n * @apioption series.gauge.data\n */\n''; // Adds the doclets above in the transpiled file\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"Color\"],\"commonjs\":[\"highcharts\",\"Color\"],\"commonjs2\":[\"highcharts\",\"Color\"],\"root\":[\"Highcharts\",\"Color\"]}\nvar highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_ = __webpack_require__(620);\nvar highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default = /*#__PURE__*/__webpack_require__.n(highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_);\n;// ./code/es-modules/Series/DragNodesComposition.js\n/* *\n *\n *  Networkgraph series\n *\n *  (c) 2010-2025 Paweł Fus\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { composed: DragNodesComposition_composed } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\nconst { addEvent: DragNodesComposition_addEvent, pushUnique: DragNodesComposition_pushUnique } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction DragNodesComposition_compose(ChartClass) {\n    if (DragNodesComposition_pushUnique(DragNodesComposition_composed, 'DragNodes')) {\n        DragNodesComposition_addEvent(ChartClass, 'load', onChartLoad);\n    }\n}\n/**\n * Draggable mode:\n * @private\n */\nfunction onChartLoad() {\n    const chart = this;\n    let mousedownUnbinder, mousemoveUnbinder, mouseupUnbinder, point;\n    if (chart.container) {\n        mousedownUnbinder = DragNodesComposition_addEvent(chart.container, 'mousedown', (event) => {\n            if (mousemoveUnbinder) {\n                mousemoveUnbinder();\n            }\n            if (mouseupUnbinder) {\n                mouseupUnbinder();\n            }\n            point = chart.hoverPoint;\n            if (point &&\n                point.series &&\n                point.series.hasDraggableNodes &&\n                point.series.options.draggable) {\n                point.series.onMouseDown(point, event);\n                mousemoveUnbinder = DragNodesComposition_addEvent(chart.container, 'mousemove', (e) => (point &&\n                    point.series &&\n                    point.series.onMouseMove(point, e)));\n                mouseupUnbinder = DragNodesComposition_addEvent(chart.container.ownerDocument, 'mouseup', (e) => {\n                    mousemoveUnbinder();\n                    mouseupUnbinder();\n                    return point &&\n                        point.series &&\n                        point.series.onMouseUp(point, e);\n                });\n            }\n        });\n    }\n    DragNodesComposition_addEvent(chart, 'destroy', function () {\n        mousedownUnbinder();\n    });\n}\n/**\n * Mouse down action, initializing drag&drop mode.\n *\n * @private\n * @param {Highcharts.Point} point\n *        The point that event occurred.\n * @param {Highcharts.PointerEventObject} event\n *        Browser event, before normalization.\n */\nfunction onMouseDown(point, event) {\n    const { panKey } = this.chart.options.chart, panKeyPressed = panKey && event[`${panKey}Key`];\n    if (panKeyPressed) {\n        return;\n    }\n    const normalizedEvent = this.chart.pointer?.normalize(event) || event;\n    point.fixedPosition = {\n        chartX: normalizedEvent.chartX,\n        chartY: normalizedEvent.chartY,\n        plotX: point.plotX,\n        plotY: point.plotY\n    };\n    point.inDragMode = true;\n}\n/**\n * Mouse move action during drag&drop.\n *\n * @private\n *\n * @param {Highcharts.Point} point\n *        The point that event occurred.\n * @param {global.Event} event\n *        Browser event, before normalization.\n */\nfunction onMouseMove(point, event) {\n    if (point.fixedPosition && point.inDragMode) {\n        const series = this, chart = series.chart, normalizedEvent = chart.pointer?.normalize(event) || event, diffX = point.fixedPosition.chartX - normalizedEvent.chartX, diffY = point.fixedPosition.chartY - normalizedEvent.chartY, graphLayoutsLookup = chart.graphLayoutsLookup;\n        let newPlotX, newPlotY;\n        // At least 5px to apply change (avoids simple click):\n        if (Math.abs(diffX) > 5 || Math.abs(diffY) > 5) {\n            newPlotX = point.fixedPosition.plotX - diffX;\n            newPlotY = point.fixedPosition.plotY - diffY;\n            if (chart.isInsidePlot(newPlotX, newPlotY)) {\n                point.plotX = newPlotX;\n                point.plotY = newPlotY;\n                point.hasDragged = true;\n                this.redrawHalo(point);\n                graphLayoutsLookup.forEach((layout) => {\n                    layout.restartSimulation();\n                });\n            }\n        }\n    }\n}\n/**\n * Mouse up action, finalizing drag&drop.\n *\n * @private\n * @param {Highcharts.Point} point\n *        The point that event occurred.\n */\nfunction onMouseUp(point) {\n    if (point.fixedPosition) {\n        if (point.hasDragged) {\n            if (this.layout.enableSimulation) {\n                this.layout.start();\n            }\n            else {\n                this.chart.redraw();\n            }\n        }\n        point.inDragMode = point.hasDragged = false;\n        if (!this.options.fixedDraggable) {\n            delete point.fixedPosition;\n        }\n    }\n}\n/**\n * Redraw halo on mousemove during the drag&drop action.\n *\n * @private\n * @param {Highcharts.Point} point\n *        The point that should show halo.\n */\nfunction redrawHalo(point) {\n    if (point && this.halo) {\n        this.halo.attr({\n            d: point.haloPath(this.options.states.hover.halo.size)\n        });\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst DragNodesComposition = {\n    compose: DragNodesComposition_compose,\n    onMouseDown,\n    onMouseMove,\n    onMouseUp,\n    redrawHalo\n};\n/* harmony default export */ const Series_DragNodesComposition = (DragNodesComposition);\n\n;// ./code/es-modules/Series/GraphLayoutComposition.js\n/* *\n *\n *  Networkgraph series\n *\n *  (c) 2010-2025 Paweł Fus\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { setAnimation } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\nconst { composed: GraphLayoutComposition_composed } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\nconst { addEvent: GraphLayoutComposition_addEvent, pushUnique: GraphLayoutComposition_pushUnique } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Constants\n *\n * */\nconst integrations = {};\nconst layouts = {};\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction GraphLayoutComposition_compose(ChartClass) {\n    if (GraphLayoutComposition_pushUnique(GraphLayoutComposition_composed, 'GraphLayout')) {\n        GraphLayoutComposition_addEvent(ChartClass, 'afterPrint', onChartAfterPrint);\n        GraphLayoutComposition_addEvent(ChartClass, 'beforePrint', onChartBeforePrint);\n        GraphLayoutComposition_addEvent(ChartClass, 'predraw', onChartPredraw);\n        GraphLayoutComposition_addEvent(ChartClass, 'render', onChartRender);\n    }\n}\n/**\n * Re-enable simulation after print.\n * @private\n */\nfunction onChartAfterPrint() {\n    if (this.graphLayoutsLookup) {\n        this.graphLayoutsLookup.forEach((layout) => {\n            // Return to default simulation\n            layout.updateSimulation();\n        });\n        this.redraw();\n    }\n}\n/**\n * Disable simulation before print if enabled.\n * @private\n */\nfunction onChartBeforePrint() {\n    if (this.graphLayoutsLookup) {\n        this.graphLayoutsLookup.forEach((layout) => {\n            layout.updateSimulation(false);\n        });\n        this.redraw();\n    }\n}\n/**\n * Clear previous layouts.\n * @private\n */\nfunction onChartPredraw() {\n    if (this.graphLayoutsLookup) {\n        this.graphLayoutsLookup.forEach((layout) => {\n            layout.stop();\n        });\n    }\n}\n/**\n * @private\n */\nfunction onChartRender() {\n    let systemsStable, afterRender = false;\n    const layoutStep = (layout) => {\n        if (layout.maxIterations-- &&\n            isFinite(layout.temperature) &&\n            !layout.isStable() &&\n            !layout.enableSimulation) {\n            // Hook similar to build-in addEvent, but instead of\n            // creating whole events logic, use just a function.\n            // It's faster which is important for rAF code.\n            // Used e.g. in packed-bubble series for bubble radius\n            // calculations\n            if (layout.beforeStep) {\n                layout.beforeStep();\n            }\n            layout.step();\n            systemsStable = false;\n            afterRender = true;\n        }\n    };\n    // Don't animate layout when series is dragged\n    if (this.graphLayoutsLookup && !this.pointer?.hasDragged) {\n        setAnimation(false, this);\n        // Start simulation\n        this.graphLayoutsLookup.forEach((layout) => layout.start());\n        // Just one sync step, to run different layouts similar to\n        // async mode.\n        while (!systemsStable) {\n            systemsStable = true;\n            this.graphLayoutsLookup.forEach(layoutStep);\n        }\n        if (afterRender) {\n            this.series.forEach((series) => {\n                if (series && series.layout) {\n                    series.render();\n                }\n            });\n        }\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst GraphLayoutComposition = {\n    compose: GraphLayoutComposition_compose,\n    integrations,\n    layouts\n};\n/* harmony default export */ const Series_GraphLayoutComposition = (GraphLayoutComposition);\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"Chart\"],\"commonjs\":[\"highcharts\",\"Chart\"],\"commonjs2\":[\"highcharts\",\"Chart\"],\"root\":[\"Highcharts\",\"Chart\"]}\nvar highcharts_Chart_commonjs_highcharts_Chart_commonjs2_highcharts_Chart_root_Highcharts_Chart_ = __webpack_require__(960);\nvar highcharts_Chart_commonjs_highcharts_Chart_commonjs2_highcharts_Chart_root_Highcharts_Chart_default = /*#__PURE__*/__webpack_require__.n(highcharts_Chart_commonjs_highcharts_Chart_commonjs2_highcharts_Chart_root_Highcharts_Chart_);\n;// ./code/es-modules/Series/PackedBubble/PackedBubblePoint.js\n/* *\n *\n *  (c) 2010-2025 Grzegorz Blachlinski, Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\nconst { seriesTypes: { bubble: { prototype: { pointClass: PackedBubblePoint_BubblePoint } } } } = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default());\n/* *\n *\n *  Class\n *\n * */\nclass PackedBubblePoint extends PackedBubblePoint_BubblePoint {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Destroy point.\n     * Then remove point from the layout.\n     * @private\n     */\n    destroy() {\n        if (this.series?.layout) {\n            this.series.layout.removeElementFromCollection(this, this.series.layout.nodes);\n        }\n        return highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_default().prototype.destroy.apply(this, arguments);\n    }\n    firePointEvent() {\n        const series = this.series, seriesOptions = series.options;\n        if (this.isParentNode && seriesOptions.parentNode) {\n            const temp = seriesOptions.allowPointSelect;\n            seriesOptions.allowPointSelect = (seriesOptions.parentNode.allowPointSelect);\n            highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_default().prototype.firePointEvent.apply(this, arguments);\n            seriesOptions.allowPointSelect = temp;\n        }\n        else {\n            highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_default().prototype.firePointEvent.apply(this, arguments);\n        }\n    }\n    select() {\n        const point = this, series = this.series, chart = series.chart;\n        if (point.isParentNode) {\n            chart.getSelectedPoints = chart.getSelectedParentNodes;\n            highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_default().prototype.select.apply(this, arguments);\n            chart.getSelectedPoints = (highcharts_Chart_commonjs_highcharts_Chart_commonjs2_highcharts_Chart_root_Highcharts_Chart_default()).prototype.getSelectedPoints;\n        }\n        else {\n            highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_default().prototype.select.apply(this, arguments);\n        }\n    }\n    setState(state, move) {\n        if (this?.graphic?.parentGroup?.element) {\n            super.setState(state, move);\n        }\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const PackedBubble_PackedBubblePoint = (PackedBubblePoint);\n\n;// ./code/es-modules/Series/PackedBubble/PackedBubbleSeriesDefaults.js\n/* *\n *\n *  Imports\n *\n * */\n\nconst { isNumber: PackedBubbleSeriesDefaults_isNumber } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Constants\n *\n * */\n/**\n * A packed bubble series is a two dimensional series type, where each point\n * renders a value in X, Y position. Each point is drawn as a bubble\n * where the bubbles don't overlap with each other and the radius\n * of the bubble relates to the value.\n *\n * @sample highcharts/demo/packed-bubble/\n *         Packed bubble chart\n * @sample highcharts/demo/packed-bubble-split/\n *         Split packed bubble chart\n *\n * @extends      plotOptions.bubble\n * @excluding    boostThreshold, boostBlending,connectEnds, connectNulls,\n *               cropThreshold, dataSorting, dragDrop, jitter,\n *               legendSymbolColor, keys, pointPlacement, sizeByAbsoluteValue,\n *               step, xAxis, yAxis, zMax, zMin\n * @product      highcharts\n * @since        7.0.0\n * @requires     highcharts-more\n * @optionparent plotOptions.packedbubble\n *\n * @private\n */\nconst PackedBubbleSeriesDefaults = {\n    /**\n     * Minimum bubble size. Bubbles will automatically size between the\n     * `minSize` and `maxSize` to reflect the value of each bubble.\n     * Can be either pixels (when no unit is given), or a percentage of\n     * the smallest one of the plot width and height, divided by the square\n     * root of total number of points.\n     *\n     * @sample highcharts/plotoptions/bubble-size/\n     *         Bubble size\n     *\n     * @type {number|string}\n     *\n     * @private\n     */\n    minSize: '10%',\n    /**\n     * Maximum bubble size. Bubbles will automatically size between the\n     * `minSize` and `maxSize` to reflect the value of each bubble.\n     * Can be either pixels (when no unit is given), or a percentage of\n     * the smallest one of the plot width and height, divided by the square\n     * root of total number of points.\n     *\n     * @sample highcharts/plotoptions/bubble-size/\n     *         Bubble size\n     *\n     * @type {number|string}\n     *\n     * @private\n     */\n    maxSize: '50%',\n    sizeBy: 'area',\n    zoneAxis: 'y',\n    crisp: false,\n    tooltip: {\n        pointFormat: 'Value: {point.value}'\n    },\n    /**\n     * Flag to determine if nodes are draggable or not. Available for\n     * graph with useSimulation set to true only.\n     *\n     * @since 7.1.0\n     *\n     * @private\n     */\n    draggable: true,\n    /**\n     * An option is giving a possibility to choose between using simulation\n     * for calculating bubble positions. These reflects in both animation\n     * and final position of bubbles. Simulation is also adding options to\n     * the series graph based on used layout. In case of big data sets, with\n     * any performance issues, it is possible to disable animation and pack\n     * bubble in a simple circular way.\n     *\n     * @sample highcharts/series-packedbubble/spiral/\n     *         useSimulation set to false\n     *\n     * @since 7.1.0\n     *\n     * @private\n     */\n    useSimulation: true,\n    /**\n     * Series options for parent nodes.\n     *\n     * @since 8.1.1\n     *\n     * @private\n     */\n    parentNode: {\n        /**\n         * Allow this series' parent nodes to be selected\n         * by clicking on the graph.\n         *\n         * @since 8.1.1\n         */\n        allowPointSelect: false\n    },\n    /**\n     *\n     * @declare Highcharts.SeriesPackedBubbleDataLabelsOptionsObject\n     *\n     * @private\n     */\n    dataLabels: {\n        /**\n         * The\n         * [format string](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\n         * specifying what to show for _node_ in the networkgraph. In v7.0\n         * defaults to `{key}`, since v7.1 defaults to `undefined` and\n         * `formatter` is used instead.\n         *\n         * @type      {string}\n         * @since     7.0.0\n         * @apioption plotOptions.packedbubble.dataLabels.format\n         */\n        // eslint-disable-next-line valid-jsdoc\n        /**\n         * Callback JavaScript function to format the data label for a node.\n         * Note that if a `format` is defined, the format takes precedence\n         * and the formatter is ignored.\n         *\n         * @since 7.0.0\n         */\n        formatter: function () {\n            const { numberFormatter } = this.series.chart;\n            const { value } = this.point;\n            return PackedBubbleSeriesDefaults_isNumber(value) ? numberFormatter(value, -1) : '';\n        },\n        /**\n         * @type      {string}\n         * @since     7.1.0\n         * @apioption plotOptions.packedbubble.dataLabels.parentNodeFormat\n         */\n        // eslint-disable-next-line valid-jsdoc\n        /**\n         * @since 7.1.0\n         */\n        parentNodeFormatter: function () {\n            return this.name || '';\n        },\n        /**\n         * @sample {highcharts} highcharts/demo/packed-bubble-project-status/\n         *         Dashboard with dataLabels on parentNodes\n         *\n         * @declare Highcharts.SeriesPackedBubbleDataLabelsTextPathOptionsObject\n         * @since   7.1.0\n         */\n        parentNodeTextPath: {\n            /**\n             * Presentation attributes for the text path.\n             *\n             * @type      {Highcharts.SVGAttributes}\n             * @since     7.1.0\n             * @apioption plotOptions.packedbubble.dataLabels.attributes\n             */\n            /**\n             * Enable or disable `textPath` option for link's or marker's\n             * data labels.\n             *\n             * @since 7.1.0\n             */\n            enabled: true\n        },\n        /**\n         * Options for a _node_ label text which should follow marker's\n         * shape.\n         *\n         * **Note:** Only SVG-based renderer supports this option.\n         *\n         * @extends   plotOptions.series.dataLabels.textPath\n         * @apioption plotOptions.packedbubble.dataLabels.textPath\n         */\n        padding: 0,\n        style: {\n            transition: 'opacity 2000ms'\n        }\n    },\n    /**\n     * Options for layout algorithm when simulation is enabled. Inside there\n     * are options to change the speed, padding, initial bubbles positions\n     * and more.\n     *\n     * @extends   plotOptions.networkgraph.layoutAlgorithm\n     * @excluding approximation, attractiveForce, repulsiveForce, theta\n     * @since     7.1.0\n     *\n     * @private\n     */\n    layoutAlgorithm: {\n        /**\n         * Initial layout algorithm for positioning nodes. Can be one of\n         * the built-in options (\"circle\", \"random\") or a function where\n         * positions should be set on each node (`this.nodes`) as\n         * `node.plotX` and `node.plotY`.\n         *\n         * @sample highcharts/series-networkgraph/initial-positions/\n         *         Initial positions with callback\n         *\n         * @type {\"circle\"|\"random\"|Function}\n         */\n        initialPositions: 'circle',\n        /**\n         * @sample highcharts/series-packedbubble/initial-radius/\n         *         Initial radius set to 200\n         *\n         * @extends   plotOptions.networkgraph.layoutAlgorithm.initialPositionRadius\n         * @excluding states\n         */\n        initialPositionRadius: 20,\n        /**\n         * The distance between two bubbles, when the algorithm starts to\n         * treat two bubbles as overlapping. The `bubblePadding` is also the\n         * expected distance between all the bubbles on simulation end.\n         */\n        bubblePadding: 5,\n        /**\n         * Whether bubbles should interact with their parentNode to keep\n         * them inside.\n         */\n        parentNodeLimit: false,\n        /**\n         * Whether series should interact with each other or not. When\n         * `parentNodeLimit` is set to true, thi option should be set to\n         * false to avoid sticking points in wrong series parentNode.\n         */\n        seriesInteraction: true,\n        /**\n         * In case of split series, this option allows user to drag and\n         * drop points between series, for changing point related series.\n         *\n         * @sample highcharts/demo/packed-bubble-project-status/\n         *         Example of drag'n drop bubbles for bubble kanban\n         */\n        dragBetweenSeries: false,\n        /**\n         * Layout algorithm options for parent nodes.\n         *\n         * @extends   plotOptions.networkgraph.layoutAlgorithm\n         * @excluding approximation, attractiveForce, enableSimulation,\n         *            repulsiveForce, theta\n         */\n        parentNodeOptions: {\n            maxIterations: 400,\n            gravitationalConstant: 0.03,\n            maxSpeed: 50,\n            initialPositionRadius: 100,\n            seriesInteraction: true,\n            /**\n             * Styling options for parentNodes markers. Similar to\n             * line.marker options.\n             *\n             * @sample highcharts/series-packedbubble/parentnode-style/\n             *         Bubble size\n             *\n             * @extends   plotOptions.series.marker\n             * @excluding states\n             */\n            marker: {\n                fillColor: null,\n                fillOpacity: 1,\n                lineWidth: null,\n                lineColor: null,\n                symbol: 'circle'\n            }\n        },\n        enableSimulation: true,\n        /**\n         * Type of the algorithm used when positioning bubbles.\n         * @ignore-option\n         */\n        type: 'packedbubble',\n        /**\n         * Integration type. Integration determines how forces are applied\n         * on particles. The `packedbubble` integration is based on\n         * the networkgraph `verlet` integration, where the new position\n         * is based on a previous position without velocity:\n         * `newPosition += previousPosition - newPosition`.\n         *\n         * @sample highcharts/series-networkgraph/forces/\n         *\n         * @ignore-option\n         */\n        integration: 'packedbubble',\n        maxIterations: 1000,\n        /**\n         * Whether to split series into individual groups or to mix all\n         * series together.\n         *\n         * @since   7.1.0\n         * @default false\n         */\n        splitSeries: false,\n        /**\n         * Max speed that node can get in one iteration. In terms of\n         * simulation, it's a maximum translation (in pixels) that a node\n         * can move (in both, x and y, dimensions). While `friction` is\n         * applied on all nodes, max speed is applied only for nodes that\n         * move very fast, for example small or disconnected ones.\n         *\n         * @see [layoutAlgorithm.integration](#series.networkgraph.layoutAlgorithm.integration)\n         *\n         * @see [layoutAlgorithm.friction](#series.networkgraph.layoutAlgorithm.friction)\n         */\n        maxSpeed: 5,\n        gravitationalConstant: 0.01,\n        friction: -0.981\n    },\n    stickyTracking: false\n};\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const PackedBubble_PackedBubbleSeriesDefaults = (PackedBubbleSeriesDefaults);\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A `packedbubble` series. If the [type](#series.packedbubble.type) option is\n * not specified, it is inherited from [chart.type](#chart.type).\n *\n * @type      {Object}\n * @extends   series,plotOptions.packedbubble\n * @excluding cropThreshold, dataParser, dataSorting, dataURL, dragDrop, stack,\n *            boostThreshold, boostBlending\n * @product   highcharts\n * @requires  highcharts-more\n * @apioption series.packedbubble\n */\n/**\n * An array of data points for the series. For the `packedbubble` series type,\n * points can be given in the following ways:\n *\n * 1.  An array of `values`.\n *\n *  ```js\n *     data: [5, 1, 20]\n *  ```\n *\n * 2.  An array of objects with named values. The objects are point\n * configuration objects as seen below. If the total number of data points\n * exceeds the series' [turboThreshold](#series.packedbubble.turboThreshold),\n * this option is not available.\n *\n *  ```js\n *     data: [{\n *         value: 1,\n *         name: \"Point2\",\n *         color: \"#00FF00\"\n *     }, {\n *         value: 5,\n *         name: \"Point1\",\n *         color: \"#FF00FF\"\n *     }]\n *  ```\n *\n * @type      {Array<Object|Array>}\n * @extends   series.line.data\n * @excluding marker, x, y\n * @sample    {highcharts} highcharts/series/data-array-of-objects/\n *            Config objects\n * @product   highcharts\n * @apioption series.packedbubble.data\n */\n/**\n * @type      {Highcharts.SeriesPackedBubbleDataLabelsOptionsObject|Array<Highcharts.SeriesPackedBubbleDataLabelsOptionsObject>}\n * @product   highcharts\n * @apioption series.packedbubble.data.dataLabels\n */\n/**\n * @excluding enabled,enabledThreshold,height,radius,width\n * @product   highcharts\n * @apioption series.packedbubble.marker\n */\n''; // Adds doclets above to transpiled file\n\n;// ./code/es-modules/Series/Networkgraph/VerletIntegration.js\n/* *\n *\n *  Networkgraph series\n *\n *  (c) 2010-2025 Paweł Fus\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Attractive force.\n *\n * In Verlet integration, force is applied on a node immediately to it's\n * `plotX` and `plotY` position.\n *\n * @private\n * @param {Highcharts.Point} link\n *        Link that connects two nodes\n * @param {number} force\n *        Force calculated in `repulsiveForceFunction`\n * @param {Highcharts.PositionObject} distanceXY\n *        Distance between two nodes e.g. `{x, y}`\n */\nfunction attractive(link, force, distanceXY) {\n    const massFactor = link.getMass(), translatedX = -distanceXY.x * force * this.diffTemperature, translatedY = -distanceXY.y * force * this.diffTemperature;\n    if (!link.fromNode.fixedPosition) {\n        link.fromNode.plotX -=\n            translatedX * massFactor.fromNode / link.fromNode.degree;\n        link.fromNode.plotY -=\n            translatedY * massFactor.fromNode / link.fromNode.degree;\n    }\n    if (!link.toNode.fixedPosition) {\n        link.toNode.plotX +=\n            translatedX * massFactor.toNode / link.toNode.degree;\n        link.toNode.plotY +=\n            translatedY * massFactor.toNode / link.toNode.degree;\n    }\n}\n/**\n * Attractive force function. Can be replaced by API's\n * `layoutAlgorithm.attractiveForce`\n *\n * @private\n * @param {number} d current distance between two nodes\n * @param {number} k expected distance between two nodes\n * @return {number} force\n */\nfunction attractiveForceFunction(d, k) {\n    // Used in API:\n    return (k - d) / d;\n}\n/**\n * Barycenter force. Calculate and applys barycenter forces on the\n * nodes. Making them closer to the center of their barycenter point.\n *\n * In Verlet integration, force is applied on a node immediately to it's\n * `plotX` and `plotY` position.\n *\n * @private\n */\nfunction barycenter() {\n    const gravitationalConstant = this.options.gravitationalConstant || 0, xFactor = (this.barycenter.xFactor -\n        (this.box.left + this.box.width) / 2) * gravitationalConstant, yFactor = (this.barycenter.yFactor -\n        (this.box.top + this.box.height) / 2) * gravitationalConstant;\n    this.nodes.forEach(function (node) {\n        if (!node.fixedPosition) {\n            node.plotX -=\n                xFactor / node.mass / node.degree;\n            node.plotY -=\n                yFactor / node.mass / node.degree;\n        }\n    });\n}\n/**\n * Estiamte the best possible distance between two nodes, making graph\n * readable.\n * @private\n */\nfunction getK(layout) {\n    return Math.pow(layout.box.width * layout.box.height / layout.nodes.length, 0.5);\n}\n/**\n * Integration method.\n *\n * In Verlet integration, forces are applied on node immediately to it's\n * `plotX` and `plotY` position.\n *\n * Verlet without velocity:\n *\n *    x(n+1) = 2 * x(n) - x(n-1) + A(T) * deltaT ^ 2\n *\n * where:\n *     - x(n+1) - new position\n *     - x(n) - current position\n *     - x(n-1) - previous position\n *\n * Assuming A(t) = 0 (no acceleration) and (deltaT = 1) we get:\n *\n *     x(n+1) = x(n) + (x(n) - x(n-1))\n *\n * where:\n *     - (x(n) - x(n-1)) - position change\n *\n * TO DO:\n * Consider Verlet with velocity to support additional\n * forces. Or even Time-Corrected Verlet by Jonathan\n * \"lonesock\" Dummer\n *\n * @private\n * @param {Highcharts.NetworkgraphLayout} layout layout object\n * @param {Highcharts.Point} node node that should be translated\n */\nfunction integrate(layout, node) {\n    const friction = -layout.options.friction, maxSpeed = layout.options.maxSpeed, prevX = node.prevX, prevY = node.prevY, \n    // Apply friction:\n    frictionX = ((node.plotX + node.dispX -\n        prevX) * friction), frictionY = ((node.plotY + node.dispY -\n        prevY) * friction), abs = Math.abs, signX = abs(frictionX) / (frictionX || 1), // Need to deal with 0\n    signY = abs(frictionY) / (frictionY || 1), \n    // Apply max speed:\n    diffX = signX * Math.min(maxSpeed, Math.abs(frictionX)), diffY = signY * Math.min(maxSpeed, Math.abs(frictionY));\n    // Store for the next iteration:\n    node.prevX = node.plotX + node.dispX;\n    node.prevY = node.plotY + node.dispY;\n    // Update positions:\n    node.plotX += diffX;\n    node.plotY += diffY;\n    node.temperature = layout.vectorLength({\n        x: diffX,\n        y: diffY\n    });\n}\n/**\n * Repulsive force.\n *\n * In Verlet integration, force is applied on a node immediately to it's\n * `plotX` and `plotY` position.\n *\n * @private\n * @param {Highcharts.Point} node\n *        Node that should be translated by force.\n * @param {number} force\n *        Force calculated in `repulsiveForceFunction`\n * @param {Highcharts.PositionObject} distanceXY\n *        Distance between two nodes e.g. `{x, y}`\n */\nfunction repulsive(node, force, distanceXY) {\n    const factor = force * this.diffTemperature / node.mass / node.degree;\n    if (!node.fixedPosition) {\n        node.plotX += distanceXY.x * factor;\n        node.plotY += distanceXY.y * factor;\n    }\n}\n/**\n * Repulsive force function. Can be replaced by API's\n * `layoutAlgorithm.repulsiveForce`\n *\n * @private\n * @param {number} d current distance between two nodes\n * @param {number} k expected distance between two nodes\n * @return {number} force\n */\nfunction repulsiveForceFunction(d, k) {\n    // Used in API:\n    return (k - d) / d * (k > d ? 1 : 0); // Force only for close nodes\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst VerletIntegration = {\n    attractive,\n    attractiveForceFunction,\n    barycenter,\n    getK,\n    integrate,\n    repulsive,\n    repulsiveForceFunction\n};\n/* harmony default export */ const Networkgraph_VerletIntegration = (VerletIntegration);\n\n;// ./code/es-modules/Series/PackedBubble/PackedBubbleIntegration.js\n/* *\n *\n *  (c) 2010-2025 Grzegorz Blachlinski, Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { noop: PackedBubbleIntegration_noop } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction PackedBubbleIntegration_barycenter() {\n    const layout = this, gravitationalConstant = layout.options.gravitationalConstant || 0, box = layout.box, nodes = layout.nodes, nodeCountSqrt = Math.sqrt(nodes.length);\n    let centerX, centerY;\n    for (const node of nodes) {\n        if (!node.fixedPosition) {\n            const massTimesNodeCountSqrt = node.mass * nodeCountSqrt, plotX = node.plotX || 0, plotY = node.plotY || 0, series = node.series, parentNode = series.parentNode;\n            if (this.resolveSplitSeries(node) &&\n                parentNode &&\n                !node.isParentNode) {\n                centerX = parentNode.plotX || 0;\n                centerY = parentNode.plotY || 0;\n            }\n            else {\n                centerX = box.width / 2;\n                centerY = box.height / 2;\n            }\n            node.plotX = plotX - ((plotX - centerX) *\n                gravitationalConstant /\n                massTimesNodeCountSqrt);\n            node.plotY = plotY - ((plotY - centerY) *\n                gravitationalConstant /\n                massTimesNodeCountSqrt);\n            if (series.chart.hoverPoint === node &&\n                // If redrawHalo exists we know its a draggable series and any\n                // halo present should be redrawn to update its visual position\n                series.redrawHalo && series.halo) {\n                series.redrawHalo(node);\n            }\n        }\n    }\n}\n/**\n * @private\n */\nfunction PackedBubbleIntegration_repulsive(node, force, distanceXY, repNode) {\n    const factor = (force * this.diffTemperature / node.mass /\n        node.degree), x = distanceXY.x * factor, y = distanceXY.y * factor;\n    if (!node.fixedPosition) {\n        node.plotX += x;\n        node.plotY += y;\n    }\n    if (!repNode.fixedPosition) {\n        repNode.plotX -= x;\n        repNode.plotY -= y;\n    }\n}\n/**\n * @private\n */\nfunction PackedBubbleIntegration_repulsiveForceFunction(d, k, node, repNode) {\n    return Math.min(d, (node.marker.radius +\n        repNode.marker.radius) / 2);\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst PackedBubbleIntegration = {\n    barycenter: PackedBubbleIntegration_barycenter,\n    getK: PackedBubbleIntegration_noop,\n    integrate: Networkgraph_VerletIntegration.integrate,\n    repulsive: PackedBubbleIntegration_repulsive,\n    repulsiveForceFunction: PackedBubbleIntegration_repulsiveForceFunction\n};\n/* harmony default export */ const PackedBubble_PackedBubbleIntegration = (PackedBubbleIntegration);\n\n;// ./code/es-modules/Series/Networkgraph/EulerIntegration.js\n/* *\n *\n *  Networkgraph series\n *\n *  (c) 2010-2025 Paweł Fus\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Attractive force.\n *\n * In Euler integration, force is stored in a node, not changing it's\n * position. Later, in `integrate()` forces are applied on nodes.\n *\n * @private\n * @param {Highcharts.Point} link\n *        Link that connects two nodes\n * @param {number} force\n *        Force calculated in `repulsiveForceFunction`\n * @param {Highcharts.PositionObject} distanceXY\n *        Distance between two nodes e.g. `{x, y}`\n * @param {number} distanceR\n     */\nfunction EulerIntegration_attractive(link, force, distanceXY, distanceR) {\n    const massFactor = link.getMass(), translatedX = (distanceXY.x / distanceR) * force, translatedY = (distanceXY.y / distanceR) * force;\n    if (!link.fromNode.fixedPosition) {\n        link.fromNode.dispX -=\n            translatedX * massFactor.fromNode / link.fromNode.degree;\n        link.fromNode.dispY -=\n            translatedY * massFactor.fromNode / link.fromNode.degree;\n    }\n    if (!link.toNode.fixedPosition) {\n        link.toNode.dispX +=\n            translatedX * massFactor.toNode / link.toNode.degree;\n        link.toNode.dispY +=\n            translatedY * massFactor.toNode / link.toNode.degree;\n    }\n}\n/**\n * Attractive force function. Can be replaced by API's\n * `layoutAlgorithm.attractiveForce`\n *\n * Other forces that can be used:\n *\n * basic, not recommended:\n *    `function (d, k) { return d / k }`\n *\n * @private\n * @param {number} d current distance between two nodes\n * @param {number} k expected distance between two nodes\n * @return {number} force\n */\nfunction EulerIntegration_attractiveForceFunction(d, k) {\n    return d * d / k;\n}\n/**\n * Barycenter force. Calculate and applys barycenter forces on the\n * nodes. Making them closer to the center of their barycenter point.\n *\n * In Euler integration, force is stored in a node, not changing it's\n * position. Later, in `integrate()` forces are applied on nodes.\n *\n * @private\n */\nfunction EulerIntegration_barycenter() {\n    const gravitationalConstant = this.options.gravitationalConstant, xFactor = this.barycenter.xFactor, yFactor = this.barycenter.yFactor;\n    this.nodes.forEach(function (node) {\n        if (!node.fixedPosition) {\n            const degree = node.getDegree(), phi = degree * (1 + degree / 2);\n            node.dispX += ((xFactor - node.plotX) *\n                gravitationalConstant *\n                phi / node.degree);\n            node.dispY += ((yFactor - node.plotY) *\n                gravitationalConstant *\n                phi / node.degree);\n        }\n    });\n}\n/**\n * Estimate the best possible distance between two nodes, making graph\n * readable.\n * @private\n */\nfunction EulerIntegration_getK(layout) {\n    return Math.pow(layout.box.width * layout.box.height / layout.nodes.length, 0.3);\n}\n/**\n * Integration method.\n *\n * In Euler integration, force were stored in a node, not changing it's\n * position. Now, in the integrator method, we apply changes.\n *\n * Euler:\n *\n * Basic form: `x(n+1) = x(n) + v(n)`\n *\n * With Rengoild-Fruchterman we get:\n * `x(n+1) = x(n) + v(n) / length(v(n)) * min(v(n), temperature(n))`\n * where:\n * - `x(n+1)`: next position\n * - `x(n)`: current position\n * - `v(n)`: velocity (comes from net force)\n * - `temperature(n)`: current temperature\n *\n * Known issues:\n * Oscillations when force vector has the same magnitude but opposite\n * direction in the next step. Potentially solved by decreasing force by\n * `v * (1 / node.degree)`\n *\n * Note:\n * Actually `min(v(n), temperature(n))` replaces simulated annealing.\n *\n * @private\n * @param {Highcharts.NetworkgraphLayout} layout\n *        Layout object\n * @param {Highcharts.Point} node\n *        Node that should be translated\n */\nfunction EulerIntegration_integrate(layout, node) {\n    node.dispX +=\n        node.dispX * layout.options.friction;\n    node.dispY +=\n        node.dispY * layout.options.friction;\n    const distanceR = node.temperature = layout.vectorLength({\n        x: node.dispX,\n        y: node.dispY\n    });\n    if (distanceR !== 0) {\n        node.plotX += (node.dispX / distanceR *\n            Math.min(Math.abs(node.dispX), layout.temperature));\n        node.plotY += (node.dispY / distanceR *\n            Math.min(Math.abs(node.dispY), layout.temperature));\n    }\n}\n/**\n * Repulsive force.\n *\n * @private\n * @param {Highcharts.Point} node\n *        Node that should be translated by force.\n * @param {number} force\n *        Force calculated in `repulsiveForceFunction`\n * @param {Highcharts.PositionObject} distanceXY\n *        Distance between two nodes e.g. `{x, y}`\n */\nfunction EulerIntegration_repulsive(node, force, distanceXY, distanceR) {\n    node.dispX +=\n        (distanceXY.x / distanceR) * force / node.degree;\n    node.dispY +=\n        (distanceXY.y / distanceR) * force / node.degree;\n}\n/**\n * Repulsive force function. Can be replaced by API's\n * `layoutAlgorithm.repulsiveForce`.\n *\n * Other forces that can be used:\n *\n * basic, not recommended:\n *    `function (d, k) { return k / d }`\n *\n * standard:\n *    `function (d, k) { return k * k / d }`\n *\n * grid-variant:\n *    `function (d, k) { return k * k / d * (2 * k - d > 0 ? 1 : 0) }`\n *\n * @private\n * @param {number} d current distance between two nodes\n * @param {number} k expected distance between two nodes\n * @return {number} force\n */\nfunction EulerIntegration_repulsiveForceFunction(d, k) {\n    return k * k / d;\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst EulerIntegration = {\n    attractive: EulerIntegration_attractive,\n    attractiveForceFunction: EulerIntegration_attractiveForceFunction,\n    barycenter: EulerIntegration_barycenter,\n    getK: EulerIntegration_getK,\n    integrate: EulerIntegration_integrate,\n    repulsive: EulerIntegration_repulsive,\n    repulsiveForceFunction: EulerIntegration_repulsiveForceFunction\n};\n/* harmony default export */ const Networkgraph_EulerIntegration = (EulerIntegration);\n\n;// ./code/es-modules/Series/Networkgraph/QuadTreeNode.js\n/* *\n *\n *  Networkgraph series\n *\n *  (c) 2010-2025 Paweł Fus\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Class\n *\n * */\n/**\n * The QuadTree node class. Used in Networkgraph chart as a base for Barnes-Hut\n * approximation.\n *\n * @private\n * @class\n * @name Highcharts.QuadTreeNode\n *\n * @param {Highcharts.Dictionary<number>} box\n *        Available space for the node\n */\nclass QuadTreeNode {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(box) {\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        /**\n         * Read only. If QuadTreeNode is an external node, Point is stored in\n         * `this.body`.\n         *\n         * @name Highcharts.QuadTreeNode#body\n         * @type {boolean|Highcharts.Point}\n         */\n        this.body = false;\n        /**\n         * Read only. Internal nodes when created are empty to reserve the\n         * space. If Point is added to this QuadTreeNode, QuadTreeNode is no\n         * longer empty.\n         *\n         * @name Highcharts.QuadTreeNode#isEmpty\n         * @type {boolean}\n         */\n        this.isEmpty = false;\n        /**\n         * Read only. Flag to determine if QuadTreeNode is internal (and has\n         * subnodes with mass and central position) or external (bound to\n         * Point).\n         *\n         * @name Highcharts.QuadTreeNode#isInternal\n         * @type {boolean}\n         */\n        this.isInternal = false;\n        /**\n         * Read only. Array of subnodes. Empty if QuadTreeNode has just one\n         * Point. When added another Point to this QuadTreeNode, array is\n         * filled with four subnodes.\n         *\n         * @name Highcharts.QuadTreeNode#nodes\n         * @type {Array<Highcharts.QuadTreeNode>}\n         */\n        this.nodes = [];\n        /**\n         * Read only. The available space for node.\n         *\n         * @name Highcharts.QuadTreeNode#box\n         * @type {Highcharts.Dictionary<number>}\n         */\n        this.box = box;\n        /**\n         * Read only. The minium of width and height values.\n         *\n         * @name Highcharts.QuadTreeNode#boxSize\n         * @type {number}\n         */\n        this.boxSize = Math.min(box.width, box.height);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * When inserting another node into the box, that already hove one node,\n     * divide the available space into another four quadrants.\n     *\n     * Indexes of quadrants are:\n     * ```\n     * -------------               -------------\n     * |           |               |     |     |\n     * |           |               |  0  |  1  |\n     * |           |   divide()    |     |     |\n     * |     1     | ----------->  -------------\n     * |           |               |     |     |\n     * |           |               |  3  |  2  |\n     * |           |               |     |     |\n     * -------------               -------------\n     * ```\n     */\n    divideBox() {\n        const halfWidth = this.box.width / 2, halfHeight = this.box.height / 2;\n        // Top left\n        this.nodes[0] = new QuadTreeNode({\n            left: this.box.left,\n            top: this.box.top,\n            width: halfWidth,\n            height: halfHeight\n        });\n        // Top right\n        this.nodes[1] = new QuadTreeNode({\n            left: this.box.left + halfWidth,\n            top: this.box.top,\n            width: halfWidth,\n            height: halfHeight\n        });\n        // Bottom right\n        this.nodes[2] = new QuadTreeNode({\n            left: this.box.left + halfWidth,\n            top: this.box.top + halfHeight,\n            width: halfWidth,\n            height: halfHeight\n        });\n        // Bottom left\n        this.nodes[3] = new QuadTreeNode({\n            left: this.box.left,\n            top: this.box.top + halfHeight,\n            width: halfWidth,\n            height: halfHeight\n        });\n    }\n    /**\n     * Determine which of the quadrants should be used when placing node in\n     * the QuadTree. Returned index is always in range `< 0 , 3 >`.\n     * @private\n     */\n    getBoxPosition(point) {\n        const left = point.plotX < this.box.left + this.box.width / 2, top = point.plotY < this.box.top + this.box.height / 2;\n        let index;\n        if (left) {\n            if (top) {\n                // Top left\n                index = 0;\n            }\n            else {\n                // Bottom left\n                index = 3;\n            }\n        }\n        else {\n            if (top) {\n                // Top right\n                index = 1;\n            }\n            else {\n                // Bottom right\n                index = 2;\n            }\n        }\n        return index;\n    }\n    /**\n     * Insert recursively point(node) into the QuadTree. If the given\n     * quadrant is already occupied, divide it into smaller quadrants.\n     *\n     * @param {Highcharts.Point} point\n     *        Point/node to be inserted\n     * @param {number} depth\n     *        Max depth of the QuadTree\n     */\n    insert(point, depth) {\n        let newQuadTreeNode;\n        if (this.isInternal) {\n            // Internal node:\n            this.nodes[this.getBoxPosition(point)].insert(point, depth - 1);\n        }\n        else {\n            this.isEmpty = false;\n            if (!this.body) {\n                // First body in a quadrant:\n                this.isInternal = false;\n                this.body = point;\n            }\n            else {\n                if (depth) {\n                    // Every other body in a quadrant:\n                    this.isInternal = true;\n                    this.divideBox();\n                    // Reinsert main body only once:\n                    if (this.body !== true) {\n                        this.nodes[this.getBoxPosition(this.body)]\n                            .insert(this.body, depth - 1);\n                        this.body = true;\n                    }\n                    // Add second body:\n                    this.nodes[this.getBoxPosition(point)]\n                        .insert(point, depth - 1);\n                }\n                else {\n                    // We are below max allowed depth. That means either:\n                    // - really huge number of points\n                    // - falling two points into exactly the same position\n                    // In this case, create another node in the QuadTree.\n                    //\n                    // Alternatively we could add some noise to the\n                    // position, but that could result in different\n                    // rendered chart in exporting.\n                    newQuadTreeNode = new QuadTreeNode({\n                        top: point.plotX || NaN,\n                        left: point.plotY || NaN,\n                        // Width/height below 1px\n                        width: 0.1,\n                        height: 0.1\n                    });\n                    newQuadTreeNode.body = point;\n                    newQuadTreeNode.isInternal = false;\n                    this.nodes.push(newQuadTreeNode);\n                }\n            }\n        }\n    }\n    /**\n     * Each quad node requires it's mass and center position. That mass and\n     * position is used to imitate real node in the layout by approximation.\n     */\n    updateMassAndCenter() {\n        let mass = 0, plotX = 0, plotY = 0;\n        if (this.isInternal) {\n            // Calculate weightened mass of the quad node:\n            for (const pointMass of this.nodes) {\n                if (!pointMass.isEmpty) {\n                    mass += pointMass.mass;\n                    plotX += pointMass.plotX * pointMass.mass;\n                    plotY += pointMass.plotY * pointMass.mass;\n                }\n            }\n            plotX /= mass;\n            plotY /= mass;\n        }\n        else if (this.body) {\n            // Just one node, use coordinates directly:\n            mass = this.body.mass;\n            plotX = this.body.plotX;\n            plotY = this.body.plotY;\n        }\n        // Store details:\n        this.mass = mass;\n        this.plotX = plotX;\n        this.plotY = plotY;\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Networkgraph_QuadTreeNode = (QuadTreeNode);\n\n;// ./code/es-modules/Series/Networkgraph/QuadTree.js\n/* *\n *\n *  Networkgraph series\n *\n *  (c) 2010-2025 Paweł Fus\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n/* *\n *\n *  Class\n *\n * */\n/**\n * The QuadTree class. Used in Networkgraph chart as a base for Barnes-Hut\n * approximation.\n *\n * @private\n * @class\n * @name Highcharts.QuadTree\n *\n * @param {number} x\n *        Left position of the plotting area\n * @param {number} y\n *        Top position of the plotting area\n * @param {number} width\n *        Width of the plotting area\n * @param {number} height\n *        Height of the plotting area\n */\nclass QuadTree {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(x, y, width, height) {\n        // Boundary rectangle:\n        this.box = {\n            left: x,\n            top: y,\n            width: width,\n            height: height\n        };\n        this.maxDepth = 25;\n        this.root = new Networkgraph_QuadTreeNode(this.box);\n        this.root.isInternal = true;\n        this.root.isRoot = true;\n        this.root.divideBox();\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Calculate mass of the each QuadNode in the tree.\n     */\n    calculateMassAndCenter() {\n        this.visitNodeRecursive(null, null, function (node) {\n            node.updateMassAndCenter();\n        });\n    }\n    /**\n     * Insert nodes into the QuadTree\n     *\n     * @param {Array<Highcharts.Point>} points\n     *        Points as nodes\n     */\n    insertNodes(points) {\n        for (const point of points) {\n            this.root.insert(point, this.maxDepth);\n        }\n    }\n    /**\n     * Depth first treversal (DFS). Using `before` and `after` callbacks,\n     * we can get two results: preorder and postorder traversals, reminder:\n     *\n     * ```\n     *     (a)\n     *     / \\\n     *   (b) (c)\n     *   / \\\n     * (d) (e)\n     * ```\n     *\n     * DFS (preorder): `a -> b -> d -> e -> c`\n     *\n     * DFS (postorder): `d -> e -> b -> c -> a`\n     *\n     * @param {Highcharts.QuadTreeNode|null} node\n     *        QuadTree node\n     * @param {Function} [beforeCallback]\n     *        Function to be called before visiting children nodes.\n     * @param {Function} [afterCallback]\n     *        Function to be called after visiting children nodes.\n     */\n    visitNodeRecursive(node, beforeCallback, afterCallback) {\n        let goFurther;\n        if (!node) {\n            node = this.root;\n        }\n        if (node === this.root && beforeCallback) {\n            goFurther = beforeCallback(node);\n        }\n        if (goFurther === false) {\n            return;\n        }\n        for (const qtNode of node.nodes) {\n            if (qtNode.isInternal) {\n                if (beforeCallback) {\n                    goFurther = beforeCallback(qtNode);\n                }\n                if (goFurther === false) {\n                    continue;\n                }\n                this.visitNodeRecursive(qtNode, beforeCallback, afterCallback);\n            }\n            else if (qtNode.body) {\n                if (beforeCallback) {\n                    beforeCallback(qtNode.body);\n                }\n            }\n            if (afterCallback) {\n                afterCallback(qtNode);\n            }\n        }\n        if (node === this.root && afterCallback) {\n            afterCallback(node);\n        }\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Networkgraph_QuadTree = (QuadTree);\n\n;// ./code/es-modules/Series/Networkgraph/ReingoldFruchtermanLayout.js\n/* *\n *\n *  Networkgraph series\n *\n *  (c) 2010-2025 Paweł Fus\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { win } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\n\n\nconst { clamp: ReingoldFruchtermanLayout_clamp, defined: ReingoldFruchtermanLayout_defined, isFunction, fireEvent: ReingoldFruchtermanLayout_fireEvent, pick: ReingoldFruchtermanLayout_pick } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\n/* *\n *\n *  Class\n *\n * */\n/**\n * Reingold-Fruchterman algorithm from\n * \"Graph Drawing by Force-directed Placement\" paper.\n * @private\n */\nclass ReingoldFruchtermanLayout {\n    constructor() {\n        /* *\n         *\n         *  Static Functions\n         *\n         * */\n        this.box = {};\n        this.currentStep = 0;\n        this.initialRendering = true;\n        this.links = [];\n        this.nodes = [];\n        this.series = [];\n        this.simulation = false;\n    }\n    static compose(ChartClass) {\n        Series_GraphLayoutComposition.compose(ChartClass);\n        Series_GraphLayoutComposition.integrations.euler = Networkgraph_EulerIntegration;\n        Series_GraphLayoutComposition.integrations.verlet = Networkgraph_VerletIntegration;\n        Series_GraphLayoutComposition.layouts['reingold-fruchterman'] =\n            ReingoldFruchtermanLayout;\n    }\n    init(options) {\n        this.options = options;\n        this.nodes = [];\n        this.links = [];\n        this.series = [];\n        this.box = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        };\n        this.setInitialRendering(true);\n        this.integration =\n            Series_GraphLayoutComposition.integrations[options.integration];\n        this.enableSimulation = options.enableSimulation;\n        this.attractiveForce = ReingoldFruchtermanLayout_pick(options.attractiveForce, this.integration.attractiveForceFunction);\n        this.repulsiveForce = ReingoldFruchtermanLayout_pick(options.repulsiveForce, this.integration.repulsiveForceFunction);\n        this.approximation = options.approximation;\n    }\n    updateSimulation(enable) {\n        this.enableSimulation = ReingoldFruchtermanLayout_pick(enable, this.options.enableSimulation);\n    }\n    start() {\n        const layout = this, series = this.series, options = this.options;\n        layout.currentStep = 0;\n        layout.forces = series[0] && series[0].forces || [];\n        layout.chart = series[0] && series[0].chart;\n        if (layout.initialRendering) {\n            layout.initPositions();\n            // Render elements in initial positions:\n            series.forEach(function (s) {\n                s.finishedAnimating = true; // #13169\n                s.render();\n            });\n        }\n        layout.setK();\n        layout.resetSimulation(options);\n        if (layout.enableSimulation) {\n            layout.step();\n        }\n    }\n    step() {\n        const anyLayout = this, allSeries = this.series;\n        // Algorithm:\n        this.currentStep++;\n        if (this.approximation === 'barnes-hut') {\n            this.createQuadTree();\n            this.quadTree.calculateMassAndCenter();\n        }\n        for (const forceName of this.forces || []) {\n            anyLayout[forceName + 'Forces'](this.temperature);\n        }\n        // Limit to the plotting area and cool down:\n        this.applyLimits();\n        // Cool down the system:\n        this.temperature = this.coolDown(this.startTemperature, this.diffTemperature, this.currentStep);\n        this.prevSystemTemperature = this.systemTemperature;\n        this.systemTemperature = this.getSystemTemperature();\n        if (this.enableSimulation) {\n            for (const series of allSeries) {\n                // Chart could be destroyed during the simulation\n                if (series.chart) {\n                    series.render();\n                }\n            }\n            if (this.maxIterations-- &&\n                isFinite(this.temperature) &&\n                !this.isStable()) {\n                if (this.simulation) {\n                    win.cancelAnimationFrame(this.simulation);\n                }\n                this.simulation = win.requestAnimationFrame(() => this.step());\n            }\n            else {\n                this.simulation = false;\n                this.series.forEach((s) => {\n                    ReingoldFruchtermanLayout_fireEvent(s, 'afterSimulation');\n                });\n            }\n        }\n    }\n    stop() {\n        if (this.simulation) {\n            win.cancelAnimationFrame(this.simulation);\n        }\n    }\n    setArea(x, y, w, h) {\n        this.box = {\n            left: x,\n            top: y,\n            width: w,\n            height: h\n        };\n    }\n    setK() {\n        // Optimal distance between nodes,\n        // available space around the node:\n        this.k = this.options.linkLength || this.integration.getK(this);\n    }\n    addElementsToCollection(elements, collection) {\n        for (const element of elements) {\n            if (collection.indexOf(element) === -1) {\n                collection.push(element);\n            }\n        }\n    }\n    removeElementFromCollection(element, collection) {\n        const index = collection.indexOf(element);\n        if (index !== -1) {\n            collection.splice(index, 1);\n        }\n    }\n    clear() {\n        this.nodes.length = 0;\n        this.links.length = 0;\n        this.series.length = 0;\n        this.resetSimulation();\n    }\n    resetSimulation() {\n        this.forcedStop = false;\n        this.systemTemperature = 0;\n        this.setMaxIterations();\n        this.setTemperature();\n        this.setDiffTemperature();\n    }\n    restartSimulation() {\n        if (!this.simulation) {\n            // When dragging nodes, we don't need to calculate\n            // initial positions and rendering nodes:\n            this.setInitialRendering(false);\n            // Start new simulation:\n            if (!this.enableSimulation) {\n                // Run only one iteration to speed things up:\n                this.setMaxIterations(1);\n            }\n            else {\n                this.start();\n            }\n            if (this.chart) {\n                this.chart.redraw();\n            }\n            // Restore defaults:\n            this.setInitialRendering(true);\n        }\n        else {\n            // Extend current simulation:\n            this.resetSimulation();\n        }\n    }\n    setMaxIterations(maxIterations) {\n        this.maxIterations = ReingoldFruchtermanLayout_pick(maxIterations, this.options.maxIterations);\n    }\n    setTemperature() {\n        this.temperature = this.startTemperature =\n            Math.sqrt(this.nodes.length);\n    }\n    setDiffTemperature() {\n        this.diffTemperature = this.startTemperature /\n            (this.options.maxIterations + 1);\n    }\n    setInitialRendering(enable) {\n        this.initialRendering = enable;\n    }\n    createQuadTree() {\n        this.quadTree = new Networkgraph_QuadTree(this.box.left, this.box.top, this.box.width, this.box.height);\n        this.quadTree.insertNodes(this.nodes);\n    }\n    initPositions() {\n        const initialPositions = this.options.initialPositions;\n        if (isFunction(initialPositions)) {\n            initialPositions.call(this);\n            for (const node of this.nodes) {\n                if (!ReingoldFruchtermanLayout_defined(node.prevX)) {\n                    node.prevX = node.plotX;\n                }\n                if (!ReingoldFruchtermanLayout_defined(node.prevY)) {\n                    node.prevY = node.plotY;\n                }\n                node.dispX = 0;\n                node.dispY = 0;\n            }\n        }\n        else if (initialPositions === 'circle') {\n            this.setCircularPositions();\n        }\n        else {\n            this.setRandomPositions();\n        }\n    }\n    setCircularPositions() {\n        const box = this.box, nodes = this.nodes, nodesLength = nodes.length + 1, angle = 2 * Math.PI / nodesLength, rootNodes = nodes.filter(function (node) {\n            return node.linksTo.length === 0;\n        }), visitedNodes = {}, radius = this.options.initialPositionRadius, addToNodes = (node) => {\n            for (const link of node.linksFrom || []) {\n                if (!visitedNodes[link.toNode.id]) {\n                    visitedNodes[link.toNode.id] = true;\n                    sortedNodes.push(link.toNode);\n                    addToNodes(link.toNode);\n                }\n            }\n        };\n        let sortedNodes = [];\n        // Start with identified root nodes an sort the nodes by their\n        // hierarchy. In trees, this ensures that branches don't cross\n        // eachother.\n        for (const rootNode of rootNodes) {\n            sortedNodes.push(rootNode);\n            addToNodes(rootNode);\n        }\n        // Cyclic tree, no root node found\n        if (!sortedNodes.length) {\n            sortedNodes = nodes;\n            // Dangling, cyclic trees\n        }\n        else {\n            for (const node of nodes) {\n                if (sortedNodes.indexOf(node) === -1) {\n                    sortedNodes.push(node);\n                }\n            }\n        }\n        let node;\n        // Initial positions are laid out along a small circle, appearing\n        // as a cluster in the middle\n        for (let i = 0, iEnd = sortedNodes.length; i < iEnd; ++i) {\n            node = sortedNodes[i];\n            node.plotX = node.prevX = ReingoldFruchtermanLayout_pick(node.plotX, box.width / 2 + radius * Math.cos(i * angle));\n            node.plotY = node.prevY = ReingoldFruchtermanLayout_pick(node.plotY, box.height / 2 + radius * Math.sin(i * angle));\n            node.dispX = 0;\n            node.dispY = 0;\n        }\n    }\n    setRandomPositions() {\n        const box = this.box, nodes = this.nodes, nodesLength = nodes.length + 1, \n        /**\n         * Return a repeatable, quasi-random number based on an integer\n         * input. For the initial positions\n         * @private\n         */\n        unrandom = (n) => {\n            let rand = n * n / Math.PI;\n            rand = rand - Math.floor(rand);\n            return rand;\n        };\n        let node;\n        // Initial positions:\n        for (let i = 0, iEnd = nodes.length; i < iEnd; ++i) {\n            node = nodes[i];\n            node.plotX = node.prevX = ReingoldFruchtermanLayout_pick(node.plotX, box.width * unrandom(i));\n            node.plotY = node.prevY = ReingoldFruchtermanLayout_pick(node.plotY, box.height * unrandom(nodesLength + i));\n            node.dispX = 0;\n            node.dispY = 0;\n        }\n    }\n    force(name, ...args) {\n        this.integration[name].apply(this, args);\n    }\n    barycenterForces() {\n        this.getBarycenter();\n        this.force('barycenter');\n    }\n    getBarycenter() {\n        let systemMass = 0, cx = 0, cy = 0;\n        for (const node of this.nodes) {\n            cx += node.plotX * node.mass;\n            cy += node.plotY * node.mass;\n            systemMass += node.mass;\n        }\n        this.barycenter = {\n            x: cx,\n            y: cy,\n            xFactor: cx / systemMass,\n            yFactor: cy / systemMass\n        };\n        return this.barycenter;\n    }\n    barnesHutApproximation(node, quadNode) {\n        const distanceXY = this.getDistXY(node, quadNode), distanceR = this.vectorLength(distanceXY);\n        let goDeeper, force;\n        if (node !== quadNode && distanceR !== 0) {\n            if (quadNode.isInternal) {\n                // Internal node:\n                if (quadNode.boxSize / distanceR <\n                    this.options.theta &&\n                    distanceR !== 0) {\n                    // Treat as an external node:\n                    force = this.repulsiveForce(distanceR, this.k);\n                    this.force('repulsive', node, force * quadNode.mass, distanceXY, distanceR);\n                    goDeeper = false;\n                }\n                else {\n                    // Go deeper:\n                    goDeeper = true;\n                }\n            }\n            else {\n                // External node, direct force:\n                force = this.repulsiveForce(distanceR, this.k);\n                this.force('repulsive', node, force * quadNode.mass, distanceXY, distanceR);\n            }\n        }\n        return goDeeper;\n    }\n    repulsiveForces() {\n        if (this.approximation === 'barnes-hut') {\n            for (const node of this.nodes) {\n                this.quadTree.visitNodeRecursive(null, (quadNode) => (this.barnesHutApproximation(node, quadNode)));\n            }\n        }\n        else {\n            let force, distanceR, distanceXY;\n            for (const node of this.nodes) {\n                for (const repNode of this.nodes) {\n                    if (\n                    // Node cannot repulse itself:\n                    node !== repNode &&\n                        // Only close nodes affect each other:\n                        // layout.getDistR(node, repNode) < 2 * k &&\n                        // Not dragged:\n                        !node.fixedPosition) {\n                        distanceXY = this.getDistXY(node, repNode);\n                        distanceR = this.vectorLength(distanceXY);\n                        if (distanceR !== 0) {\n                            force = this.repulsiveForce(distanceR, this.k);\n                            this.force('repulsive', node, force * repNode.mass, distanceXY, distanceR);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    attractiveForces() {\n        let distanceXY, distanceR, force;\n        for (const link of this.links) {\n            if (link.fromNode && link.toNode) {\n                distanceXY = this.getDistXY(link.fromNode, link.toNode);\n                distanceR = this.vectorLength(distanceXY);\n                if (distanceR !== 0) {\n                    force = this.attractiveForce(distanceR, this.k);\n                    this.force('attractive', link, force, distanceXY, distanceR);\n                }\n            }\n        }\n    }\n    applyLimits() {\n        const nodes = this.nodes;\n        for (const node of nodes) {\n            if (node.fixedPosition) {\n                continue;\n            }\n            this.integration.integrate(this, node);\n            this.applyLimitBox(node, this.box);\n            // Reset displacement:\n            node.dispX = 0;\n            node.dispY = 0;\n        }\n    }\n    /**\n     * External box that nodes should fall. When hitting an edge, node\n     * should stop or bounce.\n     * @private\n     */\n    applyLimitBox(node, box) {\n        const radius = node.radius;\n        /*\n        TO DO: Consider elastic collision instead of stopping.\n        o' means end position when hitting plotting area edge:\n\n        - \"inelastic\":\n        o\n            \\\n        ______\n        |  o'\n        |   \\\n        |    \\\n\n        - \"elastic\"/\"bounced\":\n        o\n            \\\n        ______\n        |  ^\n        | / \\\n        |o'  \\\n\n        Euler sample:\n        if (plotX < 0) {\n            plotX = 0;\n            dispX *= -1;\n        }\n\n        if (plotX > box.width) {\n            plotX = box.width;\n            dispX *= -1;\n        }\n\n        */\n        // Limit X-coordinates:\n        node.plotX = ReingoldFruchtermanLayout_clamp(node.plotX, box.left + radius, box.width - radius);\n        // Limit Y-coordinates:\n        node.plotY = ReingoldFruchtermanLayout_clamp(node.plotY, box.top + radius, box.height - radius);\n    }\n    /**\n     * From \"A comparison of simulated annealing cooling strategies\" by\n     * Nourani and Andresen work.\n     * @private\n     */\n    coolDown(temperature, temperatureStep, currentStep) {\n        // Logarithmic:\n        /*\n        return Math.sqrt(this.nodes.length) -\n            Math.log(\n                currentStep * layout.diffTemperature\n            );\n        */\n        // Exponential:\n        /*\n        let alpha = 0.1;\n        layout.temperature = Math.sqrt(layout.nodes.length) *\n            Math.pow(alpha, layout.diffTemperature);\n        */\n        // Linear:\n        return temperature - temperatureStep * currentStep;\n    }\n    isStable() {\n        return Math.abs(this.systemTemperature -\n            this.prevSystemTemperature) < 0.00001 || this.temperature <= 0;\n    }\n    getSystemTemperature() {\n        let value = 0;\n        for (const node of this.nodes) {\n            value += node.temperature;\n        }\n        return value;\n    }\n    vectorLength(vector) {\n        return Math.sqrt(vector.x * vector.x + vector.y * vector.y);\n    }\n    getDistR(nodeA, nodeB) {\n        const distance = this.getDistXY(nodeA, nodeB);\n        return this.vectorLength(distance);\n    }\n    getDistXY(nodeA, nodeB) {\n        const xDist = nodeA.plotX - nodeB.plotX, yDist = nodeA.plotY - nodeB.plotY;\n        return {\n            x: xDist,\n            y: yDist,\n            absX: Math.abs(xDist),\n            absY: Math.abs(yDist)\n        };\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Networkgraph_ReingoldFruchtermanLayout = (ReingoldFruchtermanLayout);\n\n;// ./code/es-modules/Series/PackedBubble/PackedBubbleLayout.js\n/* *\n *\n *  (c) 2010-2025 Grzegorz Blachlinski, Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\n\nconst { addEvent: PackedBubbleLayout_addEvent, defined: PackedBubbleLayout_defined, pick: PackedBubbleLayout_pick } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction chartGetSelectedParentNodes() {\n    const allSeries = this.series, selectedParentsNodes = [];\n    allSeries.forEach((series) => {\n        if (series.parentNode && series.parentNode.selected) {\n            selectedParentsNodes.push(series.parentNode);\n        }\n    });\n    return selectedParentsNodes;\n}\n/**\n * Remove accumulated data points to redistribute all of them again\n * (i.e after hiding series by legend)\n * @private\n */\nfunction onChartBeforeRedraw() {\n    if (this.allDataPoints) {\n        delete this.allDataPoints;\n    }\n}\n/* *\n *\n *  Class\n *\n * */\nclass PackedBubbleLayout extends Networkgraph_ReingoldFruchtermanLayout {\n    constructor() {\n        /* *\n         *\n         *  Static Functions\n         *\n         * */\n        super(...arguments);\n        this.index = NaN;\n        this.nodes = [];\n        this.series = [];\n    }\n    static compose(ChartClass) {\n        Networkgraph_ReingoldFruchtermanLayout.compose(ChartClass);\n        Series_GraphLayoutComposition.integrations.packedbubble = PackedBubble_PackedBubbleIntegration;\n        Series_GraphLayoutComposition.layouts.packedbubble = PackedBubbleLayout;\n        const chartProto = ChartClass.prototype;\n        if (!chartProto.getSelectedParentNodes) {\n            PackedBubbleLayout_addEvent(ChartClass, 'beforeRedraw', onChartBeforeRedraw);\n            chartProto.getSelectedParentNodes = chartGetSelectedParentNodes;\n        }\n        if (!chartProto.allParentNodes) {\n            chartProto.allParentNodes = [];\n        }\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    beforeStep() {\n        if (this.options.marker) {\n            this.series.forEach((series) => {\n                if (series) {\n                    series.calculateParentRadius();\n                }\n            });\n        }\n    }\n    // #14439, new stable check.\n    isStable() {\n        const tempDiff = Math.abs(this.prevSystemTemperature -\n            this.systemTemperature);\n        const upScaledTemperature = 10 * this.systemTemperature /\n            Math.sqrt(this.nodes.length);\n        return Math.abs(upScaledTemperature) < 1 &&\n            tempDiff < 0.00001 ||\n            this.temperature <= 0;\n    }\n    setCircularPositions() {\n        const layout = this, box = layout.box, nodes = [\n            ...layout.nodes,\n            ...layout?.chart?.allParentNodes || []\n        ], nodesLength = nodes.length + 1, angle = 2 * Math.PI / nodesLength, radius = layout.options.initialPositionRadius;\n        let centerX, centerY, index = 0;\n        for (const node of nodes) {\n            if (this.resolveSplitSeries(node) &&\n                !node.isParentNode) {\n                centerX = node.series.parentNode.plotX;\n                centerY = node.series.parentNode.plotY;\n            }\n            else {\n                centerX = box.width / 2;\n                centerY = box.height / 2;\n            }\n            node.plotX = node.prevX = PackedBubbleLayout_pick(node.plotX, centerX +\n                radius * Math.cos(node.index || index * angle));\n            node.plotY = node.prevY = PackedBubbleLayout_pick(node.plotY, centerY +\n                radius * Math.sin(node.index || index * angle));\n            node.dispX = 0;\n            node.dispY = 0;\n            index++;\n        }\n    }\n    repulsiveForces() {\n        const layout = this, { options, k } = layout, { bubblePadding = 0, seriesInteraction } = options, nodes = [\n            ...layout.nodes,\n            ...layout?.chart?.allParentNodes || []\n        ];\n        for (const node of nodes) {\n            const nodeSeries = node.series, fixedPosition = node.fixedPosition, paddedNodeRadius = ((node.marker?.radius || 0) +\n                bubblePadding);\n            node.degree = node.mass;\n            node.neighbours = 0;\n            for (const repNode of nodes) {\n                const repNodeSeries = repNode.series;\n                if (\n                // Node cannot repulse itself:\n                node !== repNode &&\n                    // Not dragged:\n                    !fixedPosition &&\n                    (seriesInteraction || nodeSeries === repNodeSeries) &&\n                    // Avoiding collision of parentNodes and parented points\n                    !(nodeSeries === repNodeSeries &&\n                        (repNode.isParentNode || node.isParentNode))) {\n                    const distanceXY = layout.getDistXY(node, repNode), distanceR = (layout.vectorLength(distanceXY) -\n                        (paddedNodeRadius + (repNode.marker?.radius || 0)));\n                    let forceTimesMass;\n                    // TODO padding configurable\n                    if (distanceR < 0) {\n                        node.degree += 0.01;\n                        forceTimesMass = (layout.repulsiveForce(-distanceR / Math.sqrt(++(node.neighbours)), k, node, repNode) *\n                            repNode.mass);\n                    }\n                    layout.force('repulsive', node, forceTimesMass || 0, distanceXY, repNode, distanceR);\n                }\n            }\n        }\n    }\n    resolveSplitSeries(node) {\n        const specificSeriesOpt = node\n            .series\n            ?.options\n            ?.layoutAlgorithm\n            ?.splitSeries;\n        return (!PackedBubbleLayout_defined(specificSeriesOpt) &&\n            node.series.chart\n                ?.options\n                ?.plotOptions\n                ?.packedbubble\n                ?.layoutAlgorithm\n                ?.splitSeries) ||\n            specificSeriesOpt ||\n            false;\n    }\n    applyLimitBox(node, box) {\n        const layout = this, factor = 0.01;\n        let distanceXY, distanceR;\n        // `parentNodeLimit` should be used together with seriesInteraction:\n        // false\n        if (this.resolveSplitSeries(node) &&\n            !node.isParentNode &&\n            layout.options.parentNodeLimit) {\n            distanceXY = layout.getDistXY(node, node.series.parentNode);\n            distanceR = (node.series.parentNodeRadius -\n                node.marker.radius -\n                layout.vectorLength(distanceXY));\n            if (distanceR < 0 &&\n                distanceR > -2 * node.marker.radius) {\n                node.plotX -= distanceXY.x * factor;\n                node.plotY -= distanceXY.y * factor;\n            }\n        }\n        super.applyLimitBox(node, box);\n    }\n}\n/* *\n *\n *  Registry\n *\n * */\nSeries_GraphLayoutComposition.layouts.packedbubble = PackedBubbleLayout;\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const PackedBubble_PackedBubbleLayout = (PackedBubbleLayout);\n\n;// ./code/es-modules/Series/SimulationSeriesUtilities.js\n/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { merge: SimulationSeriesUtilities_merge, syncTimeout } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\nconst { animObject } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/**\n * Create a setTimeout for the first drawDataLabels()\n * based on the dataLabels.animation.defer value\n * for series which have enabled simulation.\n * @private\n */\nfunction initDataLabelsDefer() {\n    const dlOptions = this.options.dataLabels;\n    // Method drawDataLabels() fires for the first time after\n    // dataLabels.animation.defer time unless\n    // the dataLabels.animation = false or dataLabels.defer = false\n    // or if the simulation is disabled\n    if (!dlOptions?.defer ||\n        !this.options.layoutAlgorithm?.enableSimulation) {\n        this.deferDataLabels = false;\n    }\n    else {\n        syncTimeout(() => {\n            this.deferDataLabels = false;\n        }, dlOptions ? animObject(dlOptions.animation).defer : 0);\n    }\n}\n/**\n * Initialize the SVG group for the DataLabels with correct opacities\n * and correct styles so that the animation for the series that have\n * simulation enabled works fine.\n * @private\n */\nfunction initDataLabels() {\n    const series = this, dlOptions = series.options.dataLabels;\n    if (!series.dataLabelsGroup) {\n        const dataLabelsGroup = this.initDataLabelsGroup();\n        // Apply the dataLabels.style not only to the\n        // individual dataLabels but also to the entire group\n        if (!series.chart.styledMode && dlOptions?.style) {\n            dataLabelsGroup.css(dlOptions.style);\n        }\n        // Initialize the opacity of the group to 0 (start of animation)\n        dataLabelsGroup.attr({ opacity: 0 });\n        if (series.visible) { // #2597, #3023, #3024\n            dataLabelsGroup.show();\n        }\n        return dataLabelsGroup;\n    }\n    // Place it on first and subsequent (redraw) calls\n    series.dataLabelsGroup.attr(SimulationSeriesUtilities_merge({ opacity: 1 }, this.getPlotBox('data-labels')));\n    return series.dataLabelsGroup;\n}\nconst DataLabelsDeferUtils = {\n    initDataLabels,\n    initDataLabelsDefer\n};\n/* harmony default export */ const SimulationSeriesUtilities = (DataLabelsDeferUtils);\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"SVGElement\"],\"commonjs\":[\"highcharts\",\"SVGElement\"],\"commonjs2\":[\"highcharts\",\"SVGElement\"],\"root\":[\"Highcharts\",\"SVGElement\"]}\nvar highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_ = __webpack_require__(28);\nvar highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_default = /*#__PURE__*/__webpack_require__.n(highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_);\n;// ./code/es-modules/Extensions/TextPath.js\n/* *\n *\n *  Highcharts module with textPath functionality.\n *\n *  (c) 2009-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { deg2rad: TextPath_deg2rad } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\nconst { addEvent: TextPath_addEvent, merge: TextPath_merge, uniqueKey, defined: TextPath_defined, extend: TextPath_extend } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/**\n * Set a text path for a `text` or `label` element, allowing the text to\n * flow along a path.\n *\n * In order to unset the path for an existing element, call `setTextPath`\n * with `{ enabled: false }` as the second argument.\n *\n * Text path support is not bundled into `highcharts.js`, and requires the\n * `modules/textpath.js` file. However, it is included in the script files of\n * those series types that use it by default\n *\n * @sample highcharts/members/renderer-textpath/ Text path demonstrated\n *\n * @function Highcharts.SVGElement#setTextPath\n *\n * @param {Highcharts.SVGElement|undefined} path\n *        Path to follow. If undefined, it allows changing options for the\n *        existing path.\n *\n * @param {Highcharts.DataLabelsTextPathOptionsObject} textPathOptions\n *        Options.\n *\n * @return {Highcharts.SVGElement} Returns the SVGElement for chaining.\n */\nfunction setTextPath(path, textPathOptions) {\n    // Defaults\n    textPathOptions = TextPath_merge(true, {\n        enabled: true,\n        attributes: {\n            dy: -5,\n            startOffset: '50%',\n            textAnchor: 'middle'\n        }\n    }, textPathOptions);\n    const url = this.renderer.url, textWrapper = this.text || this, textPath = textWrapper.textPath, { attributes, enabled } = textPathOptions;\n    path = path || (textPath && textPath.path);\n    // Remove previously added event\n    if (textPath) {\n        textPath.undo();\n    }\n    if (path && enabled) {\n        const undo = TextPath_addEvent(textWrapper, 'afterModifyTree', (e) => {\n            if (path && enabled) {\n                // Set ID for the path\n                let textPathId = path.attr('id');\n                if (!textPathId) {\n                    path.attr('id', textPathId = uniqueKey());\n                }\n                // Set attributes for the <text>\n                const textAttribs = {\n                    // `dx`/`dy` options must by set on <text> (parent), the\n                    // rest should be set on <textPath>\n                    x: 0,\n                    y: 0\n                };\n                if (TextPath_defined(attributes.dx)) {\n                    textAttribs.dx = attributes.dx;\n                    delete attributes.dx;\n                }\n                if (TextPath_defined(attributes.dy)) {\n                    textAttribs.dy = attributes.dy;\n                    delete attributes.dy;\n                }\n                textWrapper.attr(textAttribs);\n                // Handle label properties\n                this.attr({ transform: '' });\n                if (this.box) {\n                    this.box = this.box.destroy();\n                }\n                // Wrap the nodes in a textPath\n                const children = e.nodes.slice(0);\n                e.nodes.length = 0;\n                e.nodes[0] = {\n                    tagName: 'textPath',\n                    attributes: TextPath_extend(attributes, {\n                        'text-anchor': attributes.textAnchor,\n                        href: `${url}#${textPathId}`\n                    }),\n                    children\n                };\n            }\n        });\n        // Set the reference\n        textWrapper.textPath = { path, undo };\n    }\n    else {\n        textWrapper.attr({ dx: 0, dy: 0 });\n        delete textWrapper.textPath;\n    }\n    if (this.added) {\n        // Rebuild text after added\n        textWrapper.textCache = '';\n        this.renderer.buildText(textWrapper);\n    }\n    return this;\n}\n/**\n * Attach a polygon to a bounding box if the element contains a textPath.\n *\n * @function Highcharts.SVGElement#setPolygon\n *\n * @param {any} event\n *        An event containing a bounding box object\n *\n * @return {Highcharts.BBoxObject} Returns the bounding box object.\n */\nfunction setPolygon(event) {\n    const bBox = event.bBox, tp = this.element?.querySelector('textPath');\n    if (tp) {\n        const polygon = [], { b, h } = this.renderer.fontMetrics(this.element), descender = h - b, lineCleanerRegex = new RegExp('(<tspan>|' +\n            '<tspan(?!\\\\sclass=\"highcharts-br\")[^>]*>|' +\n            '<\\\\/tspan>)', 'g'), lines = tp\n            .innerHTML\n            .replace(lineCleanerRegex, '')\n            .split(/<tspan class=\"highcharts-br\"[^>]*>/), numOfLines = lines.length;\n        // Calculate top and bottom coordinates for\n        // either the start or the end of a single\n        // character, and append it to the polygon.\n        const appendTopAndBottom = (charIndex, positionOfChar) => {\n            const { x, y } = positionOfChar, rotation = (tp.getRotationOfChar(charIndex) - 90) * TextPath_deg2rad, cosRot = Math.cos(rotation), sinRot = Math.sin(rotation);\n            return [\n                [\n                    x - descender * cosRot,\n                    y - descender * sinRot\n                ],\n                [\n                    x + b * cosRot,\n                    y + b * sinRot\n                ]\n            ];\n        };\n        for (let i = 0, lineIndex = 0; lineIndex < numOfLines; lineIndex++) {\n            const line = lines[lineIndex], lineLen = line.length;\n            for (let lineCharIndex = 0; lineCharIndex < lineLen; lineCharIndex += 5) {\n                try {\n                    const srcCharIndex = (i +\n                        lineCharIndex +\n                        lineIndex), [lower, upper] = appendTopAndBottom(srcCharIndex, tp.getStartPositionOfChar(srcCharIndex));\n                    if (lineCharIndex === 0) {\n                        polygon.push(upper);\n                        polygon.push(lower);\n                    }\n                    else {\n                        if (lineIndex === 0) {\n                            polygon.unshift(upper);\n                        }\n                        if (lineIndex === numOfLines - 1) {\n                            polygon.push(lower);\n                        }\n                    }\n                }\n                catch (e) {\n                    // Safari fails on getStartPositionOfChar even if the\n                    // character is within the `textContent.length`\n                    break;\n                }\n            }\n            i += lineLen - 1;\n            try {\n                const srcCharIndex = i + lineIndex, charPos = tp.getEndPositionOfChar(srcCharIndex), [lower, upper] = appendTopAndBottom(srcCharIndex, charPos);\n                polygon.unshift(upper);\n                polygon.unshift(lower);\n            }\n            catch (e) {\n                // Safari fails on getStartPositionOfChar even if the character\n                // is within the `textContent.length`\n                break;\n            }\n        }\n        // Close it\n        if (polygon.length) {\n            polygon.push(polygon[0].slice());\n        }\n        bBox.polygon = polygon;\n    }\n    return bBox;\n}\n/**\n * Draw text along a textPath for a dataLabel.\n *\n * @function Highcharts.SVGElement#setTextPath\n *\n * @param {any} event\n *        An event containing label options\n *\n * @return {void}\n */\nfunction drawTextPath(event) {\n    const labelOptions = event.labelOptions, point = event.point, textPathOptions = (labelOptions[point.formatPrefix + 'TextPath'] ||\n        labelOptions.textPath);\n    if (textPathOptions && !labelOptions.useHTML) {\n        this.setTextPath(point.getDataLabelPath?.(this) || point.graphic, textPathOptions);\n        if (point.dataLabelPath &&\n            !textPathOptions.enabled) {\n            // Clean the DOM\n            point.dataLabelPath = (point.dataLabelPath.destroy());\n        }\n    }\n}\nfunction TextPath_compose(SVGElementClass) {\n    TextPath_addEvent(SVGElementClass, 'afterGetBBox', setPolygon);\n    TextPath_addEvent(SVGElementClass, 'beforeAddingDataLabel', drawTextPath);\n    const svgElementProto = SVGElementClass.prototype;\n    if (!svgElementProto.setTextPath) {\n        svgElementProto.setTextPath = setTextPath;\n    }\n}\nconst TextPath = {\n    compose: TextPath_compose\n};\n/* harmony default export */ const Extensions_TextPath = (TextPath);\n\n;// ./code/es-modules/Series/PackedBubble/PackedBubbleSeries.js\n/* *\n *\n *  (c) 2010-2025 Grzegorz Blachlinski, Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { parse: color } = (highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default());\n\n\n\nconst { noop: PackedBubbleSeries_noop } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\n\n\n\nconst { series: { prototype: seriesProto }, seriesTypes: { bubble: PackedBubbleSeries_BubbleSeries } } = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default());\n\nconst { initDataLabels: PackedBubbleSeries_initDataLabels, initDataLabelsDefer: PackedBubbleSeries_initDataLabelsDefer } = SimulationSeriesUtilities;\n\nconst { addEvent: PackedBubbleSeries_addEvent, clamp: PackedBubbleSeries_clamp, defined: PackedBubbleSeries_defined, extend: PackedBubbleSeries_extend, fireEvent: PackedBubbleSeries_fireEvent, isArray: PackedBubbleSeries_isArray, isNumber: PackedBubbleSeries_isNumber, merge: PackedBubbleSeries_merge, pick: PackedBubbleSeries_pick } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\n\nExtensions_TextPath.compose((highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_default()));\n/* *\n *\n *  Class\n *\n * */\n/**\n * @private\n * @class\n * @name Highcharts.seriesTypes.packedbubble\n *\n * @extends Highcharts.Series\n */\nclass PackedBubbleSeries extends PackedBubbleSeries_BubbleSeries {\n    constructor() {\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        super(...arguments);\n        this.parentNodeMass = 0;\n        this.deferDataLabels = true;\n        /* eslint-enable valid-jsdoc */\n    }\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    static compose(AxisClass, ChartClass, LegendClass) {\n        PackedBubbleSeries_BubbleSeries.compose(AxisClass, ChartClass, LegendClass);\n        Series_DragNodesComposition.compose(ChartClass);\n        PackedBubble_PackedBubbleLayout.compose(ChartClass);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Create a single array of all points from all series\n     * @private\n     */\n    accumulateAllPoints() {\n        const chart = this.chart, allDataPoints = [];\n        for (const series of chart.series) {\n            if (series.is('packedbubble') && // #13574\n                series.reserveSpace()) {\n                const valueData = series.getColumn('value');\n                // Add data to array only if series is visible\n                for (let j = 0; j < valueData.length; j++) {\n                    allDataPoints.push([\n                        null, null,\n                        valueData[j],\n                        series.index,\n                        j,\n                        {\n                            id: j,\n                            marker: {\n                                radius: 0\n                            }\n                        }\n                    ]);\n                }\n            }\n        }\n        return allDataPoints;\n    }\n    /**\n     * Adding the basic layout to series points.\n     * @private\n     */\n    addLayout() {\n        const layoutOptions = this.options.layoutAlgorithm =\n            this.options.layoutAlgorithm || {}, layoutType = layoutOptions.type || 'packedbubble', chartOptions = this.chart.options.chart;\n        let graphLayoutsStorage = this.chart.graphLayoutsStorage, graphLayoutsLookup = this.chart.graphLayoutsLookup, layout;\n        if (!graphLayoutsStorage) {\n            this.chart.graphLayoutsStorage = graphLayoutsStorage = {};\n            this.chart.graphLayoutsLookup = graphLayoutsLookup = [];\n        }\n        layout = graphLayoutsStorage[layoutType];\n        if (!layout) {\n            layoutOptions.enableSimulation =\n                !PackedBubbleSeries_defined(chartOptions.forExport) ?\n                    layoutOptions.enableSimulation :\n                    !chartOptions.forExport;\n            graphLayoutsStorage[layoutType] = layout =\n                new Series_GraphLayoutComposition.layouts[layoutType]();\n            layout.init(layoutOptions);\n            graphLayoutsLookup.splice(layout.index, 0, layout);\n        }\n        this.layout = layout;\n        this.points.forEach((node) => {\n            node.mass = 2;\n            node.degree = 1;\n            node.collisionNmb = 1;\n        });\n        layout.setArea(0, 0, this.chart.plotWidth, this.chart.plotHeight);\n        layout.addElementsToCollection([this], layout.series);\n        layout.addElementsToCollection(this.points, layout.nodes);\n    }\n    /**\n     * Function responsible for adding series layout, used for parent nodes.\n     * @private\n     */\n    addSeriesLayout() {\n        const layoutOptions = this.options.layoutAlgorithm =\n            this.options.layoutAlgorithm || {}, layoutType = (layoutOptions.type || 'packedbubble'), graphLayoutsStorage = this.chart.graphLayoutsStorage, graphLayoutsLookup = this.chart.graphLayoutsLookup, parentNodeOptions = PackedBubbleSeries_merge(layoutOptions, layoutOptions.parentNodeOptions, {\n            enableSimulation: this.layout.options.enableSimulation\n        });\n        let seriesLayout = graphLayoutsStorage[layoutType + '-series'];\n        if (!seriesLayout) {\n            graphLayoutsStorage[layoutType + '-series'] = seriesLayout =\n                new Series_GraphLayoutComposition.layouts[layoutType]();\n            seriesLayout.init(parentNodeOptions);\n            graphLayoutsLookup.splice(seriesLayout.index, 0, seriesLayout);\n        }\n        this.parentNodeLayout = seriesLayout;\n        this.createParentNodes();\n    }\n    /**\n     * The function responsible for calculating the parent node radius\n     * based on the total surface of inside-bubbles and the group BBox\n     * @private\n     */\n    calculateParentRadius() {\n        const bBox = this.seriesBox(), parentPadding = 20, minParentRadius = 20;\n        this.parentNodeRadius = PackedBubbleSeries_clamp(Math.sqrt(2 * this.parentNodeMass / Math.PI) + parentPadding, minParentRadius, bBox ?\n            Math.max(Math.sqrt(Math.pow(bBox.width, 2) +\n                Math.pow(bBox.height, 2)) / 2 + parentPadding, minParentRadius) :\n            Math.sqrt(2 * this.parentNodeMass / Math.PI) + parentPadding);\n        if (this.parentNode) {\n            this.parentNode.marker.radius =\n                this.parentNode.radius = this.parentNodeRadius;\n        }\n    }\n    /**\n     * Calculate min and max bubble value for radius calculation.\n     * @private\n     */\n    calculateZExtremes() {\n        const chart = this.chart, allSeries = chart.series;\n        let zMin = this.options.zMin, zMax = this.options.zMax, valMin = Infinity, valMax = -Infinity;\n        if (zMin && zMax) {\n            return [zMin, zMax];\n        }\n        // It is needed to deal with null and undefined values\n        allSeries.forEach((series) => {\n            series.getColumn('value').forEach((y) => {\n                if (PackedBubbleSeries_defined(y)) {\n                    if (y > valMax) {\n                        valMax = y;\n                    }\n                    if (y < valMin) {\n                        valMin = y;\n                    }\n                }\n            });\n        });\n        zMin = PackedBubbleSeries_pick(zMin, valMin);\n        zMax = PackedBubbleSeries_pick(zMax, valMax);\n        return [zMin, zMax];\n    }\n    /**\n     * Check if two bubbles overlaps.\n     * @private\n     */\n    checkOverlap(bubble1, bubble2) {\n        const diffX = bubble1[0] - bubble2[0], // Diff of X center values\n        diffY = bubble1[1] - bubble2[1], // Diff of Y center values\n        sumRad = bubble1[2] + bubble2[2]; // Sum of bubble radius\n        return (Math.sqrt(diffX * diffX + diffY * diffY) -\n            Math.abs(sumRad)) < -0.001;\n    }\n    /**\n     * Creating parent nodes for split series, in which all the bubbles\n     * are rendered.\n     * @private\n     */\n    createParentNodes() {\n        const PackedBubblePoint = this.pointClass, chart = this.chart, parentNodeLayout = this.parentNodeLayout, layoutOptions = this.layout.options;\n        let nodeAdded, parentNode = this.parentNode, parentMarkerOptions = {\n            radius: this.parentNodeRadius,\n            lineColor: this.color,\n            fillColor: color(this.color).brighten(0.4).get()\n        };\n        if (layoutOptions.parentNodeOptions) {\n            parentMarkerOptions = PackedBubbleSeries_merge(layoutOptions.parentNodeOptions.marker || {}, parentMarkerOptions);\n        }\n        this.parentNodeMass = 0;\n        this.points.forEach((p) => {\n            this.parentNodeMass +=\n                Math.PI * Math.pow(p.marker.radius, 2);\n        });\n        this.calculateParentRadius();\n        parentNodeLayout.nodes\n            .forEach((node) => {\n            if (node.seriesIndex === this.index) {\n                nodeAdded = true;\n            }\n        });\n        parentNodeLayout.setArea(0, 0, chart.plotWidth, chart.plotHeight);\n        if (!nodeAdded) {\n            if (!parentNode) {\n                parentNode = new PackedBubblePoint(this, {\n                    mass: this.parentNodeRadius / 2,\n                    marker: parentMarkerOptions,\n                    dataLabels: {\n                        inside: false\n                    },\n                    states: {\n                        normal: {\n                            marker: parentMarkerOptions\n                        },\n                        hover: {\n                            marker: parentMarkerOptions\n                        }\n                    },\n                    dataLabelOnNull: true,\n                    degree: this.parentNodeRadius,\n                    isParentNode: true,\n                    seriesIndex: this.index\n                });\n                this.chart.allParentNodes.push(parentNode);\n            }\n            if (this.parentNode) {\n                parentNode.plotX = this.parentNode.plotX;\n                parentNode.plotY = this.parentNode.plotY;\n            }\n            this.parentNode = parentNode;\n            parentNodeLayout.addElementsToCollection([this], parentNodeLayout.series);\n            parentNodeLayout.addElementsToCollection([parentNode], parentNodeLayout.nodes);\n        }\n    }\n    /**\n     * Function responsible for adding all the layouts to the chart.\n     * @private\n     */\n    deferLayout() {\n        // TODO split layouts to independent methods\n        const layoutOptions = this.options.layoutAlgorithm;\n        if (!this.visible) {\n            return;\n        }\n        // Layout is using nodes for position calculation\n        this.addLayout();\n        if (layoutOptions.splitSeries) {\n            this.addSeriesLayout();\n        }\n    }\n    destroy() {\n        // Remove the series from all layouts series collections #11469\n        if (this.chart.graphLayoutsLookup) {\n            this.chart.graphLayoutsLookup.forEach((layout) => {\n                layout.removeElementFromCollection(this, layout.series);\n            }, this);\n        }\n        if (this.parentNode &&\n            this.parentNodeLayout) {\n            this.parentNodeLayout.removeElementFromCollection(this.parentNode, this.parentNodeLayout.nodes);\n            if (this.parentNode.dataLabel) {\n                this.parentNode.dataLabel =\n                    this.parentNode.dataLabel.destroy();\n            }\n        }\n        seriesProto.destroy.apply(this, arguments);\n    }\n    /**\n     * Packedbubble has two separate collections of nodes if split, render\n     * dataLabels for both sets:\n     * @private\n     */\n    drawDataLabels() {\n        // We defer drawing the dataLabels\n        // until dataLabels.animation.defer time passes\n        if (this.deferDataLabels) {\n            return;\n        }\n        seriesProto.drawDataLabels.call(this, this.points);\n        // Render parentNode labels:\n        if (this.parentNode) {\n            this.parentNode.formatPrefix = 'parentNode';\n            seriesProto.drawDataLabels.call(this, [this.parentNode]);\n        }\n    }\n    /**\n     * Create Background/Parent Nodes for split series.\n     * @private\n     */\n    drawGraph() {\n        // If the series is not using layout, don't add parent nodes\n        if (!this.layout || !this.layout.options.splitSeries) {\n            return;\n        }\n        const chart = this.chart, nodeMarker = this.layout.options.parentNodeOptions.marker, parentOptions = {\n            fill: (nodeMarker.fillColor ||\n                color(this.color).brighten(0.4).get()),\n            opacity: nodeMarker.fillOpacity,\n            stroke: nodeMarker.lineColor || this.color,\n            'stroke-width': PackedBubbleSeries_pick(nodeMarker.lineWidth, this.options.lineWidth)\n        };\n        let parentAttribs = {};\n        // Create the group for parent Nodes if doesn't exist\n        // If exists it will only be adjusted to the updated plot size (#12063)\n        this.parentNodesGroup = this.plotGroup('parentNodesGroup', 'parentNode', this.visible ? 'inherit' : 'hidden', 0.1, chart.seriesGroup);\n        this.group?.attr({\n            zIndex: 2\n        });\n        this.calculateParentRadius();\n        if (this.parentNode &&\n            PackedBubbleSeries_defined(this.parentNode.plotX) &&\n            PackedBubbleSeries_defined(this.parentNode.plotY) &&\n            PackedBubbleSeries_defined(this.parentNodeRadius)) {\n            parentAttribs = PackedBubbleSeries_merge({\n                x: this.parentNode.plotX -\n                    this.parentNodeRadius,\n                y: this.parentNode.plotY -\n                    this.parentNodeRadius,\n                width: this.parentNodeRadius * 2,\n                height: this.parentNodeRadius * 2\n            }, parentOptions);\n            if (!this.parentNode.graphic) {\n                this.graph = this.parentNode.graphic =\n                    chart.renderer.symbol(parentOptions.symbol)\n                        .add(this.parentNodesGroup);\n            }\n            this.parentNode.graphic.attr(parentAttribs);\n        }\n    }\n    drawTracker() {\n        const parentNode = this.parentNode;\n        // Chart = series.chart,\n        // pointer = chart.pointer,\n        // onMouseOver = function (e: PointerEvent): void {\n        //     const point = pointer.getPointFromEvent(e);\n        //     // undefined on graph in scatterchart\n        //     if (typeof point !== 'undefined') {\n        //         pointer.isDirectTouch = true;\n        //         point.onMouseOver(e);\n        //     }\n        // };\n        let dataLabels;\n        super.drawTracker();\n        // Add reference to the point\n        if (parentNode) {\n            dataLabels = (PackedBubbleSeries_isArray(parentNode.dataLabels) ?\n                parentNode.dataLabels :\n                (parentNode.dataLabel ? [parentNode.dataLabel] : []));\n            if (parentNode.graphic) {\n                parentNode.graphic.element.point = parentNode;\n            }\n            dataLabels.forEach((dataLabel) => {\n                (dataLabel.div || dataLabel.element).point = parentNode;\n            });\n        }\n    }\n    /**\n     * Calculate radius of bubbles in series.\n     * @private\n     */\n    getPointRadius() {\n        const chart = this.chart, plotWidth = chart.plotWidth, plotHeight = chart.plotHeight, seriesOptions = this.options, useSimulation = seriesOptions.useSimulation, smallestSize = Math.min(plotWidth, plotHeight), extremes = {}, radii = [], allDataPoints = chart.allDataPoints || [], allDataPointsLength = allDataPoints.length;\n        let minSize, maxSize, value, radius;\n        ['minSize', 'maxSize'].forEach((prop) => {\n            const length = parseInt(seriesOptions[prop], 10), isPercent = /%$/.test(seriesOptions[prop]);\n            extremes[prop] = isPercent ?\n                smallestSize * length / 100 :\n                length * Math.sqrt(allDataPointsLength);\n        });\n        chart.minRadius = minSize = extremes.minSize /\n            Math.sqrt(allDataPointsLength);\n        chart.maxRadius = maxSize = extremes.maxSize /\n            Math.sqrt(allDataPointsLength);\n        const zExtremes = useSimulation ?\n            this.calculateZExtremes() :\n            [minSize, maxSize];\n        allDataPoints.forEach((point, i) => {\n            value = useSimulation ?\n                PackedBubbleSeries_clamp(point[2], zExtremes[0], zExtremes[1]) :\n                point[2];\n            radius = this.getRadius(zExtremes[0], zExtremes[1], minSize, maxSize, value);\n            if (radius === 0) {\n                radius = null;\n            }\n            allDataPoints[i][2] = radius;\n            radii.push(radius);\n        });\n        this.radii = radii;\n    }\n    init() {\n        seriesProto.init.apply(this, arguments);\n        PackedBubbleSeries_initDataLabelsDefer.call(this);\n        /* eslint-disable no-invalid-this */\n        // When one series is modified, the others need to be recomputed\n        this.eventsToUnbind.push(PackedBubbleSeries_addEvent(this, 'updatedData', function () {\n            this.chart.series.forEach((s) => {\n                if (s.type === this.type) {\n                    s.isDirty = true;\n                }\n            }, this);\n        }));\n        /* eslint-enable no-invalid-this */\n        return this;\n    }\n    /**\n     * Mouse up action, finalizing drag&drop.\n     * @private\n     * @param {Highcharts.Point} point The point that event occurred.\n     */\n    onMouseUp(dnPoint) {\n        const point = dnPoint;\n        if (point.fixedPosition && !point.removed) {\n            const layout = this.layout, parentNodeLayout = this.parentNodeLayout;\n            let distanceXY, distanceR;\n            if (!point.isParentNode &&\n                parentNodeLayout &&\n                layout.options.dragBetweenSeries) {\n                parentNodeLayout.nodes.forEach((node) => {\n                    if (point && point.marker &&\n                        node !== point.series.parentNode) {\n                        distanceXY = layout.getDistXY(point, node);\n                        distanceR = (layout.vectorLength(distanceXY) -\n                            node.marker.radius -\n                            point.marker.radius);\n                        if (distanceR < 0) {\n                            node.series.addPoint(PackedBubbleSeries_merge(point.options, {\n                                plotX: point.plotX,\n                                plotY: point.plotY\n                            }), false);\n                            layout.removeElementFromCollection(point, layout.nodes);\n                            point.remove();\n                        }\n                    }\n                });\n            }\n            Series_DragNodesComposition.onMouseUp.apply(this, arguments);\n        }\n    }\n    /**\n     * This is the main function responsible\n     * for positioning all of the bubbles\n     * allDataPoints - bubble array, in format [pixel x value,\n     * pixel y value, radius,\n     * related series index, related point index]\n     * @private\n     * @param {Array<Highcharts.PackedBubbleData>} allDataPoints All points from all series\n     * @return {Array<Highcharts.PackedBubbleData>} Positions of all bubbles\n     */\n    placeBubbles(allDataPoints) {\n        const checkOverlap = this.checkOverlap, positionBubble = this.positionBubble, bubblePos = [];\n        let stage = 1, j = 0, k = 0, calculatedBubble, arr = [], i;\n        // Sort all points\n        const sortedArr = allDataPoints.sort((a, b) => b[2] - a[2]);\n        if (sortedArr.length) {\n            // Create first bubble in the middle of the chart\n            bubblePos.push([\n                [\n                    0, // Starting in 0,0 coordinates\n                    0,\n                    sortedArr[0][2], // Radius\n                    sortedArr[0][3], // Series index\n                    sortedArr[0][4]\n                ] // Point index\n            ]); // 0 level bubble\n            if (sortedArr.length > 1) {\n                bubblePos.push([\n                    [\n                        0,\n                        (0 - sortedArr[1][2] -\n                            sortedArr[0][2]),\n                        // Move bubble above first one\n                        sortedArr[1][2],\n                        sortedArr[1][3],\n                        sortedArr[1][4]\n                    ]\n                ]); // 1 level 1st bubble\n                // first two already positioned so starting from 2\n                for (i = 2; i < sortedArr.length; i++) {\n                    sortedArr[i][2] = sortedArr[i][2] || 1;\n                    // In case if radius is calculated as 0.\n                    calculatedBubble = positionBubble(bubblePos[stage][j], bubblePos[stage - 1][k], sortedArr[i]); // Calculate initial bubble position\n                    if (checkOverlap(calculatedBubble, bubblePos[stage][0])) {\n                        /* If new bubble is overlapping with first bubble\n                            * in current level (stage)\n                            */\n                        bubblePos.push([]);\n                        k = 0;\n                        /* Reset index of bubble, used for\n                            * positioning the bubbles around it,\n                            * we are starting from first bubble in next\n                            * stage because we are changing level to higher\n                            */\n                        bubblePos[stage + 1].push(positionBubble(bubblePos[stage][j], bubblePos[stage][0], sortedArr[i]));\n                        // (last bubble, 1. from curr stage, new bubble)\n                        stage++; // The new level is created, above current\n                        j = 0; // Set the index of bubble in curr level to 0\n                    }\n                    else if (stage > 1 &&\n                        bubblePos[stage - 1][k + 1] &&\n                        checkOverlap(calculatedBubble, bubblePos[stage - 1][k + 1])) {\n                        /* If new bubble is overlapping with one of the prev\n                            * stage bubbles, it means that - bubble, used for\n                            * positioning the bubbles around it has changed\n                            * so we need to recalculate it\n                            */\n                        k++;\n                        bubblePos[stage].push(positionBubble(bubblePos[stage][j], bubblePos[stage - 1][k], sortedArr[i]));\n                        // (last bubble, prev stage bubble, new bubble)\n                        j++;\n                    }\n                    else { // Simply add calculated bubble\n                        j++;\n                        bubblePos[stage].push(calculatedBubble);\n                    }\n                }\n            }\n            this.chart.stages = bubblePos;\n            // It may not be necessary but adding it just in case -\n            // it is containing all of the bubble levels\n            this.chart.rawPositions =\n                []\n                    .concat.apply([], bubblePos);\n            // Bubble positions merged into one array\n            this.resizeRadius();\n            arr = this.chart.rawPositions;\n        }\n        return arr;\n    }\n    /**\n     * Function that checks for a parentMarker and sets the correct opacity.\n     * @private\n     * @param {Highcharts.Pack} point\n     * Candidate point for opacity correction.\n     * @param {string} [state]\n     * The point state, can be either `hover`, `select` or 'normal'. If\n     * undefined, normal state is assumed.\n     *\n     * @return {Highcharts.SVGAttributes}\n     * The presentational attributes to be set on the point.\n     */\n    pointAttribs(point, state) {\n        const options = this.options, hasParentMarker = point && point.isParentNode;\n        let markerOptions = options.marker;\n        if (hasParentMarker &&\n            options.layoutAlgorithm &&\n            options.layoutAlgorithm.parentNodeOptions) {\n            markerOptions = options.layoutAlgorithm.parentNodeOptions.marker;\n        }\n        const fillOpacity = markerOptions.fillOpacity, attr = seriesProto.pointAttribs.call(this, point, state);\n        if (fillOpacity !== 1) {\n            attr['fill-opacity'] = fillOpacity;\n        }\n        return attr;\n    }\n    /**\n     * Function that is adding one bubble based on positions and sizes of\n     * two other bubbles, lastBubble is the last added bubble, newOrigin is\n     * the bubble for positioning new bubbles. nextBubble is the currently\n     * added bubble for which we are calculating positions\n     * @private\n     * @param {Array<number>} lastBubble The closest last bubble\n     * @param {Array<number>} newOrigin New bubble\n     * @param {Array<number>} nextBubble The closest next bubble\n     * @return {Array<number>} Bubble with correct positions\n     */\n    positionBubble(lastBubble, newOrigin, nextBubble) {\n        const sqrt = Math.sqrt, asin = Math.asin, acos = Math.acos, pow = Math.pow, abs = Math.abs, distance = sqrt(// Dist between lastBubble and newOrigin\n        pow((lastBubble[0] - newOrigin[0]), 2) +\n            pow((lastBubble[1] - newOrigin[1]), 2)), alfa = acos(\n        // From cosinus theorem: alfa is an angle used for\n        // calculating correct position\n        (pow(distance, 2) +\n            pow(nextBubble[2] + newOrigin[2], 2) -\n            pow(nextBubble[2] + lastBubble[2], 2)) / (2 * (nextBubble[2] + newOrigin[2]) * distance)), beta = asin(// From sinus theorem.\n        abs(lastBubble[0] - newOrigin[0]) /\n            distance), \n        // Providing helping variables, related to angle between\n        // lastBubble and newOrigin\n        gamma = (lastBubble[1] - newOrigin[1]) < 0 ? 0 : Math.PI, \n        // If new origin y is smaller than last bubble y value\n        // (2 and 3 quarter),\n        // add Math.PI to final angle\n        delta = (lastBubble[0] - newOrigin[0]) *\n            (lastBubble[1] - newOrigin[1]) < 0 ?\n            1 : -1, // (1st and 3rd quarter)\n        finalAngle = gamma + alfa + beta * delta, cosA = Math.cos(finalAngle), sinA = Math.sin(finalAngle), posX = newOrigin[0] + (newOrigin[2] + nextBubble[2]) * sinA, \n        // Center of new origin + (radius1 + radius2) * sinus A\n        posY = newOrigin[1] - (newOrigin[2] + nextBubble[2]) * cosA;\n        return [\n            posX,\n            posY,\n            nextBubble[2],\n            nextBubble[3],\n            nextBubble[4]\n        ]; // The same as described before\n    }\n    render() {\n        const dataLabels = [];\n        seriesProto.render.apply(this, arguments);\n        // #10823 - dataLabels should stay visible\n        // when enabled allowOverlap.\n        if (!this.options.dataLabels.allowOverlap) {\n            this.data.forEach((point) => {\n                if (PackedBubbleSeries_isArray(point.dataLabels)) {\n                    point.dataLabels.forEach((dataLabel) => {\n                        dataLabels.push(dataLabel);\n                    });\n                }\n            });\n            // Only hide overlapping dataLabels for layouts that\n            // use simulation. Spiral packedbubble don't need\n            // additional dataLabel hiding on every simulation step\n            if (this.options.useSimulation) {\n                this.chart.hideOverlappingLabels(dataLabels);\n            }\n        }\n    }\n    /**\n     * The function responsible for resizing the bubble radius.\n     * In shortcut: it is taking the initially\n     * calculated positions of bubbles. Then it is calculating the min max\n     * of both dimensions, creating something in shape of bBox.\n     * The comparison of bBox and the size of plotArea\n     * (later it may be also the size set by customer) is giving the\n     * value how to recalculate the radius so it will match the size\n     * @private\n     */\n    resizeRadius() {\n        const chart = this.chart, positions = chart.rawPositions, min = Math.min, max = Math.max, plotLeft = chart.plotLeft, plotTop = chart.plotTop, chartHeight = chart.plotHeight, chartWidth = chart.plotWidth;\n        let minX, maxX, minY, maxY, radius;\n        minX = minY = Number.POSITIVE_INFINITY; // Set initial values\n        maxX = maxY = Number.NEGATIVE_INFINITY;\n        for (const position of positions) {\n            radius = position[2];\n            minX = min(minX, position[0] - radius);\n            // (x center-radius) is the min x value used by specific bubble\n            maxX = max(maxX, position[0] + radius);\n            minY = min(minY, position[1] - radius);\n            maxY = max(maxY, position[1] + radius);\n        }\n        const bBox = [maxX - minX, maxY - minY], spaceRatio = [\n            (chartWidth - plotLeft) / bBox[0],\n            (chartHeight - plotTop) / bBox[1]\n        ], smallerDimension = min.apply([], spaceRatio);\n        if (Math.abs(smallerDimension - 1) > 1e-10) {\n            // If bBox is considered not the same width as possible size\n            for (const position of positions) {\n                position[2] *= smallerDimension;\n            }\n            this.placeBubbles(positions);\n        }\n        else {\n            /** If no radius recalculation is needed, we need to position\n             * the whole bubbles in center of chart plotarea\n             * for this, we are adding two parameters,\n             * diffY and diffX, that are related to differences\n             * between the initial center and the bounding box\n             */\n            chart.diffY = chartHeight / 2 +\n                plotTop - minY - (maxY - minY) / 2;\n            chart.diffX = chartWidth / 2 +\n                plotLeft - minX - (maxX - minX) / 2;\n        }\n    }\n    /**\n     * The function responsible for calculating series bubble' s bBox.\n     * Needed because of exporting failure when useSimulation\n     * is set to false\n     * @private\n     */\n    seriesBox() {\n        const chart = this.chart, data = this.data, max = Math.max, min = Math.min, bBox = [\n            chart.plotLeft,\n            chart.plotLeft + chart.plotWidth,\n            chart.plotTop,\n            chart.plotTop + chart.plotHeight\n        ];\n        let radius;\n        data.forEach((p) => {\n            if (PackedBubbleSeries_defined(p.plotX) &&\n                PackedBubbleSeries_defined(p.plotY) &&\n                p.marker.radius) {\n                radius = p.marker.radius;\n                bBox[0] = min(bBox[0], p.plotX - radius);\n                bBox[1] = max(bBox[1], p.plotX + radius);\n                bBox[2] = min(bBox[2], p.plotY - radius);\n                bBox[3] = max(bBox[3], p.plotY + radius);\n            }\n        });\n        return PackedBubbleSeries_isNumber(bBox.width / bBox.height) ?\n            bBox :\n            null;\n    }\n    /**\n     * Needed because of z-indexing issue if point is added in series.group\n     * @private\n     */\n    setVisible() {\n        const series = this;\n        seriesProto.setVisible.apply(series, arguments);\n        if (series.parentNodeLayout && series.graph) {\n            if (series.visible) {\n                series.graph.show();\n                if (series.parentNode.dataLabel) {\n                    series.parentNode.dataLabel.show();\n                }\n            }\n            else {\n                series.graph.hide();\n                series.parentNodeLayout.removeElementFromCollection(series.parentNode, series.parentNodeLayout.nodes);\n                if (series.parentNode.dataLabel) {\n                    series.parentNode.dataLabel.hide();\n                }\n            }\n        }\n        else if (series.layout) {\n            if (series.visible) {\n                series.layout.addElementsToCollection(series.points, series.layout.nodes);\n            }\n            else {\n                series.points.forEach((node) => {\n                    series.layout.removeElementFromCollection(node, series.layout.nodes);\n                });\n            }\n        }\n    }\n    /**\n     * Extend the base translate method to handle bubble size,\n     * and correct positioning them.\n     * @private\n     */\n    translate() {\n        const chart = this.chart, data = this.data, index = this.index, useSimulation = this.options.useSimulation;\n        let point, radius, positions;\n        this.generatePoints();\n        // Merged data is an array with all of the data from all series\n        if (!PackedBubbleSeries_defined(chart.allDataPoints)) {\n            chart.allDataPoints = this.accumulateAllPoints();\n            // Calculate radius for all added data\n            this.getPointRadius();\n        }\n        // After getting initial radius, calculate bubble positions\n        if (useSimulation) {\n            positions = chart.allDataPoints;\n        }\n        else {\n            positions = this.placeBubbles(chart.allDataPoints);\n            this.options.draggable = false;\n        }\n        // Set the shape and arguments to be picked up in drawPoints\n        for (const position of positions) {\n            if (position[3] === index) {\n                // Update the series points with the val from positions\n                // array\n                point = data[position[4]];\n                radius = PackedBubbleSeries_pick(position[2], void 0);\n                if (!useSimulation) {\n                    point.plotX = (position[0] - chart.plotLeft +\n                        chart.diffX);\n                    point.plotY = (position[1] - chart.plotTop +\n                        chart.diffY);\n                }\n                if (PackedBubbleSeries_isNumber(radius)) {\n                    point.marker = PackedBubbleSeries_extend(point.marker, {\n                        radius,\n                        width: 2 * radius,\n                        height: 2 * radius\n                    });\n                    point.radius = radius;\n                }\n            }\n        }\n        if (useSimulation) {\n            this.deferLayout();\n        }\n        PackedBubbleSeries_fireEvent(this, 'afterTranslate');\n    }\n}\nPackedBubbleSeries.defaultOptions = PackedBubbleSeries_merge(PackedBubbleSeries_BubbleSeries.defaultOptions, PackedBubble_PackedBubbleSeriesDefaults);\nPackedBubbleSeries_extend(PackedBubbleSeries.prototype, {\n    pointClass: PackedBubble_PackedBubblePoint,\n    axisTypes: [],\n    directTouch: true,\n    forces: ['barycenter', 'repulsive'],\n    hasDraggableNodes: true,\n    invertible: false,\n    isCartesian: false,\n    noSharedTooltip: true,\n    pointArrayMap: ['value'],\n    pointValKey: 'value',\n    requireSorting: false,\n    trackerGroups: ['group', 'dataLabelsGroup', 'parentNodesGroup'],\n    initDataLabels: PackedBubbleSeries_initDataLabels,\n    alignDataLabel: seriesProto.alignDataLabel,\n    indexateNodes: PackedBubbleSeries_noop,\n    onMouseDown: Series_DragNodesComposition.onMouseDown,\n    onMouseMove: Series_DragNodesComposition.onMouseMove,\n    redrawHalo: Series_DragNodesComposition.redrawHalo,\n    searchPoint: PackedBubbleSeries_noop // Solving #12287\n});\nhighcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType('packedbubble', PackedBubbleSeries);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const PackedBubble_PackedBubbleSeries = (PackedBubbleSeries);\n\n;// ./code/es-modules/Series/Polygon/PolygonSeriesDefaults.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A polygon series can be used to draw any freeform shape in the cartesian\n * coordinate system. A fill is applied with the `color` option, and\n * stroke is applied through `lineWidth` and `lineColor` options.\n *\n * @sample {highcharts} highcharts/demo/polygon/\n *         Polygon\n * @sample {highstock} highcharts/demo/polygon/\n *         Polygon\n *\n * @extends      plotOptions.scatter\n * @since        4.1.0\n * @excluding    jitter, softThreshold, threshold, cluster, boostThreshold,\n *               boostBlending\n * @product      highcharts highstock\n * @requires     highcharts-more\n * @optionparent plotOptions.polygon\n */\nconst PolygonSeriesDefaults = {\n    marker: {\n        enabled: false,\n        states: {\n            hover: {\n                enabled: false\n            }\n        }\n    },\n    stickyTracking: false,\n    tooltip: {\n        followPointer: true,\n        pointFormat: ''\n    },\n    trackByArea: true,\n    legendSymbol: 'rectangle'\n};\n/**\n * A `polygon` series. If the [type](#series.polygon.type) option is\n * not specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.polygon\n * @excluding dataParser, dataURL, stack, boostThreshold, boostBlending\n * @product   highcharts highstock\n * @requires  highcharts-more\n * @apioption series.polygon\n */\n/**\n * An array of data points for the series. For the `polygon` series\n * type, points can be given in the following ways:\n *\n * 1. An array of numerical values. In this case, the numerical values will be\n *    interpreted as `y` options. The `x` values will be automatically\n *    calculated, either starting at 0 and incremented by 1, or from\n *    `pointStart` and `pointInterval` given in the series options. If the axis\n *    has categories, these will be used. Example:\n *    ```js\n *    data: [0, 5, 3, 5]\n *    ```\n *\n * 2. An array of arrays with 2 values. In this case, the values correspond to\n *    `x,y`. If the first value is a string, it is applied as the name of the\n *    point, and the `x` value is inferred.\n *    ```js\n *    data: [\n *        [0, 10],\n *        [1, 3],\n *        [2, 1]\n *    ]\n *    ```\n *\n * 3. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.polygon.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        y: 1,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        y: 8,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @sample {highcharts} highcharts/chart/reflow-true/\n *         Numerical values\n * @sample {highcharts} highcharts/series/data-array-of-arrays/\n *         Arrays of numeric x and y\n * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n *         Arrays of datetime x and y\n * @sample {highcharts} highcharts/series/data-array-of-name-value/\n *         Arrays of point.name and y\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<number|Array<(number|string),(number|null)>|null|*>}\n * @extends   series.line.data\n * @product   highcharts highstock\n * @apioption series.polygon.data\n */\n''; // Keeps doclets above separate\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Polygon_PolygonSeriesDefaults = (PolygonSeriesDefaults);\n\n;// ./code/es-modules/Series/Polygon/PolygonSeries.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { noop: PolygonSeries_noop } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\n\nconst { area: PolygonSeries_AreaSeries, line: LineSeries, scatter: PolygonSeries_ScatterSeries } = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default()).seriesTypes;\n\nconst { extend: PolygonSeries_extend, merge: PolygonSeries_merge } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Class\n *\n * */\nclass PolygonSeries extends PolygonSeries_ScatterSeries {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    getGraphPath() {\n        const graphPath = LineSeries.prototype.getGraphPath.call(this);\n        let i = graphPath.length + 1;\n        // Close all segments\n        while (i--) {\n            if ((i === graphPath.length || graphPath[i][0] === 'M') && i > 0) {\n                graphPath.splice(i, 0, ['Z']);\n            }\n        }\n        this.areaPath = graphPath;\n        return graphPath;\n    }\n    drawGraph() {\n        // Hack into the fill logic in area.drawGraph\n        this.options.fillColor = this.color;\n        PolygonSeries_AreaSeries.prototype.drawGraph.call(this);\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\nPolygonSeries.defaultOptions = PolygonSeries_merge(PolygonSeries_ScatterSeries.defaultOptions, Polygon_PolygonSeriesDefaults);\nPolygonSeries_extend(PolygonSeries.prototype, {\n    type: 'polygon',\n    drawTracker: LineSeries.prototype.drawTracker,\n    setStackedPoints: PolygonSeries_noop // No stacking points on polygons (#5310)\n});\nhighcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType('polygon', PolygonSeries);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Polygon_PolygonSeries = ((/* unused pure expression or super */ null && (PolygonSeries)));\n\n;// ./code/es-modules/Core/Axis/RadialAxisDefaults.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  Extension for radial axes\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/**\n     * Circular axis around the perimeter of a polar chart.\n     * @private\n     */\nconst defaultCircularOptions = {\n    gridLineWidth: 1, // Spokes\n    labels: {\n        align: void 0, // Auto\n        x: 0,\n        y: void 0 // Auto\n    },\n    maxPadding: 0,\n    minPadding: 0,\n    showLastLabel: false,\n    tickLength: 0\n};\n/**\n * The default options extend defaultYAxisOptions.\n * @private\n */\nconst defaultRadialGaugeOptions = {\n    endOnTick: false,\n    gridLineWidth: 0,\n    labels: {\n        align: 'center',\n        distance: -25,\n        x: 0,\n        y: void 0 // Auto\n    },\n    lineWidth: 1,\n    minorGridLineWidth: 0,\n    minorTickInterval: 'auto',\n    minorTickLength: 10,\n    minorTickPosition: 'inside',\n    minorTickWidth: 1,\n    startOnTick: false,\n    tickLength: 10,\n    tickPixelInterval: 100,\n    tickPosition: 'inside',\n    tickWidth: 2,\n    title: {\n        rotation: 0,\n        text: ''\n    },\n    zIndex: 2 // Behind dials, points in the series group\n};\n/**\n * Radial axis, like a spoke in a polar chart.\n * @private\n */\nconst defaultRadialOptions = {\n    /**\n     * In a polar chart, this is the angle of the Y axis in degrees, where\n     * 0 is up and 90 is right. The angle determines the position of the\n     * axis line and the labels, though the coordinate system is unaffected.\n     * Since v8.0.0 this option is also applicable for X axis (inverted\n     * polar).\n     *\n     * @sample {highcharts} highcharts/xaxis/angle/\n     *         Custom X axis' angle on inverted polar chart\n     * @sample {highcharts} highcharts/yaxis/angle/\n     *         Dual axis polar chart\n     *\n     * @type      {number}\n     * @default   0\n     * @since     4.2.7\n     * @product   highcharts\n     * @apioption xAxis.angle\n     */\n    /**\n     * Polar charts only. Whether the grid lines should draw as a polygon\n     * with straight lines between categories, or as circles. Can be either\n     * `circle` or `polygon`. Since v8.0.0 this option is also applicable\n     * for X axis (inverted polar).\n     *\n     * @sample {highcharts} highcharts/demo/polar-spider/\n     *         Polygon grid lines\n     * @sample {highcharts} highcharts/xaxis/gridlineinterpolation/\n     *         Circle and polygon on inverted polar\n     * @sample {highcharts} highcharts/yaxis/gridlineinterpolation/\n     *         Circle and polygon\n     *\n     * @type       {string}\n     * @product    highcharts\n     * @validvalue [\"circle\", \"polygon\"]\n     * @apioption  xAxis.gridLineInterpolation\n     */\n    gridLineInterpolation: 'circle',\n    gridLineWidth: 1,\n    labels: {\n        align: 'right',\n        padding: 5,\n        x: -3,\n        y: -2\n    },\n    showLastLabel: false,\n    title: {\n        x: 4,\n        text: null,\n        rotation: 90\n    }\n};\n/* *\n *\n *  Default Export\n *\n * */\nconst RadialAxisDefaults = {\n    circular: defaultCircularOptions,\n    radial: defaultRadialOptions,\n    radialGauge: defaultRadialGaugeOptions\n};\n/* harmony default export */ const Axis_RadialAxisDefaults = (RadialAxisDefaults);\n\n;// ./code/es-modules/Core/Axis/RadialAxis.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { defaultOptions: RadialAxis_defaultOptions } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\nconst { composed: RadialAxis_composed, noop: RadialAxis_noop } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\nconst { addEvent: RadialAxis_addEvent, correctFloat: RadialAxis_correctFloat, defined: RadialAxis_defined, extend: RadialAxis_extend, fireEvent: RadialAxis_fireEvent, isObject, merge: RadialAxis_merge, pick: RadialAxis_pick, pushUnique: RadialAxis_pushUnique, relativeLength: RadialAxis_relativeLength, splat: RadialAxis_splat, wrap: RadialAxis_wrap } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Composition\n *\n * */\nvar RadialAxis;\n(function (RadialAxis) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    RadialAxis.radialDefaultOptions = RadialAxis_merge(Axis_RadialAxisDefaults);\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * In case of auto connect, add one closestPointRange to the max value\n     * right before tickPositions are computed, so that ticks will extend\n     * passed the real max.\n     * @private\n     */\n    function beforeSetTickPositions() {\n        // If autoConnect is true, polygonal grid lines are connected, and\n        // one closestPointRange is added to the X axis to prevent the last\n        // point from overlapping the first.\n        this.autoConnect = (this.isCircular &&\n            typeof RadialAxis_pick(this.userMax, this.options.max) === 'undefined' &&\n            RadialAxis_correctFloat(this.endAngleRad - this.startAngleRad) ===\n                RadialAxis_correctFloat(2 * Math.PI));\n        // This will lead to add an extra tick to xAxis in order to display\n        // a correct range on inverted polar\n        if (!this.isCircular && this.chart.inverted) {\n            this.max++;\n        }\n        if (this.autoConnect) {\n            this.max += ((this.categories && 1) ||\n                this.pointRange ||\n                this.closestPointRange ||\n                0); // #1197, #2260\n        }\n    }\n    /**\n     * Augments methods for the value axis.\n     *\n     * @private\n     *\n     * @param {Highcharts.Axis} AxisClass\n     * Axis class to extend.\n     *\n     * @param {Highcharts.Tick} TickClass\n     * Tick class to use.\n     *\n     * @return {Highcharts.Axis}\n     * Axis composition.\n     */\n    function compose(AxisClass, TickClass) {\n        if (RadialAxis_pushUnique(RadialAxis_composed, 'Axis.Radial')) {\n            RadialAxis_addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n            RadialAxis_addEvent(AxisClass, 'autoLabelAlign', onAxisAutoLabelAlign);\n            RadialAxis_addEvent(AxisClass, 'destroy', onAxisDestroy);\n            RadialAxis_addEvent(AxisClass, 'init', onAxisInit);\n            RadialAxis_addEvent(AxisClass, 'initialAxisTranslation', onAxisInitialAxisTranslation);\n            RadialAxis_addEvent(TickClass, 'afterGetLabelPosition', onTickAfterGetLabelPosition);\n            RadialAxis_addEvent(TickClass, 'afterGetPosition', onTickAfterGetPosition);\n            RadialAxis_addEvent((highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()), 'setOptions', onGlobalSetOptions);\n            RadialAxis_wrap(TickClass.prototype, 'getMarkPath', wrapTickGetMarkPath);\n        }\n        return AxisClass;\n    }\n    RadialAxis.compose = compose;\n    /**\n     * Attach and return collecting function for labels in radial axis for\n     * anti-collision.\n     *\n     * @private\n     */\n    function createLabelCollector() {\n        return () => {\n            if (this.isRadial &&\n                this.tickPositions &&\n                // Undocumented option for now, but working\n                this.options.labels &&\n                this.options.labels.allowOverlap !== true) {\n                return this.tickPositions\n                    .map((pos) => this.ticks[pos]?.label)\n                    .filter((label) => Boolean(label));\n            }\n        };\n    }\n    /**\n     * Creates an empty collector function.\n     * @private\n     */\n    function createLabelCollectorHidden() {\n        return RadialAxis_noop;\n    }\n    /**\n     * Find the correct end values of crosshair in polar.\n     * @private\n     */\n    function getCrosshairPosition(options, x1, y1) {\n        const center = this.pane.center;\n        let value = options.value, shapeArgs, end, x2, y2;\n        if (this.isCircular) {\n            if (!RadialAxis_defined(value)) {\n                // When the snap is set to false\n                x2 = options.chartX || 0;\n                y2 = options.chartY || 0;\n                value = this.translate(Math.atan2(y2 - y1, x2 - x1) - this.startAngleRad, true);\n            }\n            else if (options.point) {\n                // When the snap is set to true\n                shapeArgs = options.point.shapeArgs || {};\n                if (shapeArgs.start) {\n                    // Find a true value of the point based on the\n                    // angle\n                    value = this.chart.inverted ?\n                        this.translate(options.point.rectPlotY, true) :\n                        options.point.x;\n                }\n            }\n            end = this.getPosition(value);\n            x2 = end.x;\n            y2 = end.y;\n        }\n        else {\n            if (!RadialAxis_defined(value)) {\n                x2 = options.chartX;\n                y2 = options.chartY;\n            }\n            if (RadialAxis_defined(x2) && RadialAxis_defined(y2)) {\n                // Calculate radius of non-circular axis' crosshair\n                y1 = center[1] + this.chart.plotTop;\n                value = this.translate(Math.min(Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)), center[2] / 2) - center[3] / 2, true);\n            }\n        }\n        return [value, x2 || 0, y2 || 0];\n    }\n    /**\n     * Get the path for the axis line. This method is also referenced in the\n     * getPlotLinePath method.\n     *\n     * @private\n     * @param {number} _lineWidth\n     * Line width is not used.\n     * @param {number} [radius]\n     * Radius of radial path.\n     * @param {number} [innerRadius]\n     * Inner radius of radial path.\n     */\n    function getLinePath(_lineWidth, radius, innerRadius) {\n        const center = this.pane.center, chart = this.chart, left = this.left || 0, top = this.top || 0;\n        let end, r = RadialAxis_pick(radius, center[2] / 2 - this.offset), path;\n        if (typeof innerRadius === 'undefined') {\n            innerRadius = this.horiz ? 0 : this.center && -this.center[3] / 2;\n        }\n        // In case when innerSize of pane is set, it must be included\n        if (innerRadius) {\n            r += innerRadius;\n        }\n        if (this.isCircular || typeof radius !== 'undefined') {\n            path = this.chart.renderer.symbols.arc(left + center[0], top + center[1], r, r, {\n                start: this.startAngleRad,\n                end: this.endAngleRad,\n                open: true,\n                innerR: 0\n            });\n            // Bounds used to position the plotLine label next to the line\n            // (#7117)\n            path.xBounds = [left + center[0]];\n            path.yBounds = [top + center[1] - r];\n        }\n        else {\n            end = this.postTranslate(this.angleRad, r);\n            path = [\n                [\n                    'M',\n                    this.center[0] + chart.plotLeft,\n                    this.center[1] + chart.plotTop\n                ],\n                ['L', end.x, end.y]\n            ];\n        }\n        return path;\n    }\n    /**\n     * Wrap the getOffset method to return zero offset for title or labels\n     * in a radial axis.\n     */\n    function getOffset() {\n        const axisProto = this.constructor.prototype;\n        // Call the Axis prototype method (the method we're in now is on the\n        // instance)\n        axisProto.getOffset.call(this);\n        // Title or label offsets are not counted\n        this.chart.axisOffset[this.side] = 0;\n    }\n    /**\n     * Find the path for plot bands along the radial axis.\n     *\n     * @private\n     */\n    function getPlotBandPath(from, to, options) {\n        const chart = this.chart, radiusToPixels = (radius) => {\n            if (typeof radius === 'string') {\n                let r = parseInt(radius, 10);\n                if (percentRegex.test(radius)) {\n                    r = (r * fullRadius) / 100;\n                }\n                return r;\n            }\n            return radius;\n        }, center = this.center, startAngleRad = this.startAngleRad, fullRadius = center[2] / 2, offset = Math.min(this.offset, 0), left = this.left || 0, top = this.top || 0, percentRegex = /%$/, isCircular = this.isCircular; // X axis in a polar chart\n        let start, end, angle, xOnPerimeter, open, path, outerRadius = RadialAxis_pick(radiusToPixels(options.outerRadius), fullRadius), innerRadius = radiusToPixels(options.innerRadius), thickness = RadialAxis_pick(radiusToPixels(options.thickness), 10);\n        // Polygonal plot bands\n        if (this.options.gridLineInterpolation === 'polygon') {\n            path = this.getPlotLinePath({ value: from }).concat(this.getPlotLinePath({ value: to, reverse: true }));\n            // Circular grid bands\n        }\n        else {\n            // Keep within bounds\n            from = Math.max(from, this.min);\n            to = Math.min(to, this.max);\n            const transFrom = this.translate(from), transTo = this.translate(to);\n            // Plot bands on Y axis (radial axis) - inner and outer\n            // radius depend on to and from\n            if (!isCircular) {\n                outerRadius = transFrom || 0;\n                innerRadius = transTo || 0;\n            }\n            // Handle full circle\n            if (options.shape === 'circle' || !isCircular) {\n                start = -Math.PI / 2;\n                end = Math.PI * 1.5;\n                open = true;\n            }\n            else {\n                start = startAngleRad + (transFrom || 0);\n                end = startAngleRad + (transTo || 0);\n            }\n            outerRadius -= offset; // #5283\n            thickness -= offset; // #5283\n            path = chart.renderer.symbols.arc(left + center[0], top + center[1], outerRadius, outerRadius, {\n                // Math is for reversed yAxis (#3606)\n                start: Math.min(start, end),\n                end: Math.max(start, end),\n                innerR: RadialAxis_pick(innerRadius, outerRadius - thickness),\n                open,\n                borderRadius: options.borderRadius\n            });\n            // Provide positioning boxes for the label (#6406)\n            if (isCircular) {\n                angle = (end + start) / 2;\n                xOnPerimeter = (left +\n                    center[0] +\n                    (center[2] / 2) * Math.cos(angle));\n                path.xBounds = angle > -Math.PI / 2 && angle < Math.PI / 2 ?\n                    // Right hemisphere\n                    [xOnPerimeter, chart.plotWidth] :\n                    // Left hemisphere\n                    [0, xOnPerimeter];\n                path.yBounds = [\n                    top + center[1] + (center[2] / 2) * Math.sin(angle)\n                ];\n                // Shift up or down to get the label clear of the perimeter\n                path.yBounds[0] += ((angle > -Math.PI && angle < 0) ||\n                    (angle > Math.PI)) ? -10 : 10;\n            }\n        }\n        return path;\n    }\n    /**\n     * Find the path for plot lines perpendicular to the radial axis.\n     */\n    function getPlotLinePath(options) {\n        const center = this.pane.center, chart = this.chart, inverted = chart.inverted, reverse = options.reverse, backgroundOption = this.pane.options.background, background = backgroundOption ?\n            RadialAxis_splat(backgroundOption)[0] :\n            {}, innerRadius = background.innerRadius || '0%', outerRadius = background.outerRadius || '100%', x1 = center[0] + chart.plotLeft, y1 = center[1] + chart.plotTop, height = this.height, isCrosshair = options.isCrosshair, paneInnerR = center[3] / 2;\n        let value = options.value, innerRatio, distance, a, b, otherAxis, xy, tickPositions, crossPos, path;\n        const end = this.getPosition(value);\n        let x2 = end.x, y2 = end.y;\n        // Crosshair logic\n        if (isCrosshair) {\n            // Find crosshair's position and perform destructuring\n            // assignment\n            crossPos = this.getCrosshairPosition(options, x1, y1);\n            value = crossPos[0];\n            x2 = crossPos[1];\n            y2 = crossPos[2];\n        }\n        // Spokes\n        if (this.isCircular) {\n            distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n            a = (typeof innerRadius === 'string') ?\n                RadialAxis_relativeLength(innerRadius, 1) :\n                (innerRadius / distance);\n            b = (typeof outerRadius === 'string') ?\n                RadialAxis_relativeLength(outerRadius, 1) :\n                (outerRadius / distance);\n            // To ensure that gridlines won't be displayed in area\n            // defined by innerSize in case of custom radiuses of pane's\n            // background\n            if (center && paneInnerR) {\n                innerRatio = paneInnerR / distance;\n                if (a < innerRatio) {\n                    a = innerRatio;\n                }\n                if (b < innerRatio) {\n                    b = innerRatio;\n                }\n            }\n            path = [\n                ['M', x1 + a * (x2 - x1), y1 - a * (y1 - y2)],\n                ['L', x2 - (1 - b) * (x2 - x1), y2 + (1 - b) * (y1 - y2)]\n            ];\n            // Concentric circles\n        }\n        else {\n            // Pick the right values depending if it is grid line or\n            // crosshair\n            value = this.translate(value);\n            // This is required in case when xAxis is non-circular to\n            // prevent grid lines (or crosshairs, if enabled) from\n            // rendering above the center after they supposed to be\n            // displayed below the center point\n            if (value) {\n                if (value < 0 || value > height) {\n                    value = 0;\n                }\n            }\n            if (this.options.gridLineInterpolation === 'circle') {\n                // A value of 0 is in the center, so it won't be\n                // visible, but draw it anyway for update and animation\n                // (#2366)\n                path = this.getLinePath(0, value, paneInnerR);\n                // Concentric polygons\n            }\n            else {\n                path = [];\n                // Find the other axis (a circular one) in the same pane\n                chart[inverted ? 'yAxis' : 'xAxis'].forEach((a) => {\n                    if (a.pane === this.pane) {\n                        otherAxis = a;\n                    }\n                });\n                if (otherAxis) {\n                    tickPositions = otherAxis.tickPositions;\n                    if (otherAxis.autoConnect) {\n                        tickPositions =\n                            tickPositions.concat([tickPositions[0]]);\n                    }\n                    // Reverse the positions for concatenation of polygonal\n                    // plot bands\n                    if (reverse) {\n                        tickPositions = tickPositions.slice().reverse();\n                    }\n                    if (value) {\n                        value += paneInnerR;\n                    }\n                    for (let i = 0; i < tickPositions.length; i++) {\n                        xy = otherAxis.getPosition(tickPositions[i], value);\n                        path.push(i ? ['L', xy.x, xy.y] : ['M', xy.x, xy.y]);\n                    }\n                }\n            }\n        }\n        return path;\n    }\n    /**\n     * Returns the x, y coordinate of a point given by a value and a pixel\n     * distance from center.\n     *\n     * @private\n     * @param {number} value\n     * Point value.\n     * @param {number} [length]\n     * Distance from center.\n     */\n    function getPosition(value, length) {\n        const translatedVal = this.translate(value);\n        return this.postTranslate(this.isCircular ? translatedVal : this.angleRad, // #2848\n        // In case when translatedVal is negative, the 0 value must be\n        // used instead, in order to deal with lines and labels that\n        // fall out of the visible range near the center of a pane\n        RadialAxis_pick(this.isCircular ?\n            length :\n            (translatedVal < 0 ? 0 : translatedVal), this.center[2] / 2) - this.offset);\n    }\n    /**\n     * Find the position for the axis title, by default inside the gauge.\n     */\n    function getTitlePosition() {\n        const center = this.center, chart = this.chart, titleOptions = this.options.title;\n        return {\n            x: chart.plotLeft + center[0] + (titleOptions.x || 0),\n            y: (chart.plotTop +\n                center[1] -\n                ({\n                    high: 0.5,\n                    middle: 0.25,\n                    low: 0\n                }[titleOptions.align] *\n                    center[2]) +\n                (titleOptions.y || 0))\n        };\n    }\n    /**\n     * Modify radial axis.\n     * @private\n     *\n     * @param {Highcharts.Axis} radialAxis\n     * Radial axis to modify.\n     */\n    function modify(axis) {\n        axis.beforeSetTickPositions = beforeSetTickPositions;\n        axis.createLabelCollector = createLabelCollector;\n        axis.getCrosshairPosition = getCrosshairPosition;\n        axis.getLinePath = getLinePath;\n        axis.getOffset = getOffset;\n        axis.getPlotBandPath = getPlotBandPath;\n        axis.getPlotLinePath = getPlotLinePath;\n        axis.getPosition = getPosition;\n        axis.getTitlePosition = getTitlePosition;\n        axis.postTranslate = postTranslate;\n        axis.setAxisSize = setAxisSize;\n        axis.setAxisTranslation = setAxisTranslation;\n        axis.setOptions = setOptions;\n    }\n    /**\n     * Modify radial axis as hidden.\n     * @private\n     *\n     * @param {Highcharts.Axis} radialAxis\n     * Radial axis to modify.\n     */\n    function modifyAsHidden(radialAxis) {\n        radialAxis.isHidden = true;\n        radialAxis.createLabelCollector = createLabelCollectorHidden;\n        radialAxis.getOffset = RadialAxis_noop;\n        radialAxis.redraw = renderHidden;\n        radialAxis.render = renderHidden;\n        radialAxis.setScale = RadialAxis_noop;\n        radialAxis.setCategories = RadialAxis_noop;\n        radialAxis.setTitle = RadialAxis_noop;\n    }\n    /**\n     * Finalize modification of axis instance with radial logic.\n     */\n    function onAxisAfterInit() {\n        const chart = this.chart, options = this.options, isHidden = chart.angular && this.isXAxis, pane = this.pane, paneOptions = pane?.options;\n        if (!isHidden && pane && (chart.angular || chart.polar)) {\n            const fullCircle = Math.PI * 2, \n            // Start and end angle options are given in degrees relative to\n            // top, while internal computations are in radians relative to\n            // right (like SVG).\n            start = (RadialAxis_pick(paneOptions.startAngle, 0) - 90) * Math.PI / 180, end = (RadialAxis_pick(paneOptions.endAngle, RadialAxis_pick(paneOptions.startAngle, 0) + 360) - 90) * Math.PI / 180;\n            // Y axis in polar charts\n            this.angleRad = (options.angle || 0) * Math.PI / 180;\n            // Gauges\n            this.startAngleRad = start;\n            this.endAngleRad = end;\n            this.offset = options.offset || 0;\n            // Normalize Start and End to <0, 2*PI> range\n            // (in degrees: <0,360>)\n            let normalizedStart = (start % fullCircle + fullCircle) %\n                fullCircle, normalizedEnd = (end % fullCircle + fullCircle) % fullCircle;\n            // Move normalized angles to <-PI, PI> range (<-180, 180>)\n            // to match values returned by Math.atan2()\n            if (normalizedStart > Math.PI) {\n                normalizedStart -= fullCircle;\n            }\n            if (normalizedEnd > Math.PI) {\n                normalizedEnd -= fullCircle;\n            }\n            this.normalizedStartAngleRad = normalizedStart;\n            this.normalizedEndAngleRad = normalizedEnd;\n        }\n    }\n    /**\n     * Wrap auto label align to avoid setting axis-wide rotation on radial axes.\n     * (#4920)\n     */\n    function onAxisAutoLabelAlign(e) {\n        if (this.isRadial) {\n            e.align = void 0;\n            e.preventDefault();\n        }\n    }\n    /**\n     * Remove label collector function on axis remove/update.\n     */\n    function onAxisDestroy() {\n        if (this.chart?.labelCollectors) {\n            const index = (this.labelCollector ?\n                this.chart.labelCollectors.indexOf(this.labelCollector) :\n                -1);\n            if (index >= 0) {\n                this.chart.labelCollectors.splice(index, 1);\n            }\n        }\n    }\n    /**\n     * Modify axis instance with radial logic before common axis init.\n     */\n    function onAxisInit(e) {\n        const chart = this.chart, angular = chart.angular, polar = chart.polar, isX = this.isXAxis, coll = this.coll, isHidden = angular && isX, paneIndex = e.userOptions.pane || 0, pane = this.pane = chart.pane && chart.pane[paneIndex];\n        let isCircular;\n        // Prevent changes for colorAxis\n        if (coll === 'colorAxis') {\n            this.isRadial = false;\n            return;\n        }\n        // Before prototype.init\n        if (angular) {\n            if (isHidden) {\n                modifyAsHidden(this);\n            }\n            else {\n                modify(this);\n            }\n            isCircular = !isX;\n        }\n        else if (polar) {\n            modify(this);\n            // Check which axis is circular\n            isCircular = this.horiz;\n        }\n        // Disable certain features on angular and polar axes\n        if (angular || polar) {\n            this.isRadial = true;\n            if (!this.labelCollector) {\n                this.labelCollector = this.createLabelCollector();\n            }\n            if (this.labelCollector) {\n                // Prevent overlapping axis labels (#9761)\n                chart.labelCollectors.push(this.labelCollector);\n            }\n        }\n        else {\n            this.isRadial = false;\n        }\n        // A pointer back to this axis to borrow geometry\n        if (pane && isCircular) {\n            pane.axis = this;\n        }\n        this.isCircular = isCircular;\n    }\n    /**\n     * Prepare axis translation.\n     */\n    function onAxisInitialAxisTranslation() {\n        if (this.isRadial) {\n            this.beforeSetTickPositions();\n        }\n    }\n    /**\n     * Find the center position of the label based on the distance option.\n     */\n    function onTickAfterGetLabelPosition(e) {\n        const label = this.label;\n        if (!label) {\n            return;\n        }\n        const axis = this.axis, labelBBox = label.getBBox(), labelOptions = axis.options.labels, angle = ((axis.translate(this.pos) + axis.startAngleRad +\n            Math.PI / 2) / Math.PI * 180) % 360, correctAngle = Math.round(angle), labelYPosCorrection = !RadialAxis_defined(labelOptions.y) ? -labelBBox.height * 0.3 : 0;\n        let optionsY = labelOptions.y, ret, centerSlot = 20, // 20 degrees to each side at the top and bottom\n        align = labelOptions.align, labelDir = 'end', // Direction of the label 'start' or 'end'\n        reducedAngle1 = correctAngle < 0 ?\n            correctAngle + 360 : correctAngle, reducedAngle2 = reducedAngle1, translateY = 0, translateX = 0;\n        if (axis.isRadial) { // Both X and Y axes in a polar chart\n            ret = axis.getPosition(this.pos, (axis.center[2] / 2) +\n                RadialAxis_relativeLength(RadialAxis_pick(labelOptions.distance, -25), axis.center[2] / 2, -axis.center[2] / 2));\n            // Automatically rotated\n            if (labelOptions.rotation === 'auto') {\n                label.attr({\n                    rotation: angle\n                });\n                // Vertically centered\n            }\n            else if (!RadialAxis_defined(optionsY)) {\n                optionsY = (axis.chart.renderer.fontMetrics(label).b -\n                    labelBBox.height / 2);\n            }\n            // Automatic alignment\n            if (!RadialAxis_defined(align)) {\n                if (axis.isCircular) { // Y axis\n                    if (labelBBox.width >\n                        axis.len * axis.tickInterval / (axis.max - axis.min)) { // #3506\n                        centerSlot = 0;\n                    }\n                    if (angle > centerSlot && angle < 180 - centerSlot) {\n                        align = 'left'; // Right hemisphere\n                    }\n                    else if (angle > 180 + centerSlot &&\n                        angle < 360 - centerSlot) {\n                        align = 'right'; // Left hemisphere\n                    }\n                    else {\n                        align = 'center'; // Top or bottom\n                    }\n                }\n                else {\n                    align = 'center';\n                }\n                label.attr({\n                    align: align\n                });\n            }\n            // Auto alignment for solid-gauges with two labels (#10635)\n            if (align === 'auto' &&\n                axis.tickPositions.length === 2 &&\n                axis.isCircular) {\n                // Angles reduced to 0 - 90 or 180 - 270\n                if (reducedAngle1 > 90 && reducedAngle1 < 180) {\n                    reducedAngle1 = 180 - reducedAngle1;\n                }\n                else if (reducedAngle1 > 270 && reducedAngle1 <= 360) {\n                    reducedAngle1 = 540 - reducedAngle1;\n                }\n                // Angles reduced to 0 - 180\n                if (reducedAngle2 > 180 && reducedAngle2 <= 360) {\n                    reducedAngle2 = 360 - reducedAngle2;\n                }\n                if ((axis.pane.options.startAngle === correctAngle) ||\n                    (axis.pane.options.startAngle === correctAngle + 360) ||\n                    (axis.pane.options.startAngle === correctAngle - 360)) {\n                    labelDir = 'start';\n                }\n                if ((correctAngle >= -90 && correctAngle <= 90) ||\n                    (correctAngle >= -360 && correctAngle <= -270) ||\n                    (correctAngle >= 270 && correctAngle <= 360)) {\n                    align = (labelDir === 'start') ? 'right' : 'left';\n                }\n                else {\n                    align = (labelDir === 'start') ? 'left' : 'right';\n                }\n                // For angles between (90 + n * 180) +- 20\n                if (reducedAngle2 > 70 && reducedAngle2 < 110) {\n                    align = 'center';\n                }\n                // Auto Y translation\n                if (reducedAngle1 < 15 ||\n                    (reducedAngle1 >= 180 && reducedAngle1 < 195)) {\n                    translateY = labelBBox.height * 0.3;\n                }\n                else if (reducedAngle1 >= 15 && reducedAngle1 <= 35) {\n                    translateY = labelDir === 'start' ?\n                        0 : labelBBox.height * 0.75;\n                }\n                else if (reducedAngle1 >= 195 && reducedAngle1 <= 215) {\n                    translateY = labelDir === 'start' ?\n                        labelBBox.height * 0.75 : 0;\n                }\n                else if (reducedAngle1 > 35 && reducedAngle1 <= 90) {\n                    translateY = labelDir === 'start' ?\n                        -labelBBox.height * 0.25 : labelBBox.height;\n                }\n                else if (reducedAngle1 > 215 && reducedAngle1 <= 270) {\n                    translateY = labelDir === 'start' ?\n                        labelBBox.height : -labelBBox.height * 0.25;\n                }\n                // Auto X translation\n                if (reducedAngle2 < 15) {\n                    translateX = labelDir === 'start' ?\n                        -labelBBox.height * 0.15 : labelBBox.height * 0.15;\n                }\n                else if (reducedAngle2 > 165 && reducedAngle2 <= 180) {\n                    translateX = labelDir === 'start' ?\n                        labelBBox.height * 0.15 : -labelBBox.height * 0.15;\n                }\n                label.attr({ align: align });\n                label.translate(translateX, translateY + labelYPosCorrection);\n            }\n            e.pos.x = ret.x + (labelOptions.x || 0);\n            e.pos.y = ret.y + (optionsY || 0);\n        }\n    }\n    /**\n     * Add special cases within the Tick class' methods for radial axes.\n     */\n    function onTickAfterGetPosition(e) {\n        if (this.axis.getPosition) {\n            RadialAxis_extend(e.pos, this.axis.getPosition(this.pos));\n        }\n    }\n    /**\n     * Update default options for radial axes from setOptions method.\n     */\n    function onGlobalSetOptions({ options }) {\n        if (options.xAxis) {\n            RadialAxis_merge(true, RadialAxis.radialDefaultOptions.circular, options.xAxis);\n        }\n        if (options.yAxis) {\n            RadialAxis_merge(true, RadialAxis.radialDefaultOptions.radialGauge, options.yAxis);\n        }\n    }\n    /**\n     * Translate from intermediate plotX (angle), plotY (axis.len - radius)\n     * to final chart coordinates.\n     *\n     * @private\n     * @param {number} angle\n     * Translation angle.\n     * @param {number} radius\n     * Translation radius.\n     */\n    function postTranslate(angle, radius) {\n        const chart = this.chart, center = this.center;\n        angle = this.startAngleRad + angle;\n        return {\n            x: chart.plotLeft + center[0] + Math.cos(angle) * radius,\n            y: chart.plotTop + center[1] + Math.sin(angle) * radius\n        };\n    }\n    /**\n     * Prevent setting Y axis dirty.\n     */\n    function renderHidden() {\n        this.isDirty = false;\n    }\n    /**\n     * Override the setAxisSize method to use the arc's circumference as\n     * length. This allows tickPixelInterval to apply to pixel lengths along\n     * the perimeter.\n     * @private\n     */\n    function setAxisSize() {\n        const axisProto = this.constructor.prototype;\n        let center, start;\n        axisProto.setAxisSize.call(this);\n        if (this.isRadial) {\n            // Set the center array\n            this.pane.updateCenter(this);\n            // In case when the innerSize is set in a polar chart, the axis'\n            // center cannot be a reference to pane's center\n            center = this.center = this.pane.center.slice();\n            // The sector is used in Axis.translate to compute the\n            // translation of reversed axis points (#2570)\n            if (this.isCircular) {\n                this.sector = this.endAngleRad - this.startAngleRad;\n            }\n            else {\n                // When the pane's startAngle or the axis' angle is set then\n                // new x and y values for vertical axis' center must be\n                // calculated\n                start = this.postTranslate(this.angleRad, center[3] / 2);\n                center[0] = start.x - this.chart.plotLeft;\n                center[1] = start.y - this.chart.plotTop;\n            }\n            // Axis len is used to lay out the ticks\n            this.len = this.width = this.height =\n                (center[2] - center[3]) * RadialAxis_pick(this.sector, 1) / 2;\n        }\n    }\n    /**\n     * Override setAxisTranslation by setting the translation to the\n     * difference in rotation. This allows the translate method to return\n     * angle for any given value.\n     *\n     * @private\n     */\n    function setAxisTranslation() {\n        const axisProto = this.constructor.prototype;\n        // Call uber method\n        axisProto.setAxisTranslation.call(this);\n        // Set transA and minPixelPadding\n        if (this.center) { // It's not defined the first time\n            if (this.isCircular) {\n                this.transA = (this.endAngleRad - this.startAngleRad) /\n                    ((this.max - this.min) || 1);\n            }\n            else {\n                // The transA here is the length of the axis, so in case\n                // of inner radius, the length must be decreased by it\n                this.transA = ((this.center[2] - this.center[3]) / 2) /\n                    ((this.max - this.min) || 1);\n            }\n            if (this.isXAxis) {\n                this.minPixelPadding = this.transA * this.minPointOffset;\n            }\n            else {\n                // This is a workaround for regression #2593, but categories\n                // still don't position correctly.\n                this.minPixelPadding = 0;\n            }\n        }\n    }\n    /**\n     * Merge and set options.\n     */\n    function setOptions(userOptions) {\n        const { coll } = this;\n        const { angular, inverted, polar } = this.chart;\n        let defaultPolarOptions = {};\n        if (angular) {\n            if (!this.isXAxis) {\n                defaultPolarOptions = RadialAxis_merge(RadialAxis_defaultOptions.yAxis, RadialAxis.radialDefaultOptions.radialGauge);\n            }\n        }\n        else if (polar) {\n            defaultPolarOptions = this.horiz ?\n                RadialAxis_merge(RadialAxis_defaultOptions.xAxis, RadialAxis.radialDefaultOptions.circular) :\n                RadialAxis_merge(coll === 'xAxis' ?\n                    RadialAxis_defaultOptions.xAxis :\n                    RadialAxis_defaultOptions.yAxis, RadialAxis.radialDefaultOptions.radial);\n        }\n        if (inverted && coll === 'yAxis') {\n            defaultPolarOptions.stackLabels = isObject(RadialAxis_defaultOptions.yAxis, true) ? RadialAxis_defaultOptions.yAxis.stackLabels : {};\n            defaultPolarOptions.reversedStacks = true;\n        }\n        const options = this.options = RadialAxis_merge(defaultPolarOptions, userOptions);\n        // Make sure the plotBands array is instantiated for each Axis\n        // (#2649)\n        if (!options.plotBands) {\n            options.plotBands = [];\n        }\n        RadialAxis_fireEvent(this, 'afterSetOptions');\n    }\n    /**\n     * Wrap the getMarkPath function to return the path of the radial marker.\n     */\n    function wrapTickGetMarkPath(proceed, x, y, tickLength, tickWidth, horiz, renderer) {\n        const axis = this.axis;\n        let endPoint, ret;\n        if (axis.isRadial) {\n            endPoint = axis.getPosition(this.pos, axis.center[2] / 2 + tickLength);\n            ret = [\n                'M',\n                x,\n                y,\n                'L',\n                endPoint.x,\n                endPoint.y\n            ];\n        }\n        else {\n            ret = proceed.call(this, x, y, tickLength, tickWidth, horiz, renderer);\n        }\n        return ret;\n    }\n    /* eslint-enable valid-jsdoc */\n})(RadialAxis || (RadialAxis = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Axis_RadialAxis = (RadialAxis);\n\n;// ./code/es-modules/Series/PolarComposition.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { animObject: PolarComposition_animObject } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\nconst { composed: PolarComposition_composed } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\n\n\n\nconst { addEvent: PolarComposition_addEvent, defined: PolarComposition_defined, find, isNumber: PolarComposition_isNumber, merge: PolarComposition_merge, pick: PolarComposition_pick, pushUnique: PolarComposition_pushUnique, relativeLength: PolarComposition_relativeLength, splat: PolarComposition_splat, uniqueKey: PolarComposition_uniqueKey, wrap: PolarComposition_wrap } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction clipCircle(renderer, x, y, r, innerR) {\n    const id = PolarComposition_uniqueKey(), clipPath = renderer.createElement('clipPath').attr({\n        id: id\n    }).add(renderer.defs), wrapper = innerR ?\n        renderer.arc(x, y, r, innerR, 0, 2 * Math.PI).add(clipPath) :\n        renderer.circle(x, y, r).add(clipPath);\n    wrapper.id = id;\n    wrapper.clipPath = clipPath;\n    return wrapper;\n}\n/**\n * Find correct align and vertical align based on an angle in polar chart\n * @private\n */\nfunction findAlignments(angle, options) {\n    let align, verticalAlign;\n    if (options.align === null) {\n        if (angle > 20 && angle < 160) {\n            align = 'left'; // Right hemisphere\n        }\n        else if (angle > 200 && angle < 340) {\n            align = 'right'; // Left hemisphere\n        }\n        else {\n            align = 'center'; // Top or bottom\n        }\n        options.align = align;\n    }\n    if (options.verticalAlign === null) {\n        if (angle < 45 || angle > 315) {\n            verticalAlign = 'bottom'; // Top part\n        }\n        else if (angle > 135 && angle < 225) {\n            verticalAlign = 'top'; // Bottom part\n        }\n        else {\n            verticalAlign = 'middle'; // Left or right\n        }\n        options.verticalAlign = verticalAlign;\n    }\n    return options;\n}\n/**\n * #6212 Calculate connectors for spline series in polar chart.\n * @private\n * @param {boolean} calculateNeighbours\n *        Check if connectors should be calculated for neighbour points as\n *        well allows short recurrence\n */\nfunction getConnectors(segment, index, calculateNeighbours, connectEnds) {\n    const smoothing = 1.5, denom = smoothing + 1, addedNumber = connectEnds ? 1 : 0;\n    let i, leftContX, leftContY, rightContX, rightContY, jointAngle;\n    // Calculate final index of points depending on the initial index value.\n    // Because of calculating neighbours, index may be outside segment\n    // array.\n    if (index >= 0 && index <= segment.length - 1) {\n        i = index;\n    }\n    else if (index < 0) {\n        i = segment.length - 1 + index;\n    }\n    else {\n        i = 0;\n    }\n    // 1 means control points midway between points, 2 means 1/3 from\n    // the point, 3 is 1/4 etc;\n    const prevPointInd = ((i - 1 < 0) ? segment.length - (1 + addedNumber) : i - 1), nextPointInd = (i + 1 > segment.length - 1) ? addedNumber : i + 1, previousPoint = segment[prevPointInd], nextPoint = segment[nextPointInd], previousX = previousPoint.plotX, previousY = previousPoint.plotY, nextX = nextPoint.plotX, nextY = nextPoint.plotY, plotX = segment[i].plotX, // Actual point\n    plotY = segment[i].plotY;\n    leftContX = (smoothing * plotX + previousX) / denom;\n    leftContY = (smoothing * plotY + previousY) / denom;\n    rightContX = (smoothing * plotX + nextX) / denom;\n    rightContY = (smoothing * plotY + nextY) / denom;\n    // Distance left control point\n    const dLControlPoint = Math.sqrt(Math.pow(leftContX - plotX, 2) + Math.pow(leftContY - plotY, 2)), dRControlPoint = Math.sqrt(Math.pow(rightContX - plotX, 2) + Math.pow(rightContY - plotY, 2)), leftContAngle = Math.atan2(leftContY - plotY, leftContX - plotX), rightContAngle = Math.atan2(rightContY - plotY, rightContX - plotX);\n    jointAngle = (Math.PI / 2) + ((leftContAngle + rightContAngle) / 2);\n    // Ensure the right direction, jointAngle should be in the same quadrant\n    // as leftContAngle\n    if (Math.abs(leftContAngle - jointAngle) > Math.PI / 2) {\n        jointAngle -= Math.PI;\n    }\n    // Find the corrected control points for a spline straight through the\n    // point\n    leftContX = plotX + Math.cos(jointAngle) * dLControlPoint;\n    leftContY = plotY + Math.sin(jointAngle) * dLControlPoint;\n    rightContX = plotX + Math.cos(Math.PI + jointAngle) * dRControlPoint;\n    rightContY = plotY + Math.sin(Math.PI + jointAngle) * dRControlPoint;\n    // Push current point's connectors into returned object\n    const ret = {\n        rightContX: rightContX,\n        rightContY: rightContY,\n        leftContX: leftContX,\n        leftContY: leftContY,\n        plotX: plotX,\n        plotY: plotY\n    };\n    // Calculate connectors for previous and next point and push them inside\n    // returned object\n    if (calculateNeighbours) {\n        ret.prevPointCont = getConnectors(segment, prevPointInd, false, connectEnds);\n    }\n    return ret;\n}\n/**\n *\n */\nfunction onChartAfterDrawChartBox() {\n    (this.pane || []).forEach((pane) => {\n        pane.render();\n    });\n}\n/**\n * If polar has polygonal grid lines, force start and endOnTick on radial axis\n * @private\n */\nfunction onChartAfterInit(event) {\n    const xAxis = event.args[0].xAxis, yAxis = event.args[0].yAxis, chart = event.args[0].chart;\n    if (xAxis && yAxis) {\n        if (yAxis.gridLineInterpolation === 'polygon') {\n            xAxis.startOnTick = true;\n            xAxis.endOnTick = true;\n        }\n        else if (xAxis.gridLineInterpolation === 'polygon' &&\n            chart.inverted) {\n            yAxis.startOnTick = true;\n            yAxis.endOnTick = true;\n        }\n    }\n}\n/**\n *\n */\nfunction onChartCreateAxes() {\n    if (!this.pane) {\n        this.pane = [];\n    }\n    this.options.pane = PolarComposition_splat(this.options.pane || {});\n    PolarComposition_splat(this.userOptions.pane || {}).forEach((paneOptions) => {\n        new Pane_Pane(// eslint-disable-line no-new\n        paneOptions, this);\n    }, this);\n}\n/**\n * Get selection dimensions\n * @private\n */\nfunction onPointerGetSelectionBox(event) {\n    const marker = event.args.marker, xAxis = this.chart.xAxis[0], yAxis = this.chart.yAxis[0], inverted = this.chart.inverted, radialAxis = inverted ? yAxis : xAxis, linearAxis = inverted ? xAxis : yAxis;\n    if (this.chart.polar) {\n        event.preventDefault();\n        const start = (marker.attr ? marker.attr('start') : marker.start) - radialAxis.startAngleRad, r = (marker.attr ? marker.attr('r') : marker.r), end = (marker.attr ? marker.attr('end') : marker.end) - radialAxis.startAngleRad, innerR = (marker.attr ? marker.attr('innerR') : marker.innerR);\n        event.result.x = start + radialAxis.pos;\n        event.result.width = end - start;\n        // `innerR` goes from pane's center but `toValue` computes values from\n        // top\n        event.result.y = linearAxis.len + linearAxis.pos - r;\n        event.result.height = r - innerR;\n    }\n}\n/**\n * Get attrs for Polar selection marker\n * @private\n */\nfunction onPointerGetSelectionMarkerAttrs(event) {\n    const chart = this.chart;\n    if (chart.polar && chart.hoverPane && chart.hoverPane.axis) {\n        event.preventDefault();\n        const center = chart.hoverPane.center, mouseDownX = chart.mouseDownX || 0, mouseDownY = chart.mouseDownY || 0, chartY = event.args.chartY, chartX = event.args.chartX, fullCircle = Math.PI * 2, startAngleRad = chart.hoverPane.axis.startAngleRad, endAngleRad = chart.hoverPane.axis.endAngleRad, linearAxis = chart.inverted ? chart.xAxis[0] : chart.yAxis[0], attrs = {};\n        let shapeType = 'arc';\n        attrs.x = center[0] + chart.plotLeft;\n        attrs.y = center[1] + chart.plotTop;\n        // Adjust the width of the selection marker\n        if (this.zoomHor) {\n            const paneRadRange = startAngleRad > 0 ?\n                endAngleRad - startAngleRad :\n                Math.abs(startAngleRad) + Math.abs(endAngleRad);\n            let startAngle = Math.atan2(mouseDownY - chart.plotTop - center[1], mouseDownX - chart.plotLeft - center[0]) - startAngleRad, endAngle = Math.atan2(chartY - chart.plotTop - center[1], chartX - chart.plotLeft - center[0]) - startAngleRad;\n            attrs.r = center[2] / 2;\n            attrs.innerR = center[3] / 2;\n            if (startAngle <= 0) {\n                startAngle += fullCircle;\n            }\n            if (endAngle <= 0) {\n                endAngle += fullCircle;\n            }\n            if (endAngle < startAngle) {\n                // Swapping angles\n                endAngle = [startAngle, startAngle = endAngle][0];\n            }\n            // If pane is not a full circle we need to let users zoom to the min\n            // We do this by swapping angles after pointer crosses\n            // middle angle (swapAngle) of the missing slice of the pane\n            if (paneRadRange < fullCircle) {\n                const swapAngle = endAngleRad + (fullCircle - paneRadRange) / 2;\n                if (startAngleRad + endAngle > swapAngle) {\n                    endAngle = startAngle;\n                    startAngle = startAngleRad <= 0 ? startAngleRad : 0;\n                }\n            }\n            const start = attrs.start =\n                Math.max(startAngle + startAngleRad, startAngleRad), end = attrs.end =\n                Math.min(endAngle + startAngleRad, endAngleRad);\n            // Adjust the selection shape for polygon grid lines\n            if (linearAxis.options.gridLineInterpolation === 'polygon') {\n                const radialAxis = chart.hoverPane.axis, min = start - radialAxis.startAngleRad + radialAxis.pos, max = end - start;\n                let path = linearAxis.getPlotLinePath({\n                    value: linearAxis.max\n                }), pathStart = radialAxis.toValue(min), pathEnd = radialAxis.toValue(min + max);\n                if (pathStart < radialAxis.getExtremes().min) {\n                    const { min, max } = radialAxis.getExtremes();\n                    pathStart = max - (min - pathStart);\n                }\n                if (pathEnd < radialAxis.getExtremes().min) {\n                    const { min, max } = radialAxis.getExtremes();\n                    pathEnd = max - (min - pathEnd);\n                }\n                if (pathEnd < pathStart) {\n                    // Swapping angles\n                    pathEnd = [pathStart, pathStart = pathEnd][0];\n                }\n                // Get trimmed path\n                path = trimPath(path, pathStart, pathEnd, radialAxis);\n                // Add center to the path\n                path.push([\n                    'L', center[0] + chart.plotLeft,\n                    chart.plotTop + center[1]\n                ]);\n                attrs.d = path;\n                shapeType = 'path';\n            }\n        }\n        // Adjust the height of the selection marker\n        if (this.zoomVert) {\n            const linearAxis = chart.inverted ? chart.xAxis[0] : chart.yAxis[0];\n            let innerR = Math.sqrt(Math.pow(mouseDownX - chart.plotLeft - center[0], 2) +\n                Math.pow(mouseDownY - chart.plotTop - center[1], 2)), r = Math.sqrt(Math.pow(chartX - chart.plotLeft - center[0], 2) +\n                Math.pow(chartY - chart.plotTop - center[1], 2));\n            if (r < innerR) {\n                // Swapping angles\n                innerR = [r, r = innerR][0];\n            }\n            if (r > center[2] / 2) {\n                r = center[2] / 2;\n            }\n            if (innerR < center[3] / 2) {\n                innerR = center[3] / 2;\n            }\n            if (!this.zoomHor) {\n                attrs.start = startAngleRad;\n                attrs.end = endAngleRad;\n            }\n            attrs.r = r;\n            attrs.innerR = innerR;\n            if (linearAxis.options.gridLineInterpolation === 'polygon') {\n                const end = linearAxis.toValue(linearAxis.len + linearAxis.pos - innerR), start = linearAxis.toValue(linearAxis.len + linearAxis.pos - r), path = linearAxis.getPlotLinePath({\n                    value: start\n                }).concat(linearAxis.getPlotLinePath({\n                    value: end,\n                    reverse: true\n                }));\n                attrs.d = path;\n                shapeType = 'path';\n            }\n        }\n        if (this.zoomHor &&\n            this.zoomVert &&\n            linearAxis.options.gridLineInterpolation === 'polygon') {\n            const radialAxis = chart.hoverPane.axis, start = attrs.start || 0, end = attrs.end || 0, min = start - radialAxis.startAngleRad + radialAxis.pos, max = end - start, pathStart = radialAxis.toValue(min), pathEnd = radialAxis.toValue(min + max);\n            // Trim path\n            if (attrs.d instanceof Array) {\n                let innerPath = attrs.d.slice(0, attrs.d.length / 2), outerPath = attrs.d.slice(attrs.d.length / 2, attrs.d.length);\n                outerPath = [...outerPath].reverse();\n                const radialAxis = chart.hoverPane.axis;\n                innerPath = trimPath(innerPath, pathStart, pathEnd, radialAxis);\n                outerPath = trimPath(outerPath, pathStart, pathEnd, radialAxis);\n                if (outerPath) {\n                    (outerPath[0][0]) = 'L';\n                }\n                outerPath = [...outerPath].reverse();\n                attrs.d = innerPath.concat(outerPath);\n                shapeType = 'path';\n            }\n        }\n        event.attrs = attrs;\n        event.shapeType = shapeType;\n    }\n}\n/**\n * @private\n */\nfunction onSeriesAfterInit() {\n    const chart = this.chart;\n    if (chart.polar) {\n        this.polar = new PolarAdditions(this);\n        // Add flags that identifies radial inverted series\n        if (chart.inverted) {\n            this.isRadialSeries = true;\n            if (this.is('column')) {\n                this.isRadialBar = true;\n            }\n        }\n    }\n}\n/**\n * Extend translate. The plotX and plotY values are computed as if the polar\n * chart were a cartesian plane, where plotX denotes the angle in radians\n * and (yAxis.len - plotY) is the pixel distance from center.\n * @private\n */\nfunction onSeriesAfterTranslate() {\n    if (this.chart.polar && this.xAxis) {\n        const series = this, { xAxis, yAxis } = series, chart = series.chart;\n        // Prepare k-d-tree handling. It searches by angle (clientX) in\n        // case of shared tooltip, and by two dimensional distance in case\n        // of non-shared.\n        series.kdByAngle = chart.tooltip && chart.tooltip.shared;\n        if (series.kdByAngle || chart.inverted) {\n            series.searchPoint = searchPointByAngleOrInverted;\n        }\n        else {\n            series.options.findNearestPointBy = 'xy';\n        }\n        const points = series.points;\n        let i = points.length;\n        while (i--) {\n            // Translate plotX, plotY from angle and radius to true plot\n            // coordinates\n            if (!series.is('column') && !series.is('columnrange')) {\n                series.polar.toXY(points[i]);\n            }\n            // Treat points below Y axis min as null (#10082)\n            if (!chart.hasParallelCoordinates &&\n                !series.yAxis.reversed) {\n                if (PolarComposition_pick(points[i].y, Number.MIN_VALUE) < yAxis.min ||\n                    points[i].x < xAxis.min ||\n                    points[i].x > xAxis.max) {\n                    // Destroy markers\n                    points[i].isNull = true;\n                    // Destroy column's graphic\n                    points[i].plotY = NaN;\n                }\n                else {\n                    // Restore isNull flag\n                    points[i].isNull =\n                        points[i].isValid && !points[i].isValid();\n                }\n            }\n        }\n        // Perform clip after render\n        if (!this.hasClipCircleSetter) {\n            this.hasClipCircleSetter = !!series.eventsToUnbind.push(PolarComposition_addEvent(series, 'afterRender', function () {\n                let circ;\n                if (chart.polar && this.options.clip !== false) {\n                    // For clipping purposes there is a need for\n                    // coordinates from the absolute center\n                    circ = this.yAxis.pane.center;\n                    if (!this.clipCircle) {\n                        this.clipCircle = clipCircle(chart.renderer, circ[0], circ[1], circ[2] / 2, circ[3] / 2);\n                    }\n                    else {\n                        this.clipCircle.animate({\n                            x: circ[0],\n                            y: circ[1],\n                            r: circ[2] / 2,\n                            innerR: circ[3] / 2\n                        });\n                    }\n                    this.group.clip(this.clipCircle);\n                    this.setClip = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).noop;\n                }\n            }));\n        }\n    }\n}\n/**\n * Search a k-d tree by the point angle (used for shared tooltips in polar) or\n * the inverted point.\n * charts\n * @private\n */\nfunction searchPointByAngleOrInverted(e) {\n    const series = this, chart = series.chart, xAxis = series.xAxis, yAxis = series.yAxis, center = xAxis.pane && xAxis.pane.center, plotX = e.chartX - (center && center[0] || 0) - chart.plotLeft, plotY = e.chartY - (center && center[1] || 0) - chart.plotTop;\n    const searchKDTreePoint = chart.inverted ? {\n        clientX: e.chartX - yAxis.pos,\n        plotY: e.chartY - xAxis.pos\n    } : {\n        clientX: 180 + (Math.atan2(plotX, plotY) * (-180 / Math.PI))\n    };\n    return series.searchKDTree(searchKDTreePoint);\n}\n/**\n * Trim polygonal path\n * @private\n */\nfunction trimPath(path, start, end, radialAxis) {\n    const tickInterval = radialAxis.tickInterval, ticks = radialAxis.tickPositions;\n    let lastTick = find(ticks, (tick) => tick >= end), firstTick = find([...ticks].reverse(), (tick) => tick <= start);\n    if (!PolarComposition_defined(lastTick)) {\n        lastTick = ticks[ticks.length - 1];\n    }\n    if (!PolarComposition_defined(firstTick)) {\n        firstTick = ticks[0];\n        lastTick += tickInterval;\n        path[0][0] = 'L';\n        // To do: figure out why -3 or -2\n        path.unshift(path[path.length - 3]);\n    }\n    path = path.slice(ticks.indexOf(firstTick), ticks.indexOf(lastTick) + 1);\n    path[0][0] = 'M';\n    return path;\n}\n/**\n * Extend chart.get to also search in panes. Used internally in\n * responsiveness and chart.update.\n * @private\n */\nfunction wrapChartGet(proceed, id) {\n    return find(this.pane || [], (pane) => (\n    // @todo remove id or define id type:\n    pane.options.id === id)) || proceed.call(this, id);\n}\n/**\n * Align column data labels outside the columns. #1199.\n * @private\n */\nfunction wrapColumnSeriesAlignDataLabel(proceed, point, dataLabel, options, alignTo, isNew) {\n    const chart = this.chart, inside = PolarComposition_pick(options.inside, !!this.options.stacking);\n    let angle, shapeArgs, labelPos;\n    if (chart.polar) {\n        angle = point.rectPlotX / Math.PI * 180;\n        if (!chart.inverted) {\n            // Align nicely outside the perimeter of the columns\n            options = findAlignments(angle, options);\n        }\n        else { // Required corrections for data labels of inverted bars\n            // The plotX and plotY are correctly set therefore they\n            // don't need to be swapped (inverted argument is false)\n            this.forceDL = chart.isInsidePlot(point.plotX, point.plotY);\n            // Checks if labels should be positioned inside\n            if (inside && point.shapeArgs) {\n                shapeArgs = point.shapeArgs;\n                // Calculates pixel positions for a data label to be\n                // inside\n                labelPos =\n                    this.yAxis.postTranslate(\n                    // Angle\n                    ((shapeArgs.start || 0) + (shapeArgs.end || 0)) / 2 -\n                        this\n                            .xAxis.startAngleRad, \n                    // Radius\n                    point.barX +\n                        point.pointWidth / 2);\n                alignTo = PolarComposition_merge(alignTo, {\n                    x: labelPos.x - chart.plotLeft,\n                    y: labelPos.y - chart.plotTop\n                });\n            }\n            else if (point.tooltipPos) {\n                alignTo = PolarComposition_merge(alignTo, {\n                    x: point.tooltipPos[0],\n                    y: point.tooltipPos[1]\n                });\n            }\n            options.align = PolarComposition_pick(options.align, 'center');\n            options.verticalAlign =\n                PolarComposition_pick(options.verticalAlign, 'middle');\n        }\n        highcharts_Series_commonjs_highcharts_Series_commonjs2_highcharts_Series_root_Highcharts_Series_default().prototype.alignDataLabel.call(this, point, dataLabel, options, alignTo, isNew);\n        // Hide label of a point (only inverted) that is outside the\n        // visible y range\n        if (this.isRadialBar && point.shapeArgs &&\n            point.shapeArgs.start === point.shapeArgs.end) {\n            dataLabel.hide();\n        }\n        else {\n            dataLabel.show();\n        }\n    }\n    else {\n        proceed.call(this, point, dataLabel, options, alignTo, isNew);\n    }\n}\n/**\n * Extend the column prototype's translate method\n * @private\n */\nfunction onAfterColumnTranslate() {\n    const series = this, options = series.options, stacking = options.stacking, chart = series.chart, xAxis = series.xAxis, yAxis = series.yAxis, reversed = yAxis.reversed, center = yAxis.center, startAngleRad = xAxis.startAngleRad, endAngleRad = xAxis.endAngleRad, visibleRange = endAngleRad - startAngleRad;\n    let threshold = options.threshold, thresholdAngleRad = 0, points, point, i, yMin, yMax, start = 0, end = 0, tooltipPos, pointX, pointY, stackValues, stack, barX, innerR, r;\n    // Postprocess plot coordinates\n    if (xAxis.isRadial) {\n        points = series.points;\n        i = points.length;\n        yMin = yAxis.translate(yAxis.min);\n        yMax = yAxis.translate(yAxis.max);\n        threshold = options.threshold || 0;\n        if (chart.inverted) {\n            // Finding a correct threshold\n            if (PolarComposition_isNumber(threshold)) {\n                thresholdAngleRad = yAxis.translate(threshold);\n                // Checks if threshold is outside the visible range\n                if (PolarComposition_defined(thresholdAngleRad)) {\n                    if (thresholdAngleRad < 0) {\n                        thresholdAngleRad = 0;\n                    }\n                    else if (thresholdAngleRad > visibleRange) {\n                        thresholdAngleRad = visibleRange;\n                    }\n                    // Adding start angle offset\n                    series.translatedThreshold =\n                        thresholdAngleRad + startAngleRad;\n                }\n            }\n        }\n        while (i--) {\n            point = points[i];\n            barX = point.barX;\n            pointX = point.x;\n            pointY = point.y;\n            point.shapeType = 'arc';\n            if (chart.inverted) {\n                point.plotY = yAxis.translate(pointY);\n                if (stacking && yAxis.stacking) {\n                    stack = yAxis.stacking.stacks[(pointY < 0 ? '-' : '') +\n                        series.stackKey];\n                    if (series.visible && stack && stack[pointX]) {\n                        if (!point.isNull) {\n                            stackValues = stack[pointX].points[series.getStackIndicator(void 0, pointX, series.index).key];\n                            // Translating to radial values\n                            start = yAxis.translate(stackValues[0]);\n                            end = yAxis.translate(stackValues[1]);\n                            // If starting point is beyond the\n                            // range, set it to 0\n                            if (PolarComposition_defined(start)) {\n                                start = highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().clamp(start, 0, visibleRange);\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Initial start and end angles for radial bar\n                    start = thresholdAngleRad;\n                    end = point.plotY;\n                }\n                if (start > end) {\n                    // Swapping start and end\n                    end = [start, start = end][0];\n                }\n                // Prevent from rendering point outside the\n                // acceptable circular range\n                if (!reversed) {\n                    if (start < yMin) {\n                        start = yMin;\n                    }\n                    else if (end > yMax) {\n                        end = yMax;\n                    }\n                    else if (end < yMin || start > yMax) {\n                        start = end = 0;\n                    }\n                }\n                else {\n                    if (end > yMin) {\n                        end = yMin;\n                    }\n                    else if (start < yMax) {\n                        start = yMax;\n                    }\n                    else if (start > yMin || end < yMax) {\n                        start = end = visibleRange;\n                    }\n                }\n                if (yAxis.min > yAxis.max) {\n                    start = end = reversed ? visibleRange : 0;\n                }\n                start += startAngleRad;\n                end += startAngleRad;\n                if (center) {\n                    point.barX = barX += center[3] / 2;\n                }\n                // In case when radius, inner radius or both are negative, a\n                // point is rendered but partially or as a center point\n                innerR = Math.max(barX, 0);\n                r = Math.max(barX + point.pointWidth, 0);\n                // Handle border radius\n                const brOption = options.borderRadius, brValue = typeof brOption === 'object' ?\n                    brOption.radius : brOption, borderRadius = PolarComposition_relativeLength(brValue || 0, r - innerR);\n                point.shapeArgs = {\n                    x: center[0],\n                    y: center[1],\n                    r,\n                    innerR,\n                    start,\n                    end,\n                    borderRadius\n                };\n                // Fade out the points if not inside the polar \"plot area\"\n                point.opacity = start === end ? 0 : void 0;\n                // A correct value for stacked or not fully visible\n                // point\n                point.plotY = (PolarComposition_defined(series.translatedThreshold) &&\n                    (start < series.translatedThreshold ? start : end)) -\n                    startAngleRad;\n                // Non-inverted polar columns\n            }\n            else {\n                start = barX + startAngleRad;\n                point.shapeArgs = series.polar.arc(point.yBottom, point.plotY, start, start + point.pointWidth);\n                // Disallow border radius on polar columns for now. It would\n                // take some refactoring to work with the `scope` and the\n                // `where` options. Those options would require that only\n                // individual corners be rounded, in practice individual calls\n                // to applyBorderRadius from the extended `arc` function. That\n                // would be a viable solution, though it would not be perfect\n                // until we implemented rounding that included the lower points\n                // in the stack, like we have for cartesian column.\n                point.shapeArgs.borderRadius = 0;\n            }\n            // Provided a correct coordinates for the tooltip\n            series.polar.toXY(point);\n            if (chart.inverted) {\n                tooltipPos = yAxis.postTranslate(point.rectPlotY, barX + point.pointWidth / 2);\n                point.tooltipPos = [\n                    tooltipPos.x - chart.plotLeft,\n                    tooltipPos.y - chart.plotTop\n                ];\n            }\n            else {\n                point.tooltipPos = [point.plotX, point.plotY];\n            }\n            if (center) {\n                point.ttBelow = point.plotY > center[1];\n            }\n        }\n    }\n}\n/**\n * Extend getSegmentPath to allow connecting ends across 0 to provide a\n * closed circle in line-like series.\n * @private\n */\nfunction wrapLineSeriesGetGraphPath(proceed, points) {\n    const series = this;\n    let firstValid, popLastPoint;\n    // Connect the path\n    if (this.chart.polar) {\n        points = points || this.points;\n        // Append first valid point in order to connect the ends\n        for (let i = 0; i < points.length; i++) {\n            if (!points[i].isNull) {\n                firstValid = i;\n                break;\n            }\n        }\n        /**\n         * Polar charts only. Whether to connect the ends of a line series\n         * plot across the extremes.\n         *\n         * @sample {highcharts} highcharts/plotoptions/line-connectends-false/\n         *         Do not connect\n         *\n         * @type      {boolean}\n         * @since     2.3.0\n         * @product   highcharts\n         * @apioption plotOptions.series.connectEnds\n         */\n        if (this.options.connectEnds !== false &&\n            typeof firstValid !== 'undefined') {\n            this.connectEnds = true; // Re-used in splines\n            points.splice(points.length, 0, points[firstValid]);\n            popLastPoint = true;\n        }\n        // For area charts, pseudo points are added to the graph, now we\n        // need to translate these\n        points.forEach((point) => {\n            if (typeof point.polarPlotY === 'undefined') {\n                series.polar.toXY(point);\n            }\n        });\n    }\n    // Run uber method\n    const ret = proceed.apply(this, [].slice.call(arguments, 1));\n    // #6212 points.splice method is adding points to an array. In case of\n    // areaspline getGraphPath method is used two times and in both times\n    // points are added to an array. That is why points.pop is used, to get\n    // unmodified points.\n    if (popLastPoint) {\n        points.pop();\n    }\n    return ret;\n}\n/**\n * Extend getCoordinates to prepare for polar axis values\n * @private\n */\nfunction wrapPointerGetCoordinates(proceed, e) {\n    const chart = this.chart;\n    let ret = {\n        xAxis: [],\n        yAxis: []\n    };\n    if (chart.polar) {\n        chart.axes.forEach((axis) => {\n            // Skip colorAxis\n            if (axis.coll === 'colorAxis') {\n                return;\n            }\n            const isXAxis = axis.isXAxis, center = axis.center, x = e.chartX - center[0] - chart.plotLeft, y = e.chartY - center[1] - chart.plotTop;\n            ret[isXAxis ? 'xAxis' : 'yAxis'].push({\n                axis: axis,\n                value: axis.translate(isXAxis ?\n                    Math.PI - Math.atan2(x, y) : // Angle\n                    // distance from center\n                    Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)), true)\n            });\n        });\n    }\n    else {\n        ret = proceed.call(this, e);\n    }\n    return ret;\n}\n/**\n * Prevent zooming on mobile devices\n * @private\n */\nfunction wrapPointerPinch(proceed, e) {\n    if (this.chart.polar) {\n        return;\n    }\n    proceed.call(this, e);\n}\n/**\n * Define the animate method for regular series\n * @private\n */\nfunction wrapSeriesAnimate(proceed, init) {\n    const series = this, chart = this.chart, group = this.group, markerGroup = this.markerGroup, center = this.xAxis && this.xAxis.center, plotLeft = chart.plotLeft, plotTop = chart.plotTop;\n    let animation = this.options.animation, attribs, paneInnerR, graphic, shapeArgs, r, innerR;\n    // Specific animation for polar charts\n    if (chart.polar) {\n        if (series.isRadialBar) {\n            if (!init) {\n                // Run the pie animation for radial bars\n                series.startAngleRad = PolarComposition_pick(series.translatedThreshold, series.xAxis.startAngleRad);\n                highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().seriesTypes.pie.prototype.animate.call(series, init);\n            }\n        }\n        else {\n            animation = PolarComposition_animObject(animation);\n            // A different animation needed for column like series\n            if (series.is('column')) {\n                if (!init) {\n                    paneInnerR = center[3] / 2;\n                    series.points.forEach((point) => {\n                        graphic = point.graphic;\n                        shapeArgs = point.shapeArgs;\n                        r = shapeArgs && shapeArgs.r;\n                        innerR = shapeArgs && shapeArgs.innerR;\n                        if (graphic && shapeArgs) {\n                            // Start values\n                            graphic.attr({\n                                r: paneInnerR,\n                                innerR: paneInnerR\n                            });\n                            // Animate\n                            graphic.animate({\n                                r: r,\n                                innerR: innerR\n                            }, series.options.animation);\n                        }\n                    });\n                }\n            }\n            else {\n                // Initialize the animation\n                if (init) {\n                    // Scale down the group and place it in the center\n                    attribs = {\n                        translateX: center[0] + plotLeft,\n                        translateY: center[1] + plotTop,\n                        scaleX: 0.001,\n                        scaleY: 0.001\n                    };\n                    group.attr(attribs);\n                    if (markerGroup) {\n                        markerGroup.attr(attribs);\n                    }\n                    // Run the animation\n                }\n                else {\n                    attribs = {\n                        translateX: plotLeft,\n                        translateY: plotTop,\n                        scaleX: 1,\n                        scaleY: 1\n                    };\n                    group.animate(attribs, animation);\n                    if (markerGroup) {\n                        markerGroup.animate(attribs, animation);\n                    }\n                }\n            }\n        }\n        // For non-polar charts, revert to the basic animation\n    }\n    else {\n        proceed.call(this, init);\n    }\n}\n/**\n * Overridden method for calculating a spline from one point to the next\n * @private\n */\nfunction wrapSplineSeriesGetPointSpline(proceed, segment, point, i) {\n    let ret, connectors;\n    if (this.chart.polar) {\n        // `moveTo` or `lineTo`\n        if (!i) {\n            ret = ['M', point.plotX, point.plotY];\n        }\n        else { // Curve from last point to this\n            connectors = getConnectors(segment, i, true, this.connectEnds);\n            const rightContX = connectors.prevPointCont &&\n                connectors.prevPointCont.rightContX;\n            const rightContY = connectors.prevPointCont &&\n                connectors.prevPointCont.rightContY;\n            ret = [\n                'C',\n                PolarComposition_isNumber(rightContX) ? rightContX : connectors.plotX,\n                PolarComposition_isNumber(rightContY) ? rightContY : connectors.plotY,\n                PolarComposition_isNumber(connectors.leftContX) ?\n                    connectors.leftContX :\n                    connectors.plotX,\n                PolarComposition_isNumber(connectors.leftContY) ?\n                    connectors.leftContY :\n                    connectors.plotY,\n                connectors.plotX,\n                connectors.plotY\n            ];\n        }\n    }\n    else {\n        ret = proceed.call(this, segment, point, i);\n    }\n    return ret;\n}\n/**\n * Extend the point pos method to calculate point positions for the polar chart.\n * @private\n */\nfunction wrapPointPos(proceed, chartCoordinates, plotY = this.plotY) {\n    if (!this.destroyed) {\n        const { plotX, series } = this, { chart } = series;\n        if (chart.polar &&\n            PolarComposition_isNumber(plotX) &&\n            PolarComposition_isNumber(plotY)) {\n            return [\n                plotX + (chartCoordinates ? chart.plotLeft : 0),\n                plotY + (chartCoordinates ? chart.plotTop : 0)\n            ];\n        }\n        return proceed.call(this, chartCoordinates, plotY);\n    }\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * Extensions for polar charts. Additionally, much of the geometry required\n * for polar charts is gathered in RadialAxes.js.\n * @private\n */\nclass PolarAdditions {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    static compose(AxisClass, ChartClass, PointerClass, SeriesClass, TickClass, PointClass, AreaSplineRangeSeriesClass, ColumnSeriesClass, LineSeriesClass, SplineSeriesClass) {\n        Pane_Pane.compose(ChartClass, PointerClass);\n        Axis_RadialAxis.compose(AxisClass, TickClass);\n        if (PolarComposition_pushUnique(PolarComposition_composed, 'Polar')) {\n            const chartProto = ChartClass.prototype, pointProto = PointClass.prototype, pointerProto = PointerClass.prototype, seriesProto = SeriesClass.prototype;\n            PolarComposition_addEvent(ChartClass, 'afterDrawChartBox', onChartAfterDrawChartBox);\n            PolarComposition_addEvent(ChartClass, 'createAxes', onChartCreateAxes);\n            PolarComposition_addEvent(ChartClass, 'init', onChartAfterInit);\n            PolarComposition_wrap(chartProto, 'get', wrapChartGet);\n            PolarComposition_wrap(pointerProto, 'getCoordinates', wrapPointerGetCoordinates);\n            PolarComposition_wrap(pointerProto, 'pinch', wrapPointerPinch);\n            PolarComposition_addEvent(PointerClass, 'getSelectionMarkerAttrs', onPointerGetSelectionMarkerAttrs);\n            PolarComposition_addEvent(PointerClass, 'getSelectionBox', onPointerGetSelectionBox);\n            PolarComposition_addEvent(SeriesClass, 'afterInit', onSeriesAfterInit);\n            PolarComposition_addEvent(SeriesClass, 'afterTranslate', onSeriesAfterTranslate, { order: 2 } // Run after translation of ||-coords\n            );\n            PolarComposition_addEvent(SeriesClass, 'afterColumnTranslate', onAfterColumnTranslate, { order: 4 });\n            PolarComposition_wrap(seriesProto, 'animate', wrapSeriesAnimate);\n            PolarComposition_wrap(pointProto, 'pos', wrapPointPos);\n            if (ColumnSeriesClass) {\n                const columnProto = ColumnSeriesClass.prototype;\n                PolarComposition_wrap(columnProto, 'alignDataLabel', wrapColumnSeriesAlignDataLabel);\n                PolarComposition_wrap(columnProto, 'animate', wrapSeriesAnimate);\n            }\n            if (LineSeriesClass) {\n                const lineProto = LineSeriesClass.prototype;\n                PolarComposition_wrap(lineProto, 'getGraphPath', wrapLineSeriesGetGraphPath);\n            }\n            if (SplineSeriesClass) {\n                const splineProto = SplineSeriesClass.prototype;\n                PolarComposition_wrap(splineProto, 'getPointSpline', wrapSplineSeriesGetPointSpline);\n                if (AreaSplineRangeSeriesClass) {\n                    const areaSplineRangeProto = AreaSplineRangeSeriesClass.prototype;\n                    // #6430 Areasplinerange series use unwrapped getPointSpline\n                    // method, so we need to set this method again.\n                    areaSplineRangeProto.getPointSpline =\n                        splineProto.getPointSpline;\n                }\n            }\n        }\n    }\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(series) {\n        this.series = series;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    arc(low, high, start, end) {\n        const series = this.series, center = series.xAxis.center, len = series.yAxis.len, paneInnerR = center[3] / 2;\n        let r = len - high + paneInnerR, innerR = len - PolarComposition_pick(low, len) + paneInnerR;\n        // Prevent columns from shooting through the pane's center\n        if (series.yAxis.reversed) {\n            if (r < 0) {\n                r = paneInnerR;\n            }\n            if (innerR < 0) {\n                innerR = paneInnerR;\n            }\n        }\n        // Return a new shapeArgs\n        return {\n            x: center[0],\n            y: center[1],\n            r: r,\n            innerR: innerR,\n            start: start,\n            end: end\n        };\n    }\n    /**\n     * Translate a point's plotX and plotY from the internal angle and radius\n     * measures to true plotX, plotY coordinates\n     * @private\n     */\n    toXY(point) {\n        const series = this.series, chart = series.chart, xAxis = series.xAxis, yAxis = series.yAxis, plotX = point.plotX, inverted = chart.inverted, pointY = point.y;\n        let plotY = point.plotY, radius = inverted ? plotX : yAxis.len - plotY, clientX;\n        // Corrected y position of inverted series other than column\n        if (inverted && series && !series.isRadialBar) {\n            point.plotY = plotY =\n                PolarComposition_isNumber(pointY) ? yAxis.translate(pointY) : 0;\n        }\n        // Save rectangular plotX, plotY for later computation\n        point.rectPlotX = plotX;\n        point.rectPlotY = plotY;\n        if (yAxis.center) {\n            radius += yAxis.center[3] / 2;\n        }\n        // Find the polar plotX and plotY. Avoid setting plotX and plotY to NaN\n        // when plotY is undefined (#15438)\n        if (PolarComposition_isNumber(plotY)) {\n            const xy = inverted ? yAxis.postTranslate(plotY, radius) :\n                xAxis.postTranslate(plotX, radius);\n            point.plotX = point.polarPlotX = xy.x - chart.plotLeft;\n            point.plotY = point.polarPlotY = xy.y - chart.plotTop;\n        }\n        // If shared tooltip, record the angle in degrees in order to align X\n        // points. Otherwise, use a standard k-d tree to get the nearest point\n        // in two dimensions.\n        if (series.kdByAngle) {\n            clientX = ((plotX / Math.PI * 180) + xAxis.pane.options.startAngle) % 360;\n            if (clientX < 0) { // #2665\n                clientX += 360;\n            }\n            point.clientX = clientX;\n        }\n        else {\n            point.clientX = point.plotX;\n        }\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const PolarComposition = (PolarAdditions);\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"StackItem\"],\"commonjs\":[\"highcharts\",\"StackItem\"],\"commonjs2\":[\"highcharts\",\"StackItem\"],\"root\":[\"Highcharts\",\"StackItem\"]}\nvar highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_ = __webpack_require__(184);\nvar highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_default = /*#__PURE__*/__webpack_require__.n(highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_);\n;// ./code/es-modules/Core/Axis/WaterfallAxis.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { composed: WaterfallAxis_composed } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\n\nconst { addEvent: WaterfallAxis_addEvent, objectEach: WaterfallAxis_objectEach, pushUnique: WaterfallAxis_pushUnique } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Namespace\n *\n * */\nvar WaterfallAxis;\n(function (WaterfallAxis) {\n    /* *\n     *\n     *  Interfaces\n     *\n     * */\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    function compose(AxisClass, ChartClass) {\n        if (WaterfallAxis_pushUnique(WaterfallAxis_composed, 'Axis.Waterfall')) {\n            WaterfallAxis_addEvent(AxisClass, 'init', onAxisInit);\n            WaterfallAxis_addEvent(AxisClass, 'afterBuildStacks', onAxisAfterBuildStacks);\n            WaterfallAxis_addEvent(AxisClass, 'afterRender', onAxisAfterRender);\n            WaterfallAxis_addEvent(ChartClass, 'beforeRedraw', onChartBeforeRedraw);\n        }\n    }\n    WaterfallAxis.compose = compose;\n    /**\n     * @private\n     */\n    function onAxisAfterBuildStacks() {\n        const axis = this, stacks = axis.waterfall?.stacks;\n        if (stacks) {\n            stacks.changed = false;\n            delete stacks.alreadyChanged;\n        }\n    }\n    /**\n     * @private\n     */\n    function onAxisAfterRender() {\n        const axis = this, stackLabelOptions = axis.options.stackLabels;\n        if (stackLabelOptions?.enabled &&\n            axis.waterfall?.stacks) {\n            axis.waterfall.renderStackTotals();\n        }\n    }\n    /**\n     * @private\n     */\n    function onAxisInit() {\n        const axis = this;\n        if (!axis.waterfall) {\n            axis.waterfall = new Composition(axis);\n        }\n    }\n    /**\n     * @private\n     */\n    function onChartBeforeRedraw() {\n        const axes = this.axes, series = this.series;\n        for (const serie of series) {\n            if (serie.options.stacking) {\n                for (const axis of axes) {\n                    if (!axis.isXAxis && axis.waterfall) {\n                        axis.waterfall.stacks.changed = true;\n                    }\n                }\n                break;\n            }\n        }\n    }\n    /* *\n     *\n     *  Classes\n     *\n     * */\n    class Composition {\n        /* *\n         *\n         *  Constructors\n         *\n         * */\n        constructor(axis) {\n            this.axis = axis;\n            this.stacks = {\n                changed: false\n            };\n        }\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Calls StackItem.prototype.render function that creates and renders\n         * stack total label for each waterfall stack item.\n         *\n         * @private\n         * @function Highcharts.Axis#renderWaterfallStackTotals\n         */\n        renderStackTotals() {\n            const yAxis = this.axis, waterfallStacks = yAxis.waterfall?.stacks, stackTotalGroup = yAxis.stacking?.stackTotalGroup, dummyStackItem = new (highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_default())(yAxis, yAxis.options.stackLabels || {}, false, 0, void 0);\n            this.dummyStackItem = dummyStackItem;\n            // Render each waterfall stack total\n            if (stackTotalGroup) {\n                WaterfallAxis_objectEach(waterfallStacks, (type) => {\n                    WaterfallAxis_objectEach(type, (stackItem, key) => {\n                        dummyStackItem.total = stackItem.stackTotal;\n                        dummyStackItem.x = +key;\n                        if (stackItem.label) {\n                            dummyStackItem.label = stackItem.label;\n                        }\n                        highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_default().prototype.render.call(dummyStackItem, stackTotalGroup);\n                        stackItem.label = dummyStackItem.label;\n                        delete dummyStackItem.label;\n                    });\n                });\n            }\n            dummyStackItem.total = null;\n        }\n    }\n    WaterfallAxis.Composition = Composition;\n})(WaterfallAxis || (WaterfallAxis = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Axis_WaterfallAxis = (WaterfallAxis);\n\n;// ./code/es-modules/Series/Waterfall/WaterfallPoint.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { isNumber: WaterfallPoint_isNumber } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n/* *\n *\n *  Class\n *\n * */\nclass WaterfallPoint extends (highcharts_Series_types_column_commonjs_highcharts_Series_types_column_commonjs2_highcharts_Series_types_column_root_Highcharts_Series_types_column_default()).prototype.pointClass {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    getClassName() {\n        let className = highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_default().prototype.getClassName.call(this);\n        if (this.isSum) {\n            className += ' highcharts-sum';\n        }\n        else if (this.isIntermediateSum) {\n            className += ' highcharts-intermediate-sum';\n        }\n        return className;\n    }\n    // Pass the null test in ColumnSeries.translate.\n    isValid() {\n        return (WaterfallPoint_isNumber(this.y) ||\n            this.isSum ||\n            Boolean(this.isIntermediateSum));\n    }\n}\n/* *\n *\n *  Export\n *\n * */\n/* harmony default export */ const Waterfall_WaterfallPoint = (WaterfallPoint);\n\n;// ./code/es-modules/Series/Waterfall/WaterfallSeriesDefaults.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A waterfall chart displays sequentially introduced positive or negative\n * values in cumulative columns.\n *\n * @sample highcharts/demo/waterfall/\n *         Waterfall chart\n * @sample highcharts/plotoptions/waterfall-inverted/\n *         Horizontal (inverted) waterfall\n * @sample highcharts/plotoptions/waterfall-stacked/\n *         Stacked waterfall chart\n *\n * @extends      plotOptions.column\n * @excluding    boostThreshold, boostBlending\n * @product      highcharts\n * @requires     highcharts-more\n * @optionparent plotOptions.waterfall\n */\nconst WaterfallSeriesDefaults = {\n    /**\n     * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @apioption plotOptions.waterfall.color\n     */\n    /**\n     * The color used specifically for positive point columns. When not\n     * specified, the general series color is used.\n     *\n     * In styled mode, the waterfall colors can be set with the\n     * `.highcharts-point-negative`, `.highcharts-sum` and\n     * `.highcharts-intermediate-sum` classes.\n     *\n     * @sample {highcharts} highcharts/demo/waterfall/\n     *         Waterfall\n     *\n     * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @product   highcharts\n     * @apioption plotOptions.waterfall.upColor\n     */\n    dataLabels: {\n        inside: true\n    },\n    /**\n     * The width of the line connecting waterfall columns.\n     *\n     * @product highcharts\n     */\n    lineWidth: 1,\n    /**\n     * The color of the line that connects columns in a waterfall series.\n     *\n     * In styled mode, the stroke can be set with the `.highcharts-graph`\n     * class.\n     *\n     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @since   3.0\n     * @product highcharts\n     */\n    lineColor: \"#333333\" /* Palette.neutralColor80 */,\n    /**\n     * A name for the dash style to use for the line connecting the columns\n     * of the waterfall series. Possible values: Dash, DashDot, Dot,\n     * LongDash, LongDashDot, LongDashDotDot, ShortDash, ShortDashDot,\n     * ShortDashDotDot, ShortDot, Solid\n     *\n     * In styled mode, the stroke dash-array can be set with the\n     * `.highcharts-graph` class.\n     *\n     * @type    {Highcharts.DashStyleValue}\n     * @since   3.0\n     * @product highcharts\n     */\n    dashStyle: 'Dot',\n    /**\n     * The color of the border of each waterfall column.\n     *\n     * In styled mode, the border stroke can be set with the\n     * `.highcharts-point` class.\n     *\n     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n     * @since   3.0\n     * @product highcharts\n     */\n    borderColor: \"#333333\" /* Palette.neutralColor80 */,\n    states: {\n        hover: {\n            lineWidthPlus: 0 // #3126\n        }\n    }\n};\n/**\n * A `waterfall` series. If the [type](#series.waterfall.type) option\n * is not specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.waterfall\n * @excluding dataParser, dataURL, boostThreshold, boostBlending\n * @product   highcharts\n * @requires  highcharts-more\n * @apioption series.waterfall\n */\n/**\n * An array of data points for the series. For the `waterfall` series\n * type, points can be given in the following ways:\n *\n * 1. An array of numerical values. In this case, the numerical values will be\n *    interpreted as `y` options. The `x` values will be automatically\n *    calculated, either starting at 0 and incremented by 1, or from\n *    `pointStart` and `pointInterval` given in the series options. If the axis\n *    has categories, these will be used. Example:\n *    ```js\n *    data: [0, 5, 3, 5]\n *    ```\n *\n * 2. An array of arrays with 2 values. In this case, the values correspond to\n *    `x,y`. If the first value is a string, it is applied as the name of the\n *    point, and the `x` value is inferred.\n *    ```js\n *    data: [\n *        [0, 7],\n *        [1, 8],\n *        [2, 3]\n *    ]\n *    ```\n *\n * 3. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the series'\n *    [turboThreshold](#series.waterfall.turboThreshold), this option is not\n *    available.\n *    ```js\n *    data: [{\n *        x: 1,\n *        y: 8,\n *        name: \"Point2\",\n *        color: \"#00FF00\"\n *    }, {\n *        x: 1,\n *        y: 8,\n *        name: \"Point1\",\n *        color: \"#FF00FF\"\n *    }]\n *    ```\n *\n * @sample {highcharts} highcharts/chart/reflow-true/\n *         Numerical values\n * @sample {highcharts} highcharts/series/data-array-of-arrays/\n *         Arrays of numeric x and y\n * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n *         Arrays of datetime x and y\n * @sample {highcharts} highcharts/series/data-array-of-name-value/\n *         Arrays of point.name and y\n * @sample {highcharts} highcharts/series/data-array-of-objects/\n *         Config objects\n *\n * @type      {Array<number|Array<(number|string),(number|null)>|null|*>}\n * @extends   series.line.data\n * @excluding marker\n * @product   highcharts\n * @apioption series.waterfall.data\n */\n/**\n * When this property is true, the points acts as a summary column for\n * the values added or subtracted since the last intermediate sum,\n * or since the start of the series. The `y` value is ignored.\n *\n * @sample {highcharts} highcharts/demo/waterfall/\n *         Waterfall\n *\n * @type      {boolean}\n * @default   false\n * @product   highcharts\n * @apioption series.waterfall.data.isIntermediateSum\n */\n/**\n * When this property is true, the point display the total sum across\n * the entire series. The `y` value is ignored.\n *\n * @sample {highcharts} highcharts/demo/waterfall/\n *         Waterfall\n *\n * @type      {boolean}\n * @default   false\n * @product   highcharts\n * @apioption series.waterfall.data.isSum\n */\n''; // Adds doclets above to transpiled file\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Waterfall_WaterfallSeriesDefaults = (WaterfallSeriesDefaults);\n\n;// ./code/es-modules/Series/Waterfall/WaterfallSeries.js\n/* *\n *\n *  (c) 2010-2025 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { column: WaterfallSeries_ColumnSeries, line: WaterfallSeries_LineSeries } = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default()).seriesTypes;\n\nconst { addEvent: WaterfallSeries_addEvent, arrayMax: WaterfallSeries_arrayMax, arrayMin: WaterfallSeries_arrayMin, correctFloat: WaterfallSeries_correctFloat, crisp: WaterfallSeries_crisp, extend: WaterfallSeries_extend, isNumber: WaterfallSeries_isNumber, merge: WaterfallSeries_merge, objectEach: WaterfallSeries_objectEach, pick: WaterfallSeries_pick } = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n\n\n\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Returns true if the key is a direct property of the object.\n * @private\n * @param {*} obj\n * Object with property to test\n * @param {string} key\n * Property key to test\n * @return {boolean}\n * Whether it is a direct property\n */\nfunction ownProp(obj, key) {\n    return Object.hasOwnProperty.call(obj, key);\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * Waterfall series type.\n *\n * @private\n */\nclass WaterfallSeries extends WaterfallSeries_ColumnSeries {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    // After generating points, set y-values for all sums.\n    generatePoints() {\n        // Parent call:\n        WaterfallSeries_ColumnSeries.prototype.generatePoints.apply(this);\n        const processedYData = this.getColumn('y', true);\n        for (let i = 0, len = this.points.length; i < len; i++) {\n            const point = this.points[i], y = processedYData[i];\n            // Override point value for sums. #3710 Update point does not\n            // propagate to sum\n            if (WaterfallSeries_isNumber(y) && (point.isIntermediateSum || point.isSum)) {\n                point.y = WaterfallSeries_correctFloat(y);\n            }\n        }\n    }\n    // Call default processData then override yData to reflect waterfall's\n    // extremes on yAxis\n    processData(force) {\n        const series = this, options = series.options, yData = series.getColumn('y'), \n        // #3710 Update point does not propagate to sum\n        points = options.data, dataLength = yData.length, threshold = options.threshold || 0;\n        let point, subSum, sum, dataMin, dataMax, y;\n        sum = subSum = dataMin = dataMax = 0;\n        for (let i = 0; i < dataLength; i++) {\n            y = yData[i];\n            point = points?.[i] || {};\n            if (y === 'sum' || point.isSum) {\n                yData[i] = WaterfallSeries_correctFloat(sum);\n            }\n            else if (y === 'intermediateSum' ||\n                point.isIntermediateSum) {\n                yData[i] = WaterfallSeries_correctFloat(subSum);\n                subSum = 0;\n            }\n            else {\n                sum += y;\n                subSum += y;\n            }\n            dataMin = Math.min(sum, dataMin);\n            dataMax = Math.max(sum, dataMax);\n        }\n        super.processData.call(this, force);\n        // Record extremes only if stacking was not set:\n        if (!options.stacking) {\n            series.dataMin = dataMin + threshold;\n            series.dataMax = dataMax;\n        }\n        return;\n    }\n    // Return y value or string if point is sum\n    toYData(pt) {\n        if (pt.isSum) {\n            return 'sum';\n        }\n        if (pt.isIntermediateSum) {\n            return 'intermediateSum';\n        }\n        return pt.y;\n    }\n    // Postprocess mapping between options and SVG attributes\n    pointAttribs(point, state) {\n        const upColor = this.options.upColor;\n        // Set or reset up color (#3710, update to negative)\n        if (upColor && !point.options.color && WaterfallSeries_isNumber(point.y)) {\n            point.color = point.y > 0 ? upColor : void 0;\n        }\n        const attr = WaterfallSeries_ColumnSeries.prototype.pointAttribs.call(this, point, state);\n        // The dashStyle option in waterfall applies to the graph, not\n        // the points\n        delete attr.dashstyle;\n        return attr;\n    }\n    // Return an empty path initially, because we need to know the stroke-width\n    // in order to set the final path.\n    getGraphPath() {\n        return [['M', 0, 0]];\n    }\n    // Draw columns' connector lines\n    getCrispPath() {\n        const // Skip points where Y is not a number (#18636)\n        data = this.data.filter((d) => WaterfallSeries_isNumber(d.y)), yAxis = this.yAxis, length = data.length, graphLineWidth = this.graph?.strokeWidth() || 0, reversedXAxis = this.xAxis.reversed, reversedYAxis = this.yAxis.reversed, stacking = this.options.stacking, path = [];\n        for (let i = 1; i < length; i++) {\n            if (!( // Skip lines that would pass over the null point (#18636)\n            this.options.connectNulls ||\n                WaterfallSeries_isNumber(this.data[data[i].index - 1].y))) {\n                continue;\n            }\n            const box = data[i].box, prevPoint = data[i - 1], prevY = prevPoint.y || 0, prevBox = data[i - 1].box;\n            if (!box || !prevBox) {\n                continue;\n            }\n            const prevStack = yAxis.waterfall?.stacks[this.stackKey], isPos = prevY > 0 ? -prevBox.height : 0;\n            if (prevStack && prevBox && box) {\n                const prevStackX = prevStack[i - 1];\n                // Y position of the connector is different when series are\n                // stacked, yAxis is reversed and it also depends on point's\n                // value\n                let yPos;\n                if (stacking) {\n                    const connectorThreshold = prevStackX.connectorThreshold;\n                    yPos = WaterfallSeries_crisp(yAxis.translate(connectorThreshold, false, true, false, true) +\n                        (reversedYAxis ? isPos : 0), graphLineWidth);\n                }\n                else {\n                    yPos = WaterfallSeries_crisp(prevBox.y + (prevPoint.minPointLengthOffset || 0), graphLineWidth);\n                }\n                path.push([\n                    'M',\n                    (prevBox.x || 0) + (reversedXAxis ?\n                        0 :\n                        (prevBox.width || 0)),\n                    yPos\n                ], [\n                    'L',\n                    (box.x || 0) + (reversedXAxis ?\n                        (box.width || 0) :\n                        0),\n                    yPos\n                ]);\n            }\n            if (prevBox &&\n                path.length &&\n                ((!stacking && prevY < 0 && !reversedYAxis) ||\n                    (prevY > 0 && reversedYAxis))) {\n                const nextLast = path[path.length - 2];\n                if (nextLast && typeof nextLast[2] === 'number') {\n                    nextLast[2] += prevBox.height || 0;\n                }\n                const last = path[path.length - 1];\n                if (last && typeof last[2] === 'number') {\n                    last[2] += prevBox.height || 0;\n                }\n            }\n        }\n        return path;\n    }\n    // The graph is initially drawn with an empty definition, then updated with\n    // crisp rendering.\n    drawGraph() {\n        WaterfallSeries_LineSeries.prototype.drawGraph.call(this);\n        if (this.graph) {\n            this.graph.attr({\n                d: this.getCrispPath()\n            });\n        }\n    }\n    // Waterfall has stacking along the x-values too.\n    setStackedPoints(axis) {\n        const series = this, options = series.options, waterfallStacks = axis.waterfall?.stacks, seriesThreshold = options.threshold || 0, stackKey = series.stackKey, xData = series.getColumn('x'), yData = series.getColumn('y'), xLength = xData.length;\n        let stackThreshold = seriesThreshold, interSum = stackThreshold, actualStackX, totalYVal = 0, actualSum = 0, prevSum = 0, statesLen, posTotal, negTotal, xPoint, yVal, x, alreadyChanged, changed;\n        // Function responsible for calculating correct values for stackState\n        // array of each stack item. The arguments are: firstS - the value for\n        // the first state, nextS - the difference between the previous and the\n        // newest state, sInx - counter used in the for that updates each state\n        // when necessary, sOff - offset that must be added to each state when\n        // they need to be updated (if point isn't a total sum)\n        // eslint-disable-next-line require-jsdoc\n        const calculateStackState = (firstS, nextS, sInx, sOff) => {\n            if (actualStackX) {\n                if (!statesLen) {\n                    actualStackX.stackState[0] = firstS;\n                    statesLen = actualStackX.stackState.length;\n                }\n                else {\n                    for (sInx; sInx < statesLen; sInx++) {\n                        actualStackX.stackState[sInx] += sOff;\n                    }\n                }\n                actualStackX.stackState.push(actualStackX.stackState[statesLen - 1] + nextS);\n            }\n        };\n        if (axis.stacking && waterfallStacks) {\n            // Code responsible for creating stacks for waterfall series\n            if (series.reserveSpace()) {\n                changed = waterfallStacks.changed;\n                alreadyChanged = waterfallStacks.alreadyChanged;\n                // In case of a redraw, stack for each x value must be emptied\n                // (only for the first series in a specific stack) and\n                // recalculated once more\n                if (alreadyChanged &&\n                    alreadyChanged.indexOf(stackKey) < 0) {\n                    changed = true;\n                }\n                if (!waterfallStacks[stackKey]) {\n                    waterfallStacks[stackKey] = {};\n                }\n                const actualStack = waterfallStacks[stackKey];\n                if (actualStack) {\n                    for (let i = 0; i < xLength; i++) {\n                        x = xData[i];\n                        if (!actualStack[x] || changed) {\n                            actualStack[x] = {\n                                negTotal: 0,\n                                posTotal: 0,\n                                stackTotal: 0,\n                                threshold: 0,\n                                stateIndex: 0,\n                                stackState: [],\n                                label: ((changed &&\n                                    actualStack[x]) ?\n                                    actualStack[x].label :\n                                    void 0)\n                            };\n                        }\n                        actualStackX = actualStack[x];\n                        yVal = yData[i];\n                        if (yVal >= 0) {\n                            actualStackX.posTotal += yVal;\n                        }\n                        else {\n                            actualStackX.negTotal += yVal;\n                        }\n                        // Points do not exist yet, so raw data is used\n                        xPoint = options.data[i];\n                        posTotal = actualStackX.absolutePos =\n                            actualStackX.posTotal;\n                        negTotal = actualStackX.absoluteNeg =\n                            actualStackX.negTotal;\n                        actualStackX.stackTotal = posTotal + negTotal;\n                        statesLen = actualStackX.stackState.length;\n                        if (xPoint?.isIntermediateSum) {\n                            calculateStackState(prevSum, actualSum, 0, prevSum);\n                            prevSum = actualSum;\n                            actualSum = seriesThreshold;\n                            // Swapping values\n                            stackThreshold ^= interSum;\n                            interSum ^= stackThreshold;\n                            stackThreshold ^= interSum;\n                        }\n                        else if (xPoint?.isSum) {\n                            calculateStackState(seriesThreshold, totalYVal, statesLen, 0);\n                            stackThreshold = seriesThreshold;\n                        }\n                        else {\n                            calculateStackState(stackThreshold, yVal, 0, totalYVal);\n                            if (xPoint) {\n                                totalYVal += yVal;\n                                actualSum += yVal;\n                            }\n                        }\n                        actualStackX.stateIndex++;\n                        actualStackX.threshold = stackThreshold;\n                        stackThreshold += actualStackX.stackTotal;\n                    }\n                }\n                waterfallStacks.changed = false;\n                if (!waterfallStacks.alreadyChanged) {\n                    waterfallStacks.alreadyChanged = [];\n                }\n                waterfallStacks.alreadyChanged.push(stackKey);\n            }\n        }\n    }\n    // Extremes for a non-stacked series are recorded in processData.\n    // In case of stacking, use Series.stackedYData to calculate extremes.\n    getExtremes() {\n        const stacking = this.options.stacking, yAxis = this.yAxis, waterfallStacks = yAxis.waterfall?.stacks;\n        let stackedYNeg, stackedYPos;\n        if (stacking && waterfallStacks) {\n            stackedYNeg = this.stackedYNeg = [];\n            stackedYPos = this.stackedYPos = [];\n            // The visible y range can be different when stacking is set to\n            // overlap and different when it's set to normal\n            if (stacking === 'overlap') {\n                WaterfallSeries_objectEach(waterfallStacks[this.stackKey], function (stackX) {\n                    stackedYNeg.push(WaterfallSeries_arrayMin(stackX.stackState));\n                    stackedYPos.push(WaterfallSeries_arrayMax(stackX.stackState));\n                });\n            }\n            else {\n                WaterfallSeries_objectEach(waterfallStacks[this.stackKey], function (stackX) {\n                    stackedYNeg.push(stackX.negTotal + stackX.threshold);\n                    stackedYPos.push(stackX.posTotal + stackX.threshold);\n                });\n            }\n            return {\n                dataMin: WaterfallSeries_arrayMin(stackedYNeg),\n                dataMax: WaterfallSeries_arrayMax(stackedYPos)\n            };\n        }\n        // When not stacking, data extremes have already been computed in the\n        // processData function.\n        return {\n            dataMin: this.dataMin,\n            dataMax: this.dataMax\n        };\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\nWaterfallSeries.defaultOptions = WaterfallSeries_merge(WaterfallSeries_ColumnSeries.defaultOptions, Waterfall_WaterfallSeriesDefaults);\nWaterfallSeries.compose = Axis_WaterfallAxis.compose;\nWaterfallSeries_extend(WaterfallSeries.prototype, {\n    pointValKey: 'y',\n    // Property needed to prevent lines between the columns from disappearing\n    // when negativeColor is used.\n    showLine: true,\n    pointClass: Waterfall_WaterfallPoint\n});\n// Translate data points from raw values\nWaterfallSeries_addEvent(WaterfallSeries, 'afterColumnTranslate', function () {\n    const series = this, { options, points, yAxis } = series, minPointLength = WaterfallSeries_pick(options.minPointLength, 5), halfMinPointLength = minPointLength / 2, threshold = options.threshold || 0, stacking = options.stacking, actualStack = yAxis.waterfall?.stacks[series.stackKey], processedYData = series.getColumn('y', true);\n    let previousIntermediate = threshold, previousY = threshold, y, total, yPos, hPos;\n    for (let i = 0; i < points.length; i++) {\n        const point = points[i], yValue = processedYData[i], shapeArgs = point.shapeArgs, box = WaterfallSeries_extend({\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        }, shapeArgs || {});\n        point.box = box;\n        const range = [0, yValue], pointY = point.y || 0;\n        // Code responsible for correct positions of stacked points\n        // starts here\n        if (stacking) {\n            if (actualStack) {\n                const actualStackX = actualStack[i];\n                if (stacking === 'overlap') {\n                    total =\n                        actualStackX.stackState[actualStackX.stateIndex--];\n                    y = pointY >= 0 ? total : total - pointY;\n                    if (ownProp(actualStackX, 'absolutePos')) {\n                        delete actualStackX.absolutePos;\n                    }\n                    if (ownProp(actualStackX, 'absoluteNeg')) {\n                        delete actualStackX.absoluteNeg;\n                    }\n                }\n                else {\n                    if (pointY >= 0) {\n                        total = actualStackX.threshold +\n                            actualStackX.posTotal;\n                        actualStackX.posTotal -= pointY;\n                        y = total;\n                    }\n                    else {\n                        total = actualStackX.threshold +\n                            actualStackX.negTotal;\n                        actualStackX.negTotal -= pointY;\n                        y = total - pointY;\n                    }\n                    if (!actualStackX.posTotal) {\n                        if (WaterfallSeries_isNumber(actualStackX.absolutePos) &&\n                            ownProp(actualStackX, 'absolutePos')) {\n                            actualStackX.posTotal =\n                                actualStackX.absolutePos;\n                            delete actualStackX.absolutePos;\n                        }\n                    }\n                    if (!actualStackX.negTotal) {\n                        if (WaterfallSeries_isNumber(actualStackX.absoluteNeg) &&\n                            ownProp(actualStackX, 'absoluteNeg')) {\n                            actualStackX.negTotal =\n                                actualStackX.absoluteNeg;\n                            delete actualStackX.absoluteNeg;\n                        }\n                    }\n                }\n                if (!point.isSum) {\n                    // The connectorThreshold property is later used in\n                    // getCrispPath function to draw a connector line in a\n                    // correct place\n                    actualStackX.connectorThreshold =\n                        actualStackX.threshold + actualStackX.stackTotal;\n                }\n                if (yAxis.reversed) {\n                    yPos = (pointY >= 0) ? (y - pointY) : (y + pointY);\n                    hPos = y;\n                }\n                else {\n                    yPos = y;\n                    hPos = y - pointY;\n                }\n                point.below = yPos <= threshold;\n                box.y = yAxis.translate(yPos, false, true, false, true);\n                box.height = Math.abs(box.y -\n                    yAxis.translate(hPos, false, true, false, true));\n                const dummyStackItem = yAxis.waterfall?.dummyStackItem;\n                if (dummyStackItem) {\n                    dummyStackItem.x = i;\n                    dummyStackItem.label = actualStack[i].label;\n                    dummyStackItem.setOffset(series.pointXOffset || 0, series.barW || 0, series.stackedYNeg[i], series.stackedYPos[i], void 0, this.xAxis);\n                }\n            }\n        }\n        else {\n            // Up points\n            y = Math.max(previousY, previousY + pointY) + range[0];\n            box.y = yAxis.translate(y, false, true, false, true);\n            // Sum points\n            if (point.isSum) {\n                box.y = yAxis.translate(range[1], false, true, false, true);\n                box.height = Math.min(yAxis.translate(range[0], false, true, false, true), yAxis.len) - box.y; // #4256\n                point.below = range[1] <= threshold;\n            }\n            else if (point.isIntermediateSum) {\n                if (pointY >= 0) {\n                    yPos = range[1] + previousIntermediate;\n                    hPos = previousIntermediate;\n                }\n                else {\n                    yPos = previousIntermediate;\n                    hPos = range[1] + previousIntermediate;\n                }\n                if (yAxis.reversed) {\n                    // Swapping values\n                    yPos ^= hPos;\n                    hPos ^= yPos;\n                    yPos ^= hPos;\n                }\n                box.y = yAxis.translate(yPos, false, true, false, true);\n                box.height = Math.abs(box.y -\n                    Math.min(yAxis.translate(hPos, false, true, false, true), yAxis.len));\n                previousIntermediate += range[1];\n                point.below = yPos <= threshold;\n                // If it's not the sum point, update previous stack end position\n                // and get shape height (#3886)\n            }\n            else {\n                box.height = yValue > 0 ?\n                    yAxis.translate(previousY, false, true, false, true) - box.y :\n                    yAxis.translate(previousY, false, true, false, true) - yAxis.translate(previousY - yValue, false, true, false, true);\n                previousY += yValue;\n                point.below = previousY < threshold;\n            }\n            // #3952 Negative sum or intermediate sum not rendered correctly\n            if (box.height < 0) {\n                box.y += box.height;\n                box.height *= -1;\n            }\n        }\n        point.plotY = box.y;\n        point.yBottom = box.y + box.height;\n        if (box.height <= minPointLength && !point.isNull) {\n            box.height = minPointLength;\n            box.y -= halfMinPointLength;\n            point.yBottom = box.y + box.height;\n            point.plotY = box.y;\n            if (pointY < 0) {\n                point.minPointLengthOffset = -halfMinPointLength;\n            }\n            else {\n                point.minPointLengthOffset = halfMinPointLength;\n            }\n        }\n        else {\n            // #8024, empty gaps in the line for null data\n            if (point.isNull) {\n                box.width = 0;\n            }\n            point.minPointLengthOffset = 0;\n        }\n        // Correct tooltip placement (#3014)\n        const tooltipY = point.plotY + (point.negative ? box.height : 0);\n        if (point.below) { // #15334\n            point.plotY += box.height;\n        }\n        if (point.tooltipPos) {\n            if (series.chart.inverted) {\n                point.tooltipPos[0] = yAxis.len - tooltipY;\n            }\n            else {\n                point.tooltipPos[1] = tooltipY;\n            }\n        }\n        // Check point position after recalculation (#16788)\n        point.isInside = this.isPointInside(point);\n        // Crisp vector coordinates\n        const crispBottom = WaterfallSeries_crisp(point.yBottom, series.borderWidth);\n        box.y = WaterfallSeries_crisp(box.y, series.borderWidth);\n        box.height = crispBottom - box.y;\n        WaterfallSeries_merge(true, point.shapeArgs, box);\n    }\n}, { order: 2 });\nhighcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType('waterfall', WaterfallSeries);\n/* *\n *\n * Export\n *\n * */\n/* harmony default export */ const Waterfall_WaterfallSeries = (WaterfallSeries);\n\n;// ./code/es-modules/masters/highcharts-more.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst G = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\nG.RadialAxis = Axis_RadialAxis;\nBubble_BubbleSeries.compose(G.Axis, G.Chart, G.Legend);\nPackedBubble_PackedBubbleSeries.compose(G.Axis, G.Chart, G.Legend);\nPane_Pane.compose(G.Chart, G.Pointer);\nPolarComposition.compose(G.Axis, G.Chart, G.Pointer, G.Series, G.Tick, G.Point, (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default()).seriesTypes.areasplinerange, (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default()).seriesTypes.column, (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default()).seriesTypes.line, (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default()).seriesTypes.spline);\nWaterfall_WaterfallSeries.compose(G.Axis, G.Chart);\n/* harmony default export */ const highcharts_more_src = (G);\n\n__webpack_exports__ = __webpack_exports__[\"default\"];\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});"],"names":["root","factory","exports","module","define","amd","amd1","window","__WEBPACK_EXTERNAL_MODULE__944__","__WEBPACK_EXTERNAL_MODULE__512__","__WEBPACK_EXTERNAL_MODULE__820__","__WEBPACK_EXTERNAL_MODULE__448__","__WEBPACK_EXTERNAL_MODULE__984__","__WEBPACK_EXTERNAL_MODULE__260__","__WEBPACK_EXTERNAL_MODULE__620__","__WEBPACK_EXTERNAL_MODULE__960__","__WEBPACK_EXTERNAL_MODULE__28__","__WEBPACK_EXTERNAL_MODULE__184__","CenteredUtilities","RadialAxis","WaterfallAxis","__webpack_modules__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","__webpack_exports__","highcharts_more_src","highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_","highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default","highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_","highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default","highcharts_Series_commonjs_highcharts_Series_commonjs2_highcharts_Series_root_Highcharts_Series_","highcharts_Series_commonjs_highcharts_Series_commonjs2_highcharts_Series_root_Highcharts_Series_default","deg2rad","fireEvent","isNumber","pick","relativeLength","getCenter","options","chart","slicingRoom","slicedOffset","plotWidth","plotHeight","centerOption","center","smallestSize","Math","min","thickness","handleSlicingRoom","size","innerSize","i","value","parseFloat","positions","angular","test","getStartAndEndRadians","start","end","startAngle","endAngle","Series_CenteredUtilities","addEvent","correctFloat","defined","PaneComposition_pick","chartGetHoverPane","eventArgs","hoverPane","pane","forEach","isInsidePane","chartX","plotLeft","chartY","plotTop","x","y","insideSlice","cx","cy","distance","sqrt","pow","angle","atan2","PI","ceil","onChartAfterIsInsiderPlot","e","polar","inverted","isInsidePlot","some","axis","normalizedStartAngleRad","normalizedEndAngleRad","onPointerAfterGetHoverData","hoverPoint","plotX","plotY","onPointerBeforeGetHoverData","getHoverPane","filter","s","visible","shared","directTouch","enableMouseTracking","xAxis","defaultOptions","background","shape","borderRadius","borderWidth","borderColor","backgroundColor","linearGradient","x1","y1","x2","y2","stops","from","Number","MAX_VALUE","innerRadius","to","outerRadius","Pane_PaneDefaults","extend","merge","splat","Pane","constructor","coll","init","push","setOptions","render","renderer","group","g","attr","zIndex","add","updateCenter","backgroundOption","len","max","length","renderBackground","destroy","splice","backgroundOptions","attribs","className","method","styledMode","path","getPlotBandPath","update","redraw","axes","compose","ChartClass","PointerClass","chartProto","collectionsWithUpdate","area","pointClass","AreaPoint","areaProto","seriesTypes","AreaRangePoint_defined","AreaRangePoint_isNumber","AreaRange_AreaRangePoint","setState","prevState","state","series","isPolar","plotHigh","yAxis","toPixels","high","plotLow","low","lowerStateMarkerGraphic","stateMarkerGraphic","upperStateMarkerGraphic","graphic","graphics","plotHighX","apply","arguments","plotLowX","originalSettings","modifyMarkerSettings","restoreMarkerSettings","haloPath","isInside","isTopInside","concat","isValid","noop","AreaSeries","AreaRangeSeries_areaProto","column","columnProto","AreaRangeSeries_addEvent","AreaRangeSeries_defined","AreaRangeSeries_extend","isArray","AreaRangeSeries_isNumber","AreaRangeSeries_pick","AreaRangeSeries_merge","AreaRangeSeries","toYData","point","highToXY","xy","postTranslate","rectPlotX","getGraphPath","points","highPoints","highAreaPoints","connectEnds","connectNulls","pointShim","step","highAreaPoint","yBottom","doCurve","isNull","polarPlotY","lowerPath","left","right","higherPath","higherAreaPath","linePath","graphPath","areaPath","isArea","xMap","drawDataLabels","up","upperDataLabelOptions","lowerDataLabelOptions","data","originalDataLabels","dataLabelOptions","dataLabels","enabled","xHigh","yHigh","xLow","yLow","hasDataLabels","inside","_plotY","dataLabel","dataLabelUpper","below","align","verticalAlign","label","alignDataLabel","originalMarkerSettings","marker","symbol","lowMarker","drawPoints","pointLength","origProps","negative","zone","threshold","zones","getZone","hasMarkerChanged","oldOptions","oldMarker","height","width","lineWidth","tooltip","pointFormat","trackByArea","pointArrayMap","join","translate","dataModify","modifyValue","order","tooltipPos","pos","posHigh","deferTranslatePolar","pointValKey","setStackedPoints","registerSeriesType","AreaRange_AreaRangeSeries","spline","splineProto","AreaSplineRangeSeries_merge","AreaSplineRangeSeries_extend","AreaSplineRangeSeries","getPointSpline","highcharts_Series_types_column_commonjs_highcharts_Series_types_column_commonjs2_highcharts_Series_types_column_root_Highcharts_Series_types_column_","highcharts_Series_types_column_commonjs_highcharts_Series_types_column_commonjs2_highcharts_Series_types_column_root_Highcharts_Series_types_column_default","BoxPlotSeries_noop","crisp","BoxPlotSeries_extend","BoxPlotSeries_merge","BoxPlotSeries_pick","BoxPlotSeries_relativeLength","BoxPlotSeries","pointAttribs","getWhiskerPair","halfWidth","stemX","upperWhiskerLength","lowerWhiskerLength","strokeWidth","whiskers","getWhisker","xLen","yPos","halfLen","crispedYPos","highPlot","lowPlot","q1Plot","q3Plot","medianPlot","medianPath","boxPath","doQuartiles","whiskerLength","verb","shapeArgs","boxAttr","stemAttr","whiskersAttr","medianAttr","color","pointWhiskerLength","stem","addClass","box","medianShape","stroke","stemColor","stemWidth","dashstyle","stemDashStyle","dashStyle","whiskerColor","whiskerWidth","whiskerDashStyle","fill","fillColor","lineColor","boxDashStyle","medianColor","medianWidth","medianDashStyle","pointXOffset","barW","boxStrokeWidth","q1","median","q3","BoxPlot_BoxPlotSeries","Bubble_BubbleLegendDefaults","connectorClassName","connectorColor","connectorDistance","connectorWidth","labels","allowOverlap","format","formatter","style","fontSize","maxSize","minSize","legendIndex","ranges","sizeBy","sizeByAbsoluteValue","zThreshold","highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_","highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_default","BubbleLegendItem_noop","arrayMax","arrayMin","BubbleLegendItem_isNumber","BubbleLegendItem_merge","BubbleLegendItem_pick","stableSort","Bubble_BubbleLegendItem","legend","addToLegend","items","drawLegendSymbol","connectorSpace","itemDistance","legendItem","bubbleLegend","autoRanges","b","maxLabel","getMaxLabelSize","radius","movementX","labelWidth","labelHeight","seriesIndex","baseline","bubbleAttribs","connectorAttribs","labelAttribs","rtl","fillOpacity","range","getRangeRadius","bubbleSeries","zMax","zMin","getRadius","symbols","connectors","bubbleItems","css","itemStyle","translateX","translateY","renderRange","hideOverlappingLabels","mainRange","labelsOptions","elementCenter","absoluteRadius","abs","labelsAlign","posX","posY","crispMovement","connectorLength","circle","colorIndex","crispLine","text","formatLabel","position","getBBox","placed","alignAttr","labelSize","numberFormatter","index","newOpacity","oldOpacity","show","hide","getRanges","rangesOptions","zData","minZ","maxZ","isBubble","ignoreSeries","getColumn","displayNegative","reverse","predictBubbleSizes","legendOptions","floating","horizontal","layout","lastLineHeight","plotSizeX","plotSizeY","pxSizes","getPxExtremes","minPxSize","maxPxSize","plotSize","calculatedSize","updateRanges","bubbleLegendOptions","correctSizes","composed","BubbleLegendComposition_addEvent","objectEach","pushUnique","wrap","chartDrawChartBox","proceed","callback","bubbleSizes","getVisibleBubbleSeriesIndex","allItems","item","getMargins","setScale","updateNames","ticks","tick","isNew","isNewLabel","retranslateItems","getLinesHeights","dataTable","rowCount","lines","lastLine","legendItem2","j","itemHeight","onLegendAfterGetAllItems","bubbleSeriesIndex","destroyItem","onLegendItemClick","status","defaultPrevented","orgTranslateX","orgTranslateY","actualLine","round","Bubble_BubbleLegendComposition","LegendClass","highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_","highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_default","scatter","ScatterPoint","BubblePoint_extend","BubblePoint","computedSize","diameter","ttBelow","BubbleSeries_composed","BubbleSeries_noop","Series","BubbleSeries_columnProto","ScatterSeries","BubbleSeries_addEvent","BubbleSeries_arrayMax","BubbleSeries_arrayMin","clamp","BubbleSeries_extend","BubbleSeries_isNumber","BubbleSeries_merge","BubbleSeries_pick","BubbleSeries_pushUnique","onAxisFoundExtremes","axisLength","isXAxis","pxMin","pxMax","transA","hasActiveSeries","bubblePadding","reserveSpace","allowZoomOutside","onPoint","getRadii","radii","dataMin","logarithmic","keys","onAxisAfterRender","tickPositions","dataMax","categories","type","find","tickCount","BubbleSeries","AxisClass","animate","animationLimit","hasRendered","markerAttribs","animation","yData","zExtremes","bubbleZExtremes","valid","otherSeries","getZExtremes","yValue","sizeByArea","zRange","hasData","markerOptions","translateBubble","zoneAxis","z","dlBox","getPxSize","isPercent","parseInt","searchKDTree","compareX","suppliedPointEvaluator","suppliedBSideCheckEvaluator","p1","p2","comparisonProp","p1Dist","p2Dist","ret","flip","states","hover","radiusPlus","softThreshold","halo","turboThreshold","applyZones","keysAffectYAxis","parallelArrays","trackerGroups","specialGroup","target","ColumnRangePoint_columnProto","arearange","ColumnRangePoint_AreaRangePoint","ColumnRangePoint_extend","ColumnRangePoint_isNumber","ColumnRangePoint","ColumnRangeSeries_noop","ColumnRangeSeries_AreaRangeSeries","ColumnSeries","ColumnRangeSeries_columnProto","ColumnRangeSeries_addEvent","ColumnRangeSeries_clamp","ColumnRangeSeries_extend","ColumnRangeSeries_isNumber","ColumnRangeSeries_merge","ColumnRangeSeries_pick","ColumnRangeSeries","stacking","translate3dPoints","translate3dShapes","afterColumnTranslate","heightDifference","startAngleRad","isRadial","safeDistance","chartWidth","chartHeight","minPointLength","rectPlotY","barX","shapeType","arc","pointWidth","crispCol","where","pointRange","legendSymbol","adjustForMissingColumns","drawGraph","getSymbol","drawTracker","getColumnMetrics","ColumnPyramidSeries_ColumnSeries","ColumnPyramidSeries_clamp","ColumnPyramidSeries_merge","ColumnPyramidSeries_pick","ColumnPyramidSeries","dense","closestPointRange","metrics","offset","translatedThreshold","getThreshold","seriesBarW","pointPadding","barY","barH","stackTotal","stackHeight","topXwidth","bottomXwidth","invBarPos","x3","x4","centerInCategory","total","topPointY","ErrorBarSeries_AreaRangeSeries","ErrorBarSeries_addEvent","ErrorBarSeries_merge","ErrorBarSeries_extend","ErrorBarSeries","linkedParent","columnMetrics","valKey","grouping","linkedTo","Point","GaugeSeries_noop","GaugeSeries_Series","GaugeSeries_ColumnSeries","GaugeSeries_clamp","GaugeSeries_isNumber","GaugeSeries_extend","GaugeSeries_merge","GaugeSeries_pick","pInt","GaugeSeries_defined","GaugeSeries","generatePoints","dialOptions","dial","baseLength","rearLength","baseWidth","topWidth","overshoot","rotation","endAngleRad","percentage","pivot","pivotOptions","plotGroup","seriesGroup","clip","clipRect","setData","processData","crop","defer","headerFormat","showInLegend","fixedBox","forceDL","noSharedTooltip","highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_","highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default","DragNodesComposition_composed","DragNodesComposition_addEvent","DragNodesComposition_pushUnique","onChartLoad","mousedownUnbinder","mousemoveUnbinder","mouseupUnbinder","container","event","hasDraggableNodes","draggable","onMouseDown","onMouseMove","ownerDocument","onMouseUp","Series_DragNodesComposition","panKey","normalizedEvent","pointer","normalize","fixedPosition","inDragMode","newPlotX","newPlotY","diffX","diffY","graphLayoutsLookup","hasDragged","redrawHalo","restartSimulation","enableSimulation","fixedDraggable","setAnimation","GraphLayoutComposition_composed","GraphLayoutComposition_addEvent","GraphLayoutComposition_pushUnique","onChartAfterPrint","updateSimulation","onChartBeforePrint","onChartPredraw","stop","onChartRender","systemsStable","afterRender","layoutStep","maxIterations","isFinite","temperature","isStable","beforeStep","Series_GraphLayoutComposition","integrations","layouts","highcharts_Chart_commonjs_highcharts_Chart_commonjs2_highcharts_Chart_root_Highcharts_Chart_","highcharts_Chart_commonjs_highcharts_Chart_commonjs2_highcharts_Chart_root_Highcharts_Chart_default","bubble","PackedBubblePoint_BubblePoint","PackedBubble_PackedBubblePoint","removeElementFromCollection","nodes","firePointEvent","seriesOptions","isParentNode","parentNode","temp","allowPointSelect","select","getSelectedPoints","getSelectedParentNodes","move","parentGroup","element","PackedBubbleSeriesDefaults_isNumber","Networkgraph_VerletIntegration","attractive","link","force","distanceXY","massFactor","getMass","translatedX","diffTemperature","translatedY","fromNode","degree","toNode","attractiveForceFunction","k","barycenter","gravitationalConstant","xFactor","yFactor","top","node","mass","getK","integrate","friction","maxSpeed","prevX","prevY","frictionX","dispX","frictionY","dispY","signX","signY","vectorLength","repulsive","factor","repulsiveForceFunction","PackedBubbleIntegration_noop","PackedBubbleIntegration","centerX","centerY","nodeCountSqrt","massTimesNodeCountSqrt","resolveSplitSeries","repNode","Networkgraph_EulerIntegration","distanceR","getDegree","phi","QuadTreeNode","body","isEmpty","isInternal","boxSize","divideBox","halfHeight","getBoxPosition","insert","depth","newQuadTreeNode","NaN","updateMassAndCenter","pointMass","Networkgraph_QuadTree","maxDepth","isRoot","calculateMassAndCenter","visitNodeRecursive","insertNodes","beforeCallback","afterCallback","goFurther","qtNode","win","ReingoldFruchtermanLayout_clamp","ReingoldFruchtermanLayout_defined","isFunction","ReingoldFruchtermanLayout_fireEvent","ReingoldFruchtermanLayout_pick","ReingoldFruchtermanLayout","currentStep","initialRendering","links","simulation","euler","verlet","setInitialRendering","integration","attractiveForce","repulsiveForce","approximation","enable","forces","initPositions","finishedAnimating","setK","resetSimulation","allSeries","forceName","createQuadTree","quadTree","anyLayout","applyLimits","coolDown","startTemperature","prevSystemTemperature","systemTemperature","getSystemTemperature","cancelAnimationFrame","requestAnimationFrame","setArea","w","h","linkLength","addElementsToCollection","elements","collection","indexOf","clear","forcedStop","setMaxIterations","setTemperature","setDiffTemperature","initialPositions","setCircularPositions","setRandomPositions","rootNodes","linksTo","visitedNodes","initialPositionRadius","addToNodes","linksFrom","id","sortedNodes","rootNode","iEnd","cos","sin","nodesLength","unrandom","rand","floor","name","args","barycenterForces","getBarycenter","systemMass","barnesHutApproximation","quadNode","goDeeper","getDistXY","theta","repulsiveForces","attractiveForces","applyLimitBox","temperatureStep","vector","getDistR","nodeA","nodeB","xDist","yDist","absX","absY","Networkgraph_ReingoldFruchtermanLayout","PackedBubbleLayout_addEvent","PackedBubbleLayout_defined","PackedBubbleLayout_pick","chartGetSelectedParentNodes","selectedParentsNodes","selected","onChartBeforeRedraw","allDataPoints","PackedBubbleLayout","packedbubble","allParentNodes","calculateParentRadius","tempDiff","seriesInteraction","nodeSeries","paddedNodeRadius","neighbours","repNodeSeries","forceTimesMass","specificSeriesOpt","layoutAlgorithm","splitSeries","plotOptions","parentNodeLimit","parentNodeRadius","SimulationSeriesUtilities_merge","syncTimeout","animObject","highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_","highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_default","TextPath_deg2rad","TextPath_addEvent","TextPath_merge","uniqueKey","TextPath_defined","TextPath_extend","setTextPath","textPathOptions","attributes","dy","startOffset","textAnchor","url","textWrapper","textPath","undo","textPathId","textAttribs","dx","transform","children","slice","tagName","href","added","textCache","buildText","setPolygon","bBox","tp","querySelector","polygon","fontMetrics","descender","lineCleanerRegex","RegExp","innerHTML","replace","split","numOfLines","appendTopAndBottom","charIndex","positionOfChar","getRotationOfChar","cosRot","sinRot","lineIndex","lineLen","line","lineCharIndex","srcCharIndex","lower","upper","getStartPositionOfChar","unshift","charPos","getEndPositionOfChar","drawTextPath","labelOptions","formatPrefix","useHTML","getDataLabelPath","dataLabelPath","parse","PackedBubbleSeries_noop","seriesProto","PackedBubbleSeries_BubbleSeries","initDataLabels","PackedBubbleSeries_initDataLabels","initDataLabelsDefer","PackedBubbleSeries_initDataLabelsDefer","dlOptions","dataLabelsGroup","initDataLabelsGroup","opacity","getPlotBox","deferDataLabels","PackedBubbleSeries_addEvent","PackedBubbleSeries_clamp","PackedBubbleSeries_defined","PackedBubbleSeries_extend","PackedBubbleSeries_fireEvent","PackedBubbleSeries_isArray","PackedBubbleSeries_isNumber","PackedBubbleSeries_merge","PackedBubbleSeries_pick","Extensions_TextPath","SVGElementClass","svgElementProto","PackedBubbleSeries","parentNodeMass","PackedBubble_PackedBubbleLayout","accumulateAllPoints","is","valueData","addLayout","layoutOptions","layoutType","chartOptions","graphLayoutsStorage","forExport","collisionNmb","addSeriesLayout","parentNodeOptions","seriesLayout","parentNodeLayout","createParentNodes","seriesBox","calculateZExtremes","valMin","Infinity","valMax","checkOverlap","bubble1","bubble2","PackedBubblePoint","nodeAdded","parentMarkerOptions","brighten","p","normal","dataLabelOnNull","deferLayout","nodeMarker","parentOptions","parentAttribs","parentNodesGroup","graph","div","getPointRadius","useSimulation","extremes","allDataPointsLength","minRadius","maxRadius","eventsToUnbind","isDirty","dnPoint","removed","dragBetweenSeries","addPoint","remove","placeBubbles","positionBubble","bubblePos","stage","calculatedBubble","arr","sortedArr","sort","stages","rawPositions","resizeRadius","hasParentMarker","lastBubble","newOrigin","nextBubble","asin","acos","alfa","beta","finalAngle","gamma","cosA","sinA","minX","maxX","minY","maxY","POSITIVE_INFINITY","NEGATIVE_INFINITY","spaceRatio","smallerDimension","setVisible","parentNodeFormatter","parentNodeTextPath","padding","transition","stickyTracking","axisTypes","invertible","isCartesian","requireSorting","indexateNodes","searchPoint","PolygonSeries_noop","PolygonSeries_AreaSeries","LineSeries","PolygonSeries_ScatterSeries","PolygonSeries_extend","PolygonSeries_merge","PolygonSeries","followPointer","Axis_RadialAxisDefaults","circular","gridLineWidth","maxPadding","minPadding","showLastLabel","tickLength","radial","gridLineInterpolation","title","radialGauge","endOnTick","minorGridLineWidth","minorTickInterval","minorTickLength","minorTickPosition","minorTickWidth","startOnTick","tickPixelInterval","tickPosition","tickWidth","RadialAxis_defaultOptions","RadialAxis_composed","RadialAxis_noop","RadialAxis_addEvent","RadialAxis_correctFloat","RadialAxis_defined","RadialAxis_extend","RadialAxis_fireEvent","isObject","RadialAxis_merge","RadialAxis_pick","RadialAxis_pushUnique","RadialAxis_relativeLength","RadialAxis_splat","RadialAxis_wrap","beforeSetTickPositions","autoConnect","isCircular","userMax","createLabelCollector","map","Boolean","createLabelCollectorHidden","getCrosshairPosition","getPosition","getLinePath","_lineWidth","r","horiz","open","innerR","xBounds","yBounds","angleRad","getOffset","axisProto","axisOffset","side","radiusToPixels","percentRegex","fullRadius","xOnPerimeter","getPlotLinePath","transFrom","transTo","isCrosshair","paneInnerR","innerRatio","otherAxis","crossPos","translatedVal","getTitlePosition","titleOptions","middle","modify","setAxisSize","setAxisTranslation","onAxisAfterInit","isHidden","paneOptions","fullCircle","normalizedStart","normalizedEnd","onAxisAutoLabelAlign","preventDefault","onAxisDestroy","labelCollectors","labelCollector","onAxisInit","isX","paneIndex","userOptions","radialAxis","renderHidden","setCategories","setTitle","onAxisInitialAxisTranslation","onTickAfterGetLabelPosition","labelBBox","correctAngle","labelYPosCorrection","optionsY","centerSlot","labelDir","reducedAngle1","reducedAngle2","tickInterval","onTickAfterGetPosition","onGlobalSetOptions","radialDefaultOptions","sector","minPixelPadding","minPointOffset","defaultPolarOptions","stackLabels","reversedStacks","plotBands","wrapTickGetMarkPath","endPoint","TickClass","Axis_RadialAxis","PolarComposition_animObject","PolarComposition_composed","PolarComposition_addEvent","PolarComposition_defined","PolarComposition_isNumber","PolarComposition_merge","PolarComposition_pick","PolarComposition_pushUnique","PolarComposition_relativeLength","PolarComposition_splat","PolarComposition_uniqueKey","PolarComposition_wrap","onChartAfterDrawChartBox","onChartAfterInit","onChartCreateAxes","onPointerGetSelectionBox","linearAxis","result","onPointerGetSelectionMarkerAttrs","mouseDownX","mouseDownY","attrs","zoomHor","paneRadRange","pathStart","toValue","pathEnd","getExtremes","trimPath","zoomVert","Array","innerPath","outerPath","onSeriesAfterInit","PolarAdditions","isRadialSeries","isRadialBar","onSeriesAfterTranslate","kdByAngle","searchPointByAngleOrInverted","findNearestPointBy","toXY","hasParallelCoordinates","reversed","MIN_VALUE","hasClipCircleSetter","circ","clipCircle","clipPath","createElement","defs","wrapper","setClip","searchKDTreePoint","clientX","lastTick","firstTick","wrapChartGet","wrapColumnSeriesAlignDataLabel","alignTo","labelPos","onAfterColumnTranslate","visibleRange","thresholdAngleRad","yMin","yMax","pointX","pointY","stackValues","stack","stacks","stackKey","getStackIndicator","brOption","brValue","wrapLineSeriesGetGraphPath","firstValid","popLastPoint","pop","wrapPointerGetCoordinates","wrapPointerPinch","wrapSeriesAnimate","markerGroup","pie","scaleX","scaleY","wrapSplineSeriesGetPointSpline","segment","rightContX","getConnectors","calculateNeighbours","leftContX","leftContY","rightContY","jointAngle","addedNumber","prevPointInd","nextPointInd","previousPoint","nextPoint","previousX","previousY","nextX","nextY","smoothing","dLControlPoint","dRControlPoint","leftContAngle","prevPointCont","wrapPointPos","chartCoordinates","destroyed","SeriesClass","PointClass","AreaSplineRangeSeriesClass","ColumnSeriesClass","LineSeriesClass","SplineSeriesClass","Pane_Pane","pointProto","pointerProto","areaSplineRangeProto","polarPlotX","highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_","highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_default","WaterfallAxis_composed","WaterfallAxis_addEvent","WaterfallAxis_objectEach","WaterfallAxis_pushUnique","onAxisAfterBuildStacks","waterfall","changed","alreadyChanged","stackLabelOptions","renderStackTotals","Composition","serie","waterfallStacks","stackTotalGroup","dummyStackItem","stackItem","Axis_WaterfallAxis","WaterfallPoint_isNumber","WaterfallPoint","getClassName","isSum","isIntermediateSum","WaterfallSeries_ColumnSeries","WaterfallSeries_LineSeries","WaterfallSeries_addEvent","WaterfallSeries_arrayMax","WaterfallSeries_arrayMin","WaterfallSeries_correctFloat","WaterfallSeries_crisp","WaterfallSeries_extend","WaterfallSeries_isNumber","WaterfallSeries_merge","WaterfallSeries_objectEach","WaterfallSeries_pick","ownProp","WaterfallSeries","processedYData","subSum","sum","dataLength","pt","upColor","getCrispPath","graphLineWidth","reversedXAxis","reversedYAxis","prevPoint","prevBox","prevStack","isPos","prevStackX","connectorThreshold","minPointLengthOffset","nextLast","last","seriesThreshold","xData","xLength","stackThreshold","interSum","actualStackX","totalYVal","actualSum","prevSum","statesLen","posTotal","negTotal","xPoint","yVal","calculateStackState","firstS","nextS","sInx","sOff","stackState","actualStack","stateIndex","absolutePos","absoluteNeg","stackedYNeg","stackedYPos","stackX","lineWidthPlus","showLine","halfMinPointLength","previousIntermediate","hPos","setOffset","tooltipY","isPointInside","crispBottom","G","Bubble_BubbleSeries","Axis","Chart","Legend","PackedBubble_PackedBubbleSeries","Pointer","PolarComposition","Tick","areasplinerange","Waterfall_WaterfallSeries"],"mappings":"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"}