{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v12.3.0 (2025-06-21)\n * @module highcharts/modules/annotations\n * @requires highcharts\n *\n * Annotations module\n *\n * (c) 2009-2025 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\nimport * as __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__ from \"../highcharts.js\";\n/******/ // The require scope\n/******/ var __webpack_require__ = {};\n/******/ \n/************************************************************************/\n/******/ /* webpack/runtime/compat get default export */\n/******/ (() => {\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = (module) => {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t() => (module['default']) :\n/******/ \t\t\t() => (module);\n/******/ \t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\treturn getter;\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/define property getters */\n/******/ (() => {\n/******/ \t// define getter functions for harmony exports\n/******/ \t__webpack_require__.d = (exports, definition) => {\n/******/ \t\tfor(var key in definition) {\n/******/ \t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/hasOwnProperty shorthand */\n/******/ (() => {\n/******/ \t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ })();\n/******/ \n/************************************************************************/\n\n;// external [\"../highcharts.js\",\"default\"]\nconst external_highcharts_src_js_default_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"];\nvar external_highcharts_src_js_default_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_namespaceObject);\n;// ./code/es-modules/Extensions/Annotations/AnnotationChart.js\n/* *\n *\n *  (c) 2009-2025 Highsoft, Black Label\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { addEvent, erase, find, fireEvent, isArray, isObject, pick, wrap } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Add an annotation to the chart after render time.\n *\n * @sample highcharts/annotations/add-annotation/\n *         Add annotation\n *\n * @function Highcharts.Chart#addAnnotation\n *\n * @param  {Highcharts.AnnotationsOptions} options\n *         The annotation options for the new, detailed annotation.\n *\n * @param {boolean} [redraw]\n *\n * @return {Highcharts.Annotation}\n *         The newly generated annotation.\n */\nfunction chartAddAnnotation(userOptions, redraw) {\n    const annotation = this.initAnnotation(userOptions);\n    this.options.annotations.push(annotation.options);\n    if (pick(redraw, true)) {\n        annotation.redraw();\n        annotation.graphic.attr({\n            opacity: 1\n        });\n    }\n    return annotation;\n}\n/**\n * @private\n */\nfunction chartCallback() {\n    const chart = this;\n    chart.plotBoxClip = this.renderer.clipRect(this.plotBox);\n    chart.controlPointsGroup = chart.renderer\n        .g('control-points')\n        .attr({ zIndex: 99 })\n        .clip(chart.plotBoxClip)\n        .add();\n    chart.options.annotations.forEach((annotationOptions, i) => {\n        if (\n        // Verify that it has not been previously added in a responsive rule\n        !chart.annotations.some((annotation) => annotation.options === annotationOptions)) {\n            const annotation = chart.initAnnotation(annotationOptions);\n            chart.options.annotations[i] = annotation.options;\n        }\n    });\n    chart.drawAnnotations();\n    addEvent(chart, 'redraw', chart.drawAnnotations);\n    addEvent(chart, 'destroy', function () {\n        chart.plotBoxClip.destroy();\n        chart.controlPointsGroup.destroy();\n    });\n    addEvent(chart, 'exportData', function (event) {\n        const annotations = chart.annotations, csvColumnHeaderFormatter = ((this.options.exporting &&\n            this.options.exporting.csv) ||\n            {}).columnHeaderFormatter, \n        // If second row doesn't have xValues\n        // then it is a title row thus multiple level header is in use.\n        multiLevelHeaders = !event.dataRows[1].xValues, annotationHeader = (chart.options.lang &&\n            chart.options.lang.exportData &&\n            chart.options.lang.exportData.annotationHeader), columnHeaderFormatter = function (index) {\n            let s;\n            if (csvColumnHeaderFormatter) {\n                s = csvColumnHeaderFormatter(index);\n                if (s !== false) {\n                    return s;\n                }\n            }\n            s = annotationHeader + ' ' + index;\n            if (multiLevelHeaders) {\n                return {\n                    columnTitle: s,\n                    topLevelColumnTitle: s\n                };\n            }\n            return s;\n        }, startRowLength = event.dataRows[0].length, annotationSeparator = (chart.options.exporting &&\n            chart.options.exporting.csv &&\n            chart.options.exporting.csv.annotations &&\n            chart.options.exporting.csv.annotations.itemDelimiter), joinAnnotations = (chart.options.exporting &&\n            chart.options.exporting.csv &&\n            chart.options.exporting.csv.annotations &&\n            chart.options.exporting.csv.annotations.join);\n        annotations.forEach((annotation) => {\n            if (annotation.options.labelOptions &&\n                annotation.options.labelOptions.includeInDataExport) {\n                annotation.labels.forEach((label) => {\n                    if (label.options.text) {\n                        const annotationText = label.options.text;\n                        label.points.forEach((points) => {\n                            const annotationX = points.x, xAxisIndex = points.series.xAxis ?\n                                points.series.xAxis.index :\n                                -1;\n                            let wasAdded = false;\n                            // Annotation not connected to any xAxis -\n                            // add new row.\n                            if (xAxisIndex === -1) {\n                                const n = event.dataRows[0].length, newRow = new Array(n);\n                                for (let i = 0; i < n; ++i) {\n                                    newRow[i] = '';\n                                }\n                                newRow.push(annotationText);\n                                newRow.xValues = [];\n                                newRow.xValues[xAxisIndex] = annotationX;\n                                event.dataRows.push(newRow);\n                                wasAdded = true;\n                            }\n                            // Annotation placed on a exported data point\n                            // - add new column\n                            if (!wasAdded) {\n                                event.dataRows.forEach((row) => {\n                                    if (!wasAdded &&\n                                        row.xValues &&\n                                        xAxisIndex !== void 0 &&\n                                        annotationX === row.xValues[xAxisIndex]) {\n                                        if (joinAnnotations &&\n                                            row.length > startRowLength) {\n                                            row[row.length - 1] += (annotationSeparator +\n                                                annotationText);\n                                        }\n                                        else {\n                                            row.push(annotationText);\n                                        }\n                                        wasAdded = true;\n                                    }\n                                });\n                            }\n                            // Annotation not placed on any exported data point,\n                            // but connected to the xAxis - add new row\n                            if (!wasAdded) {\n                                const n = event.dataRows[0].length, newRow = new Array(n);\n                                for (let i = 0; i < n; ++i) {\n                                    newRow[i] = '';\n                                }\n                                newRow[0] = annotationX;\n                                newRow.push(annotationText);\n                                newRow.xValues = [];\n                                if (xAxisIndex !== void 0) {\n                                    newRow.xValues[xAxisIndex] = annotationX;\n                                }\n                                event.dataRows.push(newRow);\n                            }\n                        });\n                    }\n                });\n            }\n        });\n        let maxRowLen = 0;\n        event.dataRows.forEach((row) => {\n            maxRowLen = Math.max(maxRowLen, row.length);\n        });\n        const newRows = maxRowLen - event.dataRows[0].length;\n        for (let i = 0; i < newRows; i++) {\n            const header = columnHeaderFormatter(i + 1);\n            if (multiLevelHeaders) {\n                event.dataRows[0].push(header.topLevelColumnTitle);\n                event.dataRows[1].push(header.columnTitle);\n            }\n            else {\n                event.dataRows[0].push(header);\n            }\n        }\n    });\n}\n/**\n * @private\n */\nfunction chartDrawAnnotations() {\n    this.plotBoxClip.attr(this.plotBox);\n    this.annotations.forEach((annotation) => {\n        annotation.redraw();\n        annotation.graphic.animate({\n            opacity: 1\n        }, annotation.animationConfig);\n    });\n}\n/**\n * Remove an annotation from the chart.\n *\n * @function Highcharts.Chart#removeAnnotation\n *\n * @param {number|string|Highcharts.Annotation} idOrAnnotation\n *        The annotation's id or direct annotation object.\n */\nfunction chartRemoveAnnotation(idOrAnnotation) {\n    const annotations = this.annotations, annotation = (idOrAnnotation.coll === 'annotations') ?\n        idOrAnnotation :\n        find(annotations, function (annotation) {\n            return annotation.options.id === idOrAnnotation;\n        });\n    if (annotation) {\n        fireEvent(annotation, 'remove');\n        erase(this.options.annotations, annotation.options);\n        erase(annotations, annotation);\n        annotation.destroy();\n    }\n}\n/**\n * Create lookups initially\n * @private\n */\nfunction onChartAfterInit() {\n    const chart = this, annotationsOption = this.options.annotations, annotationsUserOption = this.userOptions.annotations;\n    chart.annotations = [];\n    if (!isArray(this.options.annotations)) {\n        this.options.annotations = [];\n    }\n    if (isObject(annotationsUserOption, true) &&\n        isObject(annotationsOption, true)) {\n        this.options.annotations.push(annotationsOption);\n    }\n}\n/**\n * @private\n */\nfunction wrapPointerOnContainerMouseDown(proceed) {\n    if (!this.chart.hasDraggedAnnotation) {\n        proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n    }\n}\n/* *\n *\n *  Composition\n *\n * */\n/**\n * @private\n */\nvar AnnotationChart;\n(function (AnnotationChart) {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    function compose(AnnotationClass, ChartClass, PointerClass) {\n        const chartProto = ChartClass.prototype;\n        if (!chartProto.addAnnotation) {\n            const pointerProto = PointerClass.prototype;\n            addEvent(ChartClass, 'afterInit', onChartAfterInit);\n            chartProto.addAnnotation = chartAddAnnotation;\n            chartProto.callbacks.push(chartCallback);\n            chartProto.collectionsWithInit.annotations = [chartAddAnnotation];\n            chartProto.collectionsWithUpdate.push('annotations');\n            chartProto.drawAnnotations = chartDrawAnnotations;\n            chartProto.removeAnnotation = chartRemoveAnnotation;\n            chartProto.initAnnotation = function chartInitAnnotation(userOptions) {\n                const Constructor = (AnnotationClass.types[userOptions.type] ||\n                    AnnotationClass), annotation = new Constructor(this, userOptions);\n                this.annotations.push(annotation);\n                return annotation;\n            };\n            wrap(pointerProto, 'onContainerMouseDown', wrapPointerOnContainerMouseDown);\n        }\n    }\n    AnnotationChart.compose = compose;\n})(AnnotationChart || (AnnotationChart = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Annotations_AnnotationChart = (AnnotationChart);\n\n;// ./code/es-modules/Extensions/Annotations/AnnotationDefaults.js\n/* *\n *\n *  Imports\n *\n * */\n\nconst { defined } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A collection of annotations to add to the chart. The basic annotation allows\n * adding custom labels or shapes. The items can be tied to points, axis\n * coordinates or chart pixel coordinates.\n *\n * General options for all annotations can be set using the\n * `Highcharts.setOptions` function. In this case only single objects are\n * supported, because it alters the defaults for all items. For initialization\n * in the chart constructors however, arrays of annotations are supported.\n *\n * See more in the [general docs](https://www.highcharts.com/docs/advanced-chart-features/annotations).\n *\n * @sample highcharts/annotations/basic/ Basic annotations\n * @sample highcharts/demo/annotations/ Annotated chart\n * @sample highcharts/css/annotations Styled mode\n * @sample highcharts/annotations-advanced/controllable Controllable items\n * @sample {highstock} stock/annotations/fibonacci-retracements\n *         Custom annotation, Fibonacci retracement\n * @sample highcharts/annotations/shape/\n *         Themed crooked line annotation\n *\n * @type         {Array<*>}\n * @since        6.0.0\n * @requires     modules/annotations\n * @optionparent annotations\n */\nconst AnnotationDefaults = {\n    /**\n     * Sets an ID for an annotation. Can be user later when\n     * removing an annotation in [Chart#removeAnnotation(id)](\n     * /class-reference/Highcharts.Chart#removeAnnotation) method.\n     *\n     * @type      {number|string}\n     * @apioption annotations.id\n     */\n    /**\n     * For advanced annotations, this option defines the type of annotation. Can\n     * be one of the keys listed under the [types option](#annotations.types).\n     *\n     * @sample    highcharts/annotations-advanced/crooked-line\n     *            Crooked line annotation\n     * @requires  modules/annotations-advanced\n     * @product   highstock\n     * @type      {string}\n     * @apioption annotations.type\n     */\n    /**\n     * Whether the annotation is visible.\n     *\n     * @sample highcharts/annotations/visible/\n     *         Set annotation visibility\n     */\n    visible: true,\n    /**\n     * Enable or disable the initial animation when a series is\n     * displayed for the `annotation`. The animation can also be set\n     * as a configuration object. Please note that this option only\n     * applies to the initial animation.\n     * For other animations, see [chart.animation](#chart.animation)\n     * and the animation parameter under the API methods.\n     * The following properties are supported:\n     *\n     * - `defer`: The animation delay time in milliseconds.\n     *\n     * @sample {highcharts} highcharts/annotations/defer/\n     *          Animation defer settings\n     * @type {boolean|Partial<Highcharts.AnimationOptionsObject>}\n     * @since 8.2.0\n     */\n    animation: {},\n    /**\n     * Whether to hide the part of the annotation\n     * that is outside the plot area.\n     *\n     * @sample highcharts/annotations/label-crop-overflow/\n     *         Crop line annotation\n     * @type  {boolean}\n     * @since 9.3.0\n     */\n    crop: true,\n    /**\n     * The animation delay time in milliseconds.\n     * Set to `0` renders annotation immediately.\n     * As `undefined` inherits defer time from the [series.animation.defer](#plotOptions.series.animation.defer).\n     *\n     * @type      {number}\n     * @since 8.2.0\n     * @apioption annotations.animation.defer\n     */\n    /**\n     * Allow an annotation to be draggable by a user. Possible\n     * values are `'x'`, `'xy'`, `'y'` and `''` (disabled).\n     *\n     * @sample highcharts/annotations/draggable/\n     *         Annotations draggable: 'xy'\n     *\n     * @type {Highcharts.AnnotationDraggableValue}\n     */\n    draggable: 'xy',\n    /**\n     * Options for annotation's labels. Each label inherits options\n     * from the labelOptions object. An option from the labelOptions\n     * can be overwritten by config for a specific label.\n     *\n     * @requires modules/annotations\n     */\n    labelOptions: {\n        /**\n         * The alignment of the annotation's label. If right,\n         * the right side of the label should be touching the point.\n         *\n         * @sample highcharts/annotations/label-position/\n         *         Set labels position\n         *\n         * @type {Highcharts.AlignValue}\n         */\n        align: 'center',\n        /**\n         * Whether to allow the annotation's labels to overlap.\n         * To make the labels less sensitive for overlapping,\n         * the can be set to 0.\n         *\n         * @sample highcharts/annotations/tooltip-like/\n         *         Hide overlapping labels\n         */\n        allowOverlap: false,\n        /**\n         * The background color or gradient for the annotation's\n         * label.\n         *\n         * @sample highcharts/annotations/label-presentation/\n         *         Set labels graphic options\n         *\n         * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         */\n        backgroundColor: 'rgba(0, 0, 0, 0.75)',\n        /**\n         * The border color for the annotation's label.\n         *\n         * @sample highcharts/annotations/label-presentation/\n         *         Set labels graphic options\n         *\n         * @type {Highcharts.ColorString}\n         */\n        borderColor: \"#000000\" /* Palette.neutralColor100 */,\n        /**\n         * The border radius in pixels for the annotation's label.\n         *\n         * @sample highcharts/annotations/label-presentation/\n         *         Set labels graphic options\n         */\n        borderRadius: 3,\n        /**\n         * The border width in pixels for the annotation's label\n         *\n         * @sample highcharts/annotations/label-presentation/\n         *         Set labels graphic options\n         */\n        borderWidth: 1,\n        /**\n         * A class name for styling by CSS.\n         *\n         * @sample highcharts/css/annotations\n         *         Styled mode annotations\n         *\n         * @since 6.0.5\n         */\n        className: 'highcharts-no-tooltip',\n        /**\n         * Whether to hide the annotation's label\n         * that is outside the plot area.\n         *\n         * @sample highcharts/annotations/label-crop-overflow/\n         *         Crop or justify labels\n         */\n        crop: false,\n        /**\n         * The label's pixel distance from the point.\n         *\n         * @sample highcharts/annotations/label-position/\n         *         Set labels position\n         *\n         * @type      {number}\n         * @apioption annotations.labelOptions.distance\n         */\n        /**\n         * A\n         * [format](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\n         * string for the data label.\n         *\n         * @see [plotOptions.series.dataLabels.format](plotOptions.series.dataLabels.format.html)\n         *\n         * @sample highcharts/annotations/label-text/\n         *         Set labels text\n         *\n         * @type      {string}\n         * @apioption annotations.labelOptions.format\n         */\n        /**\n         * Alias for the format option.\n         *\n         * @see [format](annotations.labelOptions.format.html)\n         *\n         * @sample highcharts/annotations/label-text/\n         *         Set labels text\n         *\n         * @type      {string}\n         * @apioption annotations.labelOptions.text\n         */\n        /**\n         * Callback JavaScript function to format the annotation's\n         * label. Note that if a `format` or `text` are defined,\n         * the format or text take precedence and the formatter is\n         * ignored. `This` refers to a point object.\n         *\n         * @sample highcharts/annotations/label-text/\n         *         Set labels text\n         *\n         * @type    {Highcharts.FormatterCallbackFunction<Highcharts.Point>}\n         * @default function () { return defined(this.y) ? this.y : 'Annotation label'; }\n         */\n        formatter: function () {\n            return defined(this.y) ? '' + this.y : 'Annotation label';\n        },\n        /**\n         * Whether the annotation is visible in the exported data\n         * table.\n         *\n         * @sample highcharts/annotations/include-in-data-export/\n         *         Do not include in the data export\n         *\n         * @since 8.2.0\n         * @requires modules/export-data\n         */\n        includeInDataExport: true,\n        /**\n         * How to handle the annotation's label that flow outside\n         * the plot area. The justify option aligns the label inside\n         * the plot area.\n         *\n         * @sample highcharts/annotations/label-crop-overflow/\n         *         Crop or justify labels\n         *\n         * @validvalue [\"allow\", \"justify\"]\n         */\n        overflow: 'justify',\n        /**\n         * When either the borderWidth or the backgroundColor is\n         * set, this is the padding within the box.\n         *\n         * @sample highcharts/annotations/label-presentation/\n         *         Set labels graphic options\n         */\n        padding: 5,\n        /**\n         * The shadow of the box. The shadow can be an object\n         * configuration containing `color`, `offsetX`, `offsetY`,\n         * `opacity` and `width`.\n         *\n         * @sample highcharts/annotations/label-presentation/\n         *         Set labels graphic options\n         *\n         * @type {boolean|Highcharts.ShadowOptionsObject}\n         */\n        shadow: false,\n        /**\n         * The name of a symbol to use for the border around the\n         * label. Symbols are predefined functions on the Renderer\n         * object.\n         *\n         * @sample highcharts/annotations/shapes/\n         *         Available shapes for labels\n         */\n        shape: 'callout',\n        /**\n         * Styles for the annotation's label.\n         *\n         * @see [plotOptions.series.dataLabels.style](plotOptions.series.dataLabels.style.html)\n         *\n         * @sample highcharts/annotations/label-presentation/\n         *         Set labels graphic options\n         *\n         * @type {Highcharts.CSSObject}\n         */\n        style: {\n            /** @ignore */\n            fontSize: '0.7em',\n            /** @ignore */\n            fontWeight: 'normal',\n            /** @ignore */\n            color: 'contrast'\n        },\n        /**\n         * Whether to [use HTML](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html)\n         * to render the annotation's label.\n         */\n        useHTML: false,\n        /**\n         * The vertical alignment of the annotation's label.\n         *\n         * @sample highcharts/annotations/label-position/\n         *         Set labels position\n         *\n         * @type {Highcharts.VerticalAlignValue}\n         */\n        verticalAlign: 'bottom',\n        /**\n         * The x position offset of the label relative to the point.\n         * Note that if a `distance` is defined, the distance takes\n         * precedence over `x` and `y` options.\n         *\n         * @sample highcharts/annotations/label-position/\n         *         Set labels position\n         */\n        x: 0,\n        /**\n         * The y position offset of the label relative to the point.\n         * Note that if a `distance` is defined, the distance takes\n         * precedence over `x` and `y` options.\n         *\n         * @sample highcharts/annotations/label-position/\n         *         Set labels position\n         */\n        y: -16\n    },\n    /**\n     * An array of labels for the annotation. For options that apply\n     * to multiple labels, they can be added to the\n     * [labelOptions](annotations.labelOptions.html).\n     *\n     * @type      {Array<*>}\n     * @extends   annotations.labelOptions\n     * @apioption annotations.labels\n     */\n    /**\n     * This option defines the point to which the label will be\n     * connected. It can be either the point which exists in the\n     * series - it is referenced by the point's id - or a new point\n     * with defined x, y properties and optionally axes.\n     *\n     * @sample highcharts/annotations/mock-point/\n     *         Attach annotation to a mock point\n     * @sample highcharts/annotations/mock-points/\n     *         Attach annotation to a mock point with different ways\n     *\n     * @declare   Highcharts.AnnotationMockPointOptionsObject\n     * @type      {\n     *               string|\n     *               Highcharts.AnnotationMockPointOptionsObject|\n     *               Highcharts.AnnotationMockPointFunction\n     *            }\n     * @requires  modules/annotations\n     * @apioption annotations.labels.point\n     */\n    /**\n     * An array of shapes for the annotation. For options that apply\n     * to multiple shapes, then can be added to the\n     * [shapeOptions](annotations.shapeOptions.html).\n     *\n     * @type      {Array<*>}\n     * @extends   annotations.shapeOptions\n     * @apioption annotations.shapes\n     */\n    /**\n     * This option defines the point to which the shape will be\n     * connected. It can be either the point which exists in the\n     * series - it is referenced by the point's id - or a new point\n     * with defined x, y properties and optionally axes.\n     *\n     * @sample highcharts/annotations/mock-points/\n     *         Attach annotation to a mock point with different ways\n     *\n     * @declare   Highcharts.AnnotationMockPointOptionsObject\n     * @type      {\n     *               string|\n     *               Highcharts.AnnotationMockPointOptionsObject|\n     *               Highcharts.AnnotationMockPointFunction\n     *            }\n     * @extends   annotations.labels.point\n     * @requires  modules/annotations\n     * @apioption annotations.shapes.point\n     */\n    /**\n     * An array of points for the shape\n     * or a callback function that returns that shape point.\n     *\n     * This option is available\n     * for shapes which can use multiple points such as path. A\n     * point can be either a point object or a point's id.\n     *\n     * @see [annotations.shapes.point](annotations.shapes.point.html)\n     *\n     * @type      {Array<Highcharts.AnnotationShapePointOptions>}\n     * @extends   annotations.labels.point\n     * @apioption annotations.shapes.points\n     */\n    /**\n     * The URL for an image to use as the annotation shape. Note,\n     * type has to be set to `'image'`.\n     *\n     * @see [annotations.shapes.type](annotations.shapes.type)\n     * @sample highcharts/annotations/shape-src/\n     *         Define a marker image url for annotations\n     *\n     * @type      {string}\n     * @apioption annotations.shapes.src\n     */\n    /**\n     * Id of the marker which will be drawn at the final vertex of\n     * the path. Custom markers can be defined in defs property.\n     *\n     * @see [defs.markers](defs.markers.html)\n     *\n     * @sample highcharts/annotations/custom-markers/\n     *         Define a custom marker for annotations\n     *\n     * @type      {string}\n     * @apioption annotations.shapes.markerEnd\n     */\n    /**\n     * Id of the marker which will be drawn at the first vertex of\n     * the path. Custom markers can be defined in defs property.\n     *\n     * @see [defs.markers](defs.markers.html)\n     *\n     * @sample {highcharts} highcharts/annotations/custom-markers/\n     *         Define a custom marker for annotations\n     *\n     * @type      {string}\n     * @apioption annotations.shapes.markerStart\n     */\n    /**\n     * Options for annotation's shapes. Each shape inherits options\n     * from the shapeOptions object. An option from the shapeOptions\n     * can be overwritten by config for a specific shape.\n     *\n     * @requires  modules/annotations\n     */\n    shapeOptions: {\n        /**\n         *\n         * The radius of the shape in y direction.\n         * Used for the ellipse.\n         *\n         * @sample highcharts/annotations/ellipse/\n         *         Ellipse annotation\n         *\n         * @type      {number}\n         * @apioption annotations.shapeOptions.ry\n         **/\n        /**\n         *\n         * The xAxis index to which the points should be attached.\n         * Used for the ellipse.\n         *\n         * @type      {number}\n         * @apioption annotations.shapeOptions.xAxis\n         **/\n        /**\n         * The yAxis index to which the points should be attached.\n         * Used for the ellipse.\n         *\n         * @type      {number}\n         * @apioption annotations.shapeOptions.yAxis\n         **/\n        /**\n         * The width of the shape.\n         *\n         * @sample highcharts/annotations/shape/\n         *         Basic shape annotation\n         *\n         * @type      {number}\n         * @apioption annotations.shapeOptions.width\n         **/\n        /**\n         * The height of the shape.\n         *\n         * @sample highcharts/annotations/shape/\n         *         Basic shape annotation\n         *\n         * @type      {number}\n         * @apioption annotations.shapeOptions.height\n         */\n        /**\n         * The type of the shape.\n         * Available options are circle, rect and ellipse.\n         *\n         * @sample highcharts/annotations/shape/\n         *         Basic shape annotation\n         *\n         * @sample highcharts/annotations/ellipse/\n         *         Ellipse annotation\n         *\n         * @type      {string}\n         * @default   rect\n         * @apioption annotations.shapeOptions.type\n         */\n        /**\n         * The URL for an image to use as the annotation shape.\n         * Note, type has to be set to `'image'`.\n         *\n         * @see [annotations.shapeOptions.type](annotations.shapeOptions.type)\n         * @sample highcharts/annotations/shape-src/\n         *         Define a marker image url for annotations\n         *\n         * @type      {string}\n         * @apioption annotations.shapeOptions.src\n         */\n        /**\n         * Name of the dash style to use for the shape's stroke.\n         *\n         * @sample {highcharts} highcharts/plotoptions/series-dashstyle-all/\n         *         Possible values demonstrated\n         *\n         * @type      {Highcharts.DashStyleValue}\n         * @apioption annotations.shapeOptions.dashStyle\n         */\n        /**\n         * The color of the shape's stroke.\n         *\n         * @sample highcharts/annotations/shape/\n         *         Basic shape annotation\n         *\n         * @type {Highcharts.ColorString}\n         */\n        stroke: 'rgba(0, 0, 0, 0.75)',\n        /**\n         * The pixel stroke width of the shape.\n         *\n         * @sample highcharts/annotations/shape/\n         *         Basic shape annotation\n         */\n        strokeWidth: 1,\n        /**\n         * The color of the shape's fill.\n         *\n         * @sample highcharts/annotations/shape/\n         *         Basic shape annotation\n         *\n         * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         */\n        fill: 'rgba(0, 0, 0, 0.75)',\n        /**\n         * The radius of the shape.\n         *\n         * @sample highcharts/annotations/shape/\n         *         Basic shape annotation\n         */\n        r: 0,\n        /**\n         * Defines additional snapping area around an annotation\n         * making this annotation to focus. Defined in pixels.\n         */\n        snap: 2\n    },\n    /**\n     * Options for annotation's control points. Each control point\n     * inherits options from controlPointOptions object.\n     * Options from the controlPointOptions can be overwritten\n     * by options in a specific control point.\n     *\n     * @declare  Highcharts.AnnotationControlPointOptionsObject\n     * @requires modules/annotations\n     */\n    controlPointOptions: {\n        /**\n         * @type      {Highcharts.AnnotationControlPointPositionerFunction}\n         * @apioption annotations.controlPointOptions.positioner\n         */\n        /**\n         * @type {Highcharts.Dictionary<Function>}\n         */\n        events: {},\n        /**\n         * @type {Highcharts.SVGAttributes}\n         */\n        style: {\n            cursor: 'pointer',\n            fill: \"#ffffff\" /* Palette.backgroundColor */,\n            stroke: \"#000000\" /* Palette.neutralColor100 */,\n            'stroke-width': 2\n        },\n        height: 10,\n        symbol: 'circle',\n        visible: false,\n        width: 10\n    },\n    /**\n     * Event callback when annotation is added to the chart.\n     *\n     * @type      {Highcharts.EventCallbackFunction<Highcharts.Annotation>}\n     * @since     7.1.0\n     * @apioption annotations.events.add\n     */\n    /**\n     * Event callback when annotation is updated (e.g. drag and\n     * dropped or resized by control points).\n     *\n     * @type      {Highcharts.EventCallbackFunction<Highcharts.Annotation>}\n     * @since     7.1.0\n     * @apioption annotations.events.afterUpdate\n     */\n    /**\n     * Fires when the annotation is clicked.\n     *\n     * @type      {Highcharts.EventCallbackFunction<Highcharts.Annotation>}\n     * @since     7.1.0\n     * @apioption annotations.events.click\n     */\n    /**\n     * Fires when the annotation is dragged.\n     *\n     * @type      {Highcharts.EventCallbackFunction<Highcharts.Annotation>}\n     * @apioption annotations.events.drag\n     */\n    /**\n     * Event callback when annotation is removed from the chart.\n     *\n     * @type      {Highcharts.EventCallbackFunction<Highcharts.Annotation>}\n     * @since     7.1.0\n     * @apioption annotations.events.remove\n     */\n    /**\n     * Events available in annotations.\n     *\n     * @requires modules/annotations\n     */\n    events: {},\n    /**\n     * Option override for specific advanced annotation types. This collection\n     * is intended for general theming using `Highcharts.setOptions()`.\n     *\n     * @sample   highcharts/annotations/shape/\n     *           Themed crooked line annotation\n     * @product highstock\n     * @requires modules/annotations-advanced\n     */\n    types: {},\n    /**\n     * The Z index of the annotation.\n     */\n    zIndex: 6\n};\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Annotations_AnnotationDefaults = (AnnotationDefaults);\n\n;// ./code/es-modules/Extensions/Annotations/EventEmitter.js\n/* *\n *\n *  (c) 2009-2025 Highsoft, Black Label\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { doc, isTouchDevice } = (external_highcharts_src_js_default_default());\n\nconst { addEvent: EventEmitter_addEvent, fireEvent: EventEmitter_fireEvent, objectEach, pick: EventEmitter_pick, removeEvent } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * @private\n */\nclass EventEmitter {\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Add emitter events.\n     * @private\n     */\n    addEvents() {\n        const emitter = this, addMouseDownEvent = function (element) {\n            EventEmitter_addEvent(element, isTouchDevice ? 'touchstart' : 'mousedown', (e) => {\n                emitter.onMouseDown(e);\n            }, { passive: false });\n        };\n        addMouseDownEvent(this.graphic.element);\n        (emitter.labels || []).forEach((label) => {\n            if (label.options.useHTML &&\n                label.graphic.text &&\n                !label.graphic.text.foreignObject) {\n                // Mousedown event bound to HTML element (#13070).\n                addMouseDownEvent(label.graphic.text.element);\n            }\n        });\n        objectEach(emitter.options.events, (event, type) => {\n            const eventHandler = function (e) {\n                if (type !== 'click' || !emitter.cancelClick) {\n                    event.call(emitter, emitter.chart.pointer?.normalize(e), emitter.target);\n                }\n            };\n            if ((emitter.nonDOMEvents || []).indexOf(type) === -1) {\n                EventEmitter_addEvent(emitter.graphic.element, type, eventHandler, { passive: false });\n                if (emitter.graphic.div) {\n                    EventEmitter_addEvent(emitter.graphic.div, type, eventHandler, { passive: false });\n                }\n            }\n            else {\n                EventEmitter_addEvent(emitter, type, eventHandler, { passive: false });\n            }\n        });\n        if (emitter.options.draggable) {\n            EventEmitter_addEvent(emitter, 'drag', emitter.onDrag);\n            if (!emitter.graphic.renderer.styledMode) {\n                const cssPointer = {\n                    cursor: {\n                        x: 'ew-resize',\n                        y: 'ns-resize',\n                        xy: 'move'\n                    }[emitter.options.draggable]\n                };\n                emitter.graphic.css(cssPointer);\n                (emitter.labels || []).forEach((label) => {\n                    if (label.options.useHTML &&\n                        label.graphic.text &&\n                        !label.graphic.text.foreignObject) {\n                        label.graphic.text.css(cssPointer);\n                    }\n                });\n            }\n        }\n        if (!emitter.isUpdating) {\n            EventEmitter_fireEvent(emitter, 'add');\n        }\n    }\n    /**\n     * Destroy the event emitter.\n     */\n    destroy() {\n        this.removeDocEvents();\n        removeEvent(this);\n        this.hcEvents = null;\n    }\n    /**\n     * Map mouse move event to the radians.\n     * @private\n     */\n    mouseMoveToRadians(e, cx, cy) {\n        let prevDy = e.prevChartY - cy, prevDx = e.prevChartX - cx, dy = e.chartY - cy, dx = e.chartX - cx, temp;\n        if (this.chart.inverted) {\n            temp = prevDx;\n            prevDx = prevDy;\n            prevDy = temp;\n            temp = dx;\n            dx = dy;\n            dy = temp;\n        }\n        return Math.atan2(dy, dx) - Math.atan2(prevDy, prevDx);\n    }\n    /**\n     * Map mouse move to the scale factors.\n     * @private\n     */\n    mouseMoveToScale(e, cx, cy) {\n        const prevDx = e.prevChartX - cx, prevDy = e.prevChartY - cy, dx = e.chartX - cx, dy = e.chartY - cy;\n        let sx = (dx || 1) / (prevDx || 1), sy = (dy || 1) / (prevDy || 1);\n        if (this.chart.inverted) {\n            const temp = sy;\n            sy = sx;\n            sx = temp;\n        }\n        return {\n            x: sx,\n            y: sy\n        };\n    }\n    /**\n     * Map mouse move event to the distance between two following events.\n     * @private\n     */\n    mouseMoveToTranslation(e) {\n        let dx = e.chartX - e.prevChartX, dy = e.chartY - e.prevChartY, temp;\n        if (this.chart.inverted) {\n            temp = dy;\n            dy = dx;\n            dx = temp;\n        }\n        return {\n            x: dx,\n            y: dy\n        };\n    }\n    /**\n     * Drag and drop event. All basic annotations should share this\n     * capability as well as the extended ones.\n     * @private\n     */\n    onDrag(e) {\n        if (this.chart.isInsidePlot(e.chartX - this.chart.plotLeft, e.chartY - this.chart.plotTop, {\n            visiblePlotOnly: true\n        })) {\n            const translation = this.mouseMoveToTranslation(e);\n            if (this.options.draggable === 'x') {\n                translation.y = 0;\n            }\n            if (this.options.draggable === 'y') {\n                translation.x = 0;\n            }\n            const emitter = this;\n            if (emitter.points.length) {\n                emitter.translate(translation.x, translation.y);\n            }\n            else {\n                emitter.shapes.forEach((shape) => shape.translate(translation.x, translation.y));\n                emitter.labels.forEach((label) => label.translate(translation.x, translation.y));\n            }\n            this.redraw(false);\n        }\n    }\n    /**\n     * Mouse down handler.\n     * @private\n     */\n    onMouseDown(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        }\n        // On right click, do nothing:\n        if (e.button === 2) {\n            return;\n        }\n        const emitter = this, pointer = emitter.chart.pointer, \n        // Using experimental property on event object to check if event was\n        // created by touch on screen on hybrid device (#18122)\n        firesTouchEvents = (e?.sourceCapabilities?.firesTouchEvents) || false;\n        e = pointer?.normalize(e) || e;\n        let prevChartX = e.chartX, prevChartY = e.chartY;\n        emitter.cancelClick = false;\n        emitter.chart.hasDraggedAnnotation = true;\n        emitter.removeDrag = EventEmitter_addEvent(doc, isTouchDevice || firesTouchEvents ? 'touchmove' : 'mousemove', function (e) {\n            emitter.hasDragged = true;\n            e = pointer?.normalize(e) || e;\n            e.prevChartX = prevChartX;\n            e.prevChartY = prevChartY;\n            EventEmitter_fireEvent(emitter, 'drag', e);\n            prevChartX = e.chartX;\n            prevChartY = e.chartY;\n        }, isTouchDevice || firesTouchEvents ? { passive: false } : void 0);\n        emitter.removeMouseUp = EventEmitter_addEvent(doc, isTouchDevice || firesTouchEvents ? 'touchend' : 'mouseup', function () {\n            // Sometimes the target is the annotation and sometimes its the\n            // controllable\n            const annotation = EventEmitter_pick(emitter.target && emitter.target.annotation, emitter.target);\n            if (annotation) {\n                // Keep annotation selected after dragging control point\n                annotation.cancelClick = emitter.hasDragged;\n            }\n            emitter.cancelClick = emitter.hasDragged;\n            emitter.chart.hasDraggedAnnotation = false;\n            if (emitter.hasDragged) {\n                // ControlPoints vs Annotation:\n                EventEmitter_fireEvent(EventEmitter_pick(annotation, // #15952\n                emitter), 'afterUpdate');\n            }\n            emitter.hasDragged = false;\n            emitter.onMouseUp();\n        }, isTouchDevice || firesTouchEvents ? { passive: false } : void 0);\n    }\n    /**\n     * Mouse up handler.\n     */\n    onMouseUp() {\n        this.removeDocEvents();\n    }\n    /**\n     * Remove emitter document events.\n     * @private\n     */\n    removeDocEvents() {\n        if (this.removeDrag) {\n            this.removeDrag = this.removeDrag();\n        }\n        if (this.removeMouseUp) {\n            this.removeMouseUp = this.removeMouseUp();\n        }\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Annotations_EventEmitter = (EventEmitter);\n\n;// ./code/es-modules/Extensions/Annotations/ControlPoint.js\n/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { merge, pick: ControlPoint_pick } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * A control point class which is a connection between controllable\n * transform methods and a user actions.\n *\n * @requires modules/annotations\n *\n * @class\n * @name Highcharts.AnnotationControlPoint\n *\n * @hideconstructor\n *\n * @param {Highcharts.Chart} chart\n * A chart instance.\n *\n * @param {Highcharts.AnnotationControllable} target\n * A controllable instance which is a target for a control point.\n *\n * @param {Highcharts.AnnotationControlPointOptionsObject} options\n * An options object.\n *\n * @param {number} [index]\n * Point index.\n */\nclass ControlPoint extends Annotations_EventEmitter {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(chart, target, options, index) {\n        super();\n        /**\n         * List of events for `annotation.options.events` that should not be\n         * added to `annotation.graphic` but to the `annotation`.\n         * @private\n         * @name Highcharts.AnnotationControlPoint#nonDOMEvents\n         * @type {Array<string>}\n         */\n        this.nonDOMEvents = ['drag'];\n        this.chart = chart;\n        this.target = target;\n        this.options = options;\n        this.index = ControlPoint_pick(options.index, index);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Destroy the control point.\n     * @private\n     */\n    destroy() {\n        super.destroy();\n        if (this.graphic) {\n            this.graphic = this.graphic.destroy();\n        }\n        this.chart = null;\n        this.target = null;\n        this.options = null;\n    }\n    /**\n     * Redraw the control point.\n     * @private\n     * @param {boolean} [animation]\n     */\n    redraw(animation) {\n        this.graphic[animation ? 'animate' : 'attr'](this.options.positioner.call(this, this.target));\n    }\n    /**\n     * Render the control point.\n     * @private\n     */\n    render() {\n        const chart = this.chart, options = this.options;\n        this.graphic = chart.renderer\n            .symbol(options.symbol, 0, 0, options.width, options.height)\n            .add(chart.controlPointsGroup)\n            .css(options.style);\n        this.setVisibility(options.visible);\n        // `npm test -- --tests \"@highcharts/highcharts/annotations-advanced/*\"`\n        this.addEvents();\n    }\n    /**\n     * Set the visibility of the control point.\n     *\n     * @function Highcharts.AnnotationControlPoint#setVisibility\n     *\n     * @param {boolean} visible\n     * Visibility of the control point.\n     *\n     */\n    setVisibility(visible) {\n        this.graphic[visible ? 'show' : 'hide']();\n        this.options.visible = visible;\n    }\n    /**\n     * Update the control point.\n     *\n     * @function Highcharts.AnnotationControlPoint#update\n     *\n     * @param {Partial<Highcharts.AnnotationControlPointOptionsObject>} userOptions\n     * New options for the control point.\n     */\n    update(userOptions) {\n        const chart = this.chart, target = this.target, index = this.index, options = merge(true, this.options, userOptions);\n        this.destroy();\n        this.constructor(chart, target, options, index);\n        this.render(chart.controlPointsGroup);\n        this.redraw();\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Annotations_ControlPoint = (ControlPoint);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * Callback to modify annotation's positioner controls.\n *\n * @callback Highcharts.AnnotationControlPointPositionerFunction\n * @param {Highcharts.AnnotationControlPoint} this\n * @param {Highcharts.AnnotationControllable} target\n * @return {Highcharts.PositionObject}\n */\n(''); // Keeps doclets above in JS file\n\n;// external [\"../highcharts.js\",\"default\",\"SeriesRegistry\"]\nconst external_highcharts_src_js_default_SeriesRegistry_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].SeriesRegistry;\nvar external_highcharts_src_js_default_SeriesRegistry_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_SeriesRegistry_namespaceObject);\n;// ./code/es-modules/Extensions/Annotations/MockPoint.js\n/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { series: { prototype: seriesProto } } = (external_highcharts_src_js_default_SeriesRegistry_default());\n\nconst { defined: MockPoint_defined, fireEvent: MockPoint_fireEvent } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * A trimmed point object which imitates {@link Highchart.Point} class. It is\n * created when there is a need of pointing to some chart's position using axis\n * values or pixel values\n *\n * @requires modules/annotations\n *\n * @private\n * @class\n * @name Highcharts.AnnotationMockPoint\n *\n * @hideconstructor\n *\n * @param {Highcharts.Chart} chart\n * The chart instance.\n *\n * @param {Highcharts.AnnotationControllable|null} target\n * The related controllable.\n *\n * @param {Highcharts.AnnotationMockPointOptionsObject|Function} options\n * The options object.\n */\nclass MockPoint {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * Create a mock point from a real Highcharts point.\n     *\n     * @private\n     * @static\n     *\n     * @param {Highcharts.Point} point\n     *\n     * @return {Highcharts.AnnotationMockPoint}\n     * A mock point instance.\n     */\n    static fromPoint(point) {\n        return new MockPoint(point.series.chart, null, {\n            x: point.x,\n            y: point.y,\n            xAxis: point.series.xAxis,\n            yAxis: point.series.yAxis\n        });\n    }\n    /**\n     * Get the pixel position from the point like object.\n     *\n     * @private\n     * @static\n     *\n     * @param {Highcharts.AnnotationPointType} point\n     *\n     * @param {boolean} [paneCoordinates]\n     *        Whether the pixel position should be relative\n     *\n     * @return {Highcharts.PositionObject} pixel position\n     */\n    static pointToPixels(point, paneCoordinates) {\n        const series = point.series, chart = series.chart;\n        let x = point.plotX || 0, y = point.plotY || 0, plotBox;\n        if (chart.inverted) {\n            if (point.mock) {\n                x = point.plotY;\n                y = point.plotX;\n            }\n            else {\n                x = chart.plotWidth - (point.plotY || 0);\n                y = chart.plotHeight - (point.plotX || 0);\n            }\n        }\n        if (series && !paneCoordinates) {\n            plotBox = series.getPlotBox();\n            x += plotBox.translateX;\n            y += plotBox.translateY;\n        }\n        return {\n            x: x,\n            y: y\n        };\n    }\n    /**\n     * Get fresh mock point options from the point like object.\n     *\n     * @private\n     * @static\n     *\n     * @param {Highcharts.AnnotationPointType} point\n     *\n     * @return {Highcharts.AnnotationMockPointOptionsObject}\n     * A mock point's options.\n     */\n    static pointToOptions(point) {\n        return {\n            x: point.x,\n            y: point.y,\n            xAxis: point.series.xAxis,\n            yAxis: point.series.yAxis\n        };\n    }\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(chart, target, options) {\n        /* *\n         *\n         * Functions\n         *\n         * */\n        /**\n         * A flag indicating that a point is not the real one.\n         *\n         * @type {boolean}\n         * @default true\n         */\n        this.mock = true;\n        // Circular reference for formats and formatters\n        this.point = this;\n        /**\n         * A mock series instance imitating a real series from a real point.\n         *\n         * @name Annotation.AnnotationMockPoint#series\n         * @type {Highcharts.AnnotationMockSeries}\n         */\n        this.series = {\n            visible: true,\n            chart: chart,\n            getPlotBox: seriesProto.getPlotBox\n        };\n        /**\n         * @name Annotation.AnnotationMockPoint#target\n         * @type {Highcharts.AnnotationControllable|null}\n         */\n        this.target = target || null;\n        /**\n         * Options for the mock point.\n         *\n         * @name Annotation.AnnotationMockPoint#options\n         * @type {Highcharts.AnnotationsMockPointOptionsObject}\n         */\n        this.options = options;\n        /**\n         * If an xAxis is set it represents the point's value in terms of the\n         * xAxis.\n         *\n         * @name Annotation.AnnotationMockPoint#x\n         * @type {number|undefined}\n         */\n        /**\n         * If an yAxis is set it represents the point's value in terms of the\n         * yAxis.\n         *\n         * @name Annotation.AnnotationMockPoint#y\n         * @type {number|undefined}\n         */\n        /**\n         * It represents the point's pixel x coordinate relative to its plot\n         * box.\n         *\n         * @name Annotation.AnnotationMockPoint#plotX\n         * @type {number|undefined}\n         */\n        /**\n         * It represents the point's pixel y position relative to its plot box.\n         *\n         * @name Annotation.AnnotationMockPoint#plotY\n         * @type {number|undefined}\n         */\n        /**\n         * Whether the point is inside the plot box.\n         *\n         * @name Annotation.AnnotationMockPoint#isInside\n         * @type {boolean|undefined}\n         */\n        this.applyOptions(this.getOptions());\n    }\n    /**\n     * Apply options for the point.\n     * @private\n     * @param {Highcharts.AnnotationMockPointOptionsObject} options\n     */\n    applyOptions(options) {\n        this.command = options.command;\n        this.setAxis(options, 'x');\n        this.setAxis(options, 'y');\n        this.refresh();\n    }\n    /**\n     * Get the point's options.\n     * @private\n     * @return {Highcharts.AnnotationMockPointOptionsObject}\n     * The mock point's options.\n     */\n    getOptions() {\n        return this.hasDynamicOptions() ?\n            this.options(this.target) :\n            this.options;\n    }\n    /**\n     * Check if the point has dynamic options.\n     * @private\n     * @return {boolean}\n     * A positive flag if the point has dynamic options.\n     */\n    hasDynamicOptions() {\n        return typeof this.options === 'function';\n    }\n    /**\n     * Check if the point is inside its pane.\n     * @private\n     * @return {boolean} A flag indicating whether the point is inside the pane.\n     */\n    isInsidePlot() {\n        const plotX = this.plotX, plotY = this.plotY, xAxis = this.series.xAxis, yAxis = this.series.yAxis, e = {\n            x: plotX,\n            y: plotY,\n            isInsidePlot: true,\n            options: {}\n        };\n        if (xAxis) {\n            e.isInsidePlot = MockPoint_defined(plotX) && plotX >= 0 && plotX <= xAxis.len;\n        }\n        if (yAxis) {\n            e.isInsidePlot =\n                e.isInsidePlot &&\n                    MockPoint_defined(plotY) &&\n                    plotY >= 0 && plotY <= yAxis.len;\n        }\n        MockPoint_fireEvent(this.series.chart, 'afterIsInsidePlot', e);\n        return e.isInsidePlot;\n    }\n    /**\n     * Refresh point values and coordinates based on its options.\n     * @private\n     */\n    refresh() {\n        const series = this.series, xAxis = series.xAxis, yAxis = series.yAxis, options = this.getOptions();\n        if (xAxis) {\n            this.x = options.x;\n            this.plotX = xAxis.toPixels(options.x, true);\n        }\n        else {\n            this.x = void 0;\n            this.plotX = options.x;\n        }\n        if (yAxis) {\n            this.y = options.y;\n            this.plotY = yAxis.toPixels(options.y, true);\n        }\n        else {\n            this.y = null;\n            this.plotY = options.y;\n        }\n        this.isInside = this.isInsidePlot();\n    }\n    /**\n     * Refresh point options based on its plot coordinates.\n     * @private\n     */\n    refreshOptions() {\n        const series = this.series, xAxis = series.xAxis, yAxis = series.yAxis;\n        this.x = this.options.x = xAxis ?\n            this.options.x = xAxis.toValue(this.plotX, true) :\n            this.plotX;\n        this.y = this.options.y = yAxis ?\n            yAxis.toValue(this.plotY, true) :\n            this.plotY;\n    }\n    /**\n     * Rotate the point.\n     * @private\n     * @param {number} cx origin x rotation\n     * @param {number} cy origin y rotation\n     * @param {number} radians\n     */\n    rotate(cx, cy, radians) {\n        if (!this.hasDynamicOptions()) {\n            const cos = Math.cos(radians), sin = Math.sin(radians), x = this.plotX - cx, y = this.plotY - cy, tx = x * cos - y * sin, ty = x * sin + y * cos;\n            this.plotX = tx + cx;\n            this.plotY = ty + cy;\n            this.refreshOptions();\n        }\n    }\n    /**\n     * Scale the point.\n     *\n     * @private\n     *\n     * @param {number} cx\n     * Origin x transformation.\n     *\n     * @param {number} cy\n     * Origin y transformation.\n     *\n     * @param {number} sx\n     * Scale factor x.\n     *\n     * @param {number} sy\n     * Scale factor y.\n     */\n    scale(cx, cy, sx, sy) {\n        if (!this.hasDynamicOptions()) {\n            const x = this.plotX * sx, y = this.plotY * sy, tx = (1 - sx) * cx, ty = (1 - sy) * cy;\n            this.plotX = tx + x;\n            this.plotY = ty + y;\n            this.refreshOptions();\n        }\n    }\n    /**\n     * Set x or y axis.\n     * @private\n     * @param {Highcharts.AnnotationMockPointOptionsObject} options\n     * @param {string} xOrY\n     * 'x' or 'y' string literal\n     */\n    setAxis(options, xOrY) {\n        const axisName = (xOrY + 'Axis'), axisOptions = options[axisName], chart = this.series.chart;\n        this.series[axisName] =\n            typeof axisOptions === 'object' ?\n                axisOptions :\n                MockPoint_defined(axisOptions) ?\n                    (chart[axisName][axisOptions] ||\n                        // @todo v--- (axisName)[axisOptions] ?\n                        chart.get(axisOptions)) :\n                    null;\n    }\n    /**\n     * Transform the mock point to an anchor (relative position on the chart).\n     * @private\n     * @return {Array<number>}\n     * A quadruple of numbers which denotes x, y, width and height of the box\n     **/\n    toAnchor() {\n        const anchor = [this.plotX, this.plotY, 0, 0];\n        if (this.series.chart.inverted) {\n            anchor[0] = this.plotY;\n            anchor[1] = this.plotX;\n        }\n        return anchor;\n    }\n    /**\n     * Translate the point.\n     *\n     * @private\n     *\n     * @param {number|undefined} cx\n     * Origin x transformation.\n     *\n     * @param {number|undefined} cy\n     * Origin y transformation.\n     *\n     * @param {number} dx\n     * Translation for x coordinate.\n     *\n     * @param {number} dy\n     * Translation for y coordinate.\n     **/\n    translate(_cx, _cy, dx, dy) {\n        if (!this.hasDynamicOptions()) {\n            this.plotX += dx;\n            this.plotY += dy;\n            this.refreshOptions();\n        }\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Annotations_MockPoint = (MockPoint);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * @private\n * @interface Highcharts.AnnotationMockLabelOptionsObject\n */ /**\n* Point instance of the point.\n* @name Highcharts.AnnotationMockLabelOptionsObject#point\n* @type {Highcharts.AnnotationMockPoint}\n*/ /**\n* X value translated to x axis scale.\n* @name Highcharts.AnnotationMockLabelOptionsObject#x\n* @type {number|null}\n*/ /**\n* Y value translated to y axis scale.\n* @name Highcharts.AnnotationMockLabelOptionsObject#y\n* @type {number|null}\n*/\n/**\n * Object of shape point.\n *\n * @interface Highcharts.AnnotationMockPointOptionsObject\n */ /**\n* The x position of the point. Units can be either in axis\n* or chart pixel coordinates.\n*\n* @type      {number}\n* @name      Highcharts.AnnotationMockPointOptionsObject.x\n*/ /**\n* The y position of the point. Units can be either in axis\n* or chart pixel coordinates.\n*\n* @type      {number}\n* @name      Highcharts.AnnotationMockPointOptionsObject.y\n*/ /**\n* This number defines which xAxis the point is connected to.\n* It refers to either the axis id or the index of the axis in\n* the xAxis array. If the option is not configured or the axis\n* is not found the point's x coordinate refers to the chart\n* pixels.\n*\n* @type      {number|string|null}\n* @name      Highcharts.AnnotationMockPointOptionsObject.xAxis\n*/ /**\n* This number defines which yAxis the point is connected to.\n* It refers to either the axis id or the index of the axis in\n* the yAxis array. If the option is not configured or the axis\n* is not found the point's y coordinate refers to the chart\n* pixels.\n*\n* @type      {number|string|null}\n* @name      Highcharts.AnnotationMockPointOptionsObject.yAxis\n*/\n/**\n * Callback function that returns the annotation shape point.\n *\n * @callback Highcharts.AnnotationMockPointFunction\n *\n * @param  {Highcharts.Annotation} annotation\n *         An annotation instance.\n *\n * @return {Highcharts.AnnotationMockPointOptionsObject}\n *         Annotations shape point.\n */\n/**\n * A mock series instance imitating a real series from a real point.\n * @private\n * @interface Highcharts.AnnotationMockSeries\n */ /**\n* Whether a series is visible.\n* @name Highcharts.AnnotationMockSeries#visible\n* @type {boolean}\n*/ /**\n* A chart instance.\n* @name Highcharts.AnnotationMockSeries#chart\n* @type {Highcharts.Chart}\n*/ /**\n* @name Highcharts.AnnotationMockSeries#getPlotBox\n* @type {Function}\n*/\n/**\n * Indicates if this is a mock point for an annotation.\n * @name Highcharts.Point#mock\n * @type {boolean|undefined}\n */\n(''); // Keeps doclets above in JS file\n\n;// ./code/es-modules/Extensions/Annotations/ControlTarget.js\n/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\n/* *\n *\n *  Composition Namespace\n *\n * */\nvar ControlTarget;\n(function (ControlTarget) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Add control points.\n     * @private\n     */\n    function addControlPoints() {\n        const controlPoints = this.controlPoints, controlPointsOptions = this.options.controlPoints || [];\n        controlPointsOptions.forEach((controlPointOptions, i) => {\n            const options = external_highcharts_src_js_default_default().merge(this.options.controlPointOptions, controlPointOptions);\n            if (!options.index) {\n                options.index = i;\n            }\n            controlPointsOptions[i] = options;\n            controlPoints.push(new Annotations_ControlPoint(this.chart, this, options));\n        });\n    }\n    /**\n     * Returns object which denotes anchor position - relative and absolute.\n     * @private\n     * @param {Highcharts.AnnotationPointType} point\n     * An annotation point.\n     *\n     * @return {Highcharts.AnnotationAnchorObject}\n     * An annotation anchor.\n     */\n    function anchor(point) {\n        const plotBox = point.series.getPlotBox(), chart = point.series.chart, box = point.mock ?\n            point.toAnchor() :\n            chart.tooltip &&\n                chart.tooltip.getAnchor.call({\n                    chart: point.series.chart\n                }, point) ||\n                [0, 0, 0, 0], anchor = {\n            x: box[0] + (this.options.x || 0),\n            y: box[1] + (this.options.y || 0),\n            height: box[2] || 0,\n            width: box[3] || 0\n        };\n        return {\n            relativePosition: anchor,\n            absolutePosition: external_highcharts_src_js_default_default().merge(anchor, {\n                x: anchor.x + (point.mock ? plotBox.translateX : chart.plotLeft),\n                y: anchor.y + (point.mock ? plotBox.translateY : chart.plotTop)\n            })\n        };\n    }\n    /**\n     * Adds shared functions to be used with targets of ControlPoint.\n     * @private\n     */\n    function compose(ControlTargetClass) {\n        const controlProto = ControlTargetClass.prototype;\n        if (!controlProto.addControlPoints) {\n            external_highcharts_src_js_default_default().merge(true, controlProto, {\n                addControlPoints,\n                anchor,\n                destroyControlTarget,\n                getPointsOptions,\n                linkPoints,\n                point,\n                redrawControlPoints,\n                renderControlPoints,\n                transform,\n                transformPoint,\n                translate,\n                translatePoint\n            });\n        }\n    }\n    ControlTarget.compose = compose;\n    /**\n     * Destroy control points.\n     * @private\n     */\n    function destroyControlTarget() {\n        this.controlPoints.forEach((controlPoint) => controlPoint.destroy());\n        this.chart = null;\n        this.controlPoints = null;\n        this.points = null;\n        this.options = null;\n        if (this.annotation) {\n            this.annotation = null;\n        }\n    }\n    /**\n     * Get the points options.\n     * @private\n     * @return {Array<Highcharts.PointOptionsObject>}\n     * An array of points' options.\n     */\n    function getPointsOptions() {\n        const options = this.options;\n        return (options.points ||\n            (options.point && external_highcharts_src_js_default_default().splat(options.point)));\n    }\n    /**\n     * Find point-like objects based on points options.\n     * @private\n     * @return {Array<Annotation.PointLike>}\n     *         An array of point-like objects.\n     */\n    function linkPoints() {\n        const pointsOptions = this.getPointsOptions(), points = this.points, len = (pointsOptions && pointsOptions.length) || 0;\n        let i, point;\n        for (i = 0; i < len; i++) {\n            point = this.point(pointsOptions[i], points[i]);\n            if (!point) {\n                points.length = 0;\n                return;\n            }\n            if (point.mock) {\n                point.refresh();\n            }\n            points[i] = point;\n        }\n        return points;\n    }\n    /**\n     * Map point's options to a point-like object.\n     * @private\n     * @param {string|Function|Highcharts.AnnotationMockPointOptionsObject|Highcharts.AnnotationPointType} pointOptions\n     *        Point's options.\n     * @param {Highcharts.AnnotationPointType} point\n     *        A point-like instance.\n     * @return {Highcharts.AnnotationPointType|null}\n     *         If the point is found/set returns this point, otherwise null\n     */\n    function point(pointOptions, point) {\n        if (pointOptions && pointOptions.series) {\n            return pointOptions;\n        }\n        if (!point || point.series === null) {\n            if (external_highcharts_src_js_default_default().isObject(pointOptions)) {\n                point = new Annotations_MockPoint(this.chart, this, pointOptions);\n            }\n            else if (external_highcharts_src_js_default_default().isString(pointOptions)) {\n                point = this.chart.get(pointOptions) || null;\n            }\n            else if (typeof pointOptions === 'function') {\n                const pointConfig = pointOptions.call(point, this);\n                point = pointConfig.series ?\n                    pointConfig :\n                    new Annotations_MockPoint(this.chart, this, pointOptions);\n            }\n        }\n        return point;\n    }\n    /**\n     * Redraw control points.\n     * @private\n     */\n    function redrawControlPoints(animation) {\n        this.controlPoints.forEach((controlPoint) => controlPoint.redraw(animation));\n    }\n    /**\n     * Render control points.\n     * @private\n     */\n    function renderControlPoints() {\n        this.controlPoints.forEach((controlPoint) => controlPoint.render());\n    }\n    /**\n     * Transform control points with a specific transformation.\n     * @private\n     * @param {string} transformation\n     *        A transformation name\n     * @param {number|null} cx\n     *        Origin x transformation\n     * @param {number|null} cy\n     *        Origin y transformation\n     * @param {number} p1\n     *        Param for the transformation\n     * @param {number} [p2]\n     *        Param for the transformation\n     */\n    function transform(transformation, cx, cy, p1, p2) {\n        if (this.chart.inverted) {\n            const temp = cx;\n            cx = cy;\n            cy = temp;\n        }\n        this.points.forEach((_point, i) => (this.transformPoint(transformation, cx, cy, p1, p2, i)), this);\n    }\n    /**\n     * Transform a point with a specific transformation\n     * If a transformed point is a real point it is replaced with\n     * the mock point.\n     * @private\n     * @param {string} transformation\n     *        A transformation name\n     * @param {number|null} cx\n     *        Origin x transformation\n     * @param {number|null} cy\n     *        Origin y transformation\n     * @param {number} p1\n     *        Param for the transformation\n     * @param {number|undefined} p2\n     *        Param for the transformation\n     * @param {number} i\n     *        Index of the point\n     */\n    function transformPoint(transformation, cx, cy, p1, p2, i) {\n        let point = this.points[i];\n        if (!point.mock) {\n            point = this.points[i] = Annotations_MockPoint.fromPoint(point);\n        }\n        point[transformation](cx, cy, p1, p2);\n    }\n    /**\n     * Translate control points.\n     * @private\n     * @param {number} dx\n     *        Translation for x coordinate\n     * @param {number} dy\n     *        Translation for y coordinate\n     **/\n    function translate(dx, dy) {\n        this.transform('translate', null, null, dx, dy);\n    }\n    /**\n     * Translate a specific control point.\n     * @private\n     * @param {number} dx\n     *        Translation for x coordinate\n     * @param {number} dy\n     *        Translation for y coordinate\n     * @param {number} i\n     *        Index of the point\n     **/\n    function translatePoint(dx, dy, i) {\n        this.transformPoint('translate', null, null, dx, dy, i);\n    }\n})(ControlTarget || (ControlTarget = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Annotations_ControlTarget = (ControlTarget);\n\n;// ./code/es-modules/Extensions/Annotations/Controllables/Controllable.js\n/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { merge: Controllable_merge } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * It provides methods for handling points, control points\n * and points transformations.\n * @private\n */\nclass Controllable {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(annotation, options, index, itemType) {\n        this.annotation = annotation;\n        this.chart = annotation.chart;\n        this.collection = (itemType === 'label' ? 'labels' : 'shapes');\n        this.controlPoints = [];\n        this.options = options;\n        this.points = [];\n        this.index = index;\n        this.itemType = itemType;\n        this.init(annotation, options, index);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Redirect attr usage on the controllable graphic element.\n     * @private\n     */\n    attr(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ..._args) {\n        this.graphic.attr.apply(this.graphic, arguments);\n    }\n    /**\n     * Utility function for mapping item's options\n     * to element's attribute\n     * @private\n     * @param {Highcharts.AnnotationsLabelsOptions|Highcharts.AnnotationsShapesOptions} options\n     * @return {Highcharts.SVGAttributes}\n     *         Mapped options.\n     */\n    attrsFromOptions(options) {\n        const map = this.constructor.attrsMap, attrs = {}, styledMode = this.chart.styledMode;\n        let key, mappedKey;\n        for (key in options) { // eslint-disable-line guard-for-in\n            mappedKey = map[key];\n            if (typeof map[key] !== 'undefined' &&\n                (!styledMode ||\n                    ['fill', 'stroke', 'stroke-width']\n                        .indexOf(mappedKey) === -1)) {\n                attrs[mappedKey] = options[key];\n            }\n        }\n        return attrs;\n    }\n    /**\n     * Destroy a controllable.\n     * @private\n     */\n    destroy() {\n        if (this.graphic) {\n            this.graphic = this.graphic.destroy();\n        }\n        if (this.tracker) {\n            this.tracker = this.tracker.destroy();\n        }\n        this.destroyControlTarget();\n    }\n    /**\n     * Init the controllable\n     * @private\n     */\n    init(annotation, options, index) {\n        this.annotation = annotation;\n        this.chart = annotation.chart;\n        this.options = options;\n        this.points = [];\n        this.controlPoints = [];\n        this.index = index;\n        this.linkPoints();\n        this.addControlPoints();\n    }\n    /**\n     * Redraw a controllable.\n     * @private\n     */\n    redraw(animation) {\n        this.redrawControlPoints(animation);\n    }\n    /**\n     * Render a controllable.\n     * @private\n     */\n    render(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _parentGroup) {\n        if (this.options.className && this.graphic) {\n            this.graphic.addClass(this.options.className);\n        }\n        this.renderControlPoints();\n    }\n    /**\n     * Rotate a controllable.\n     * @private\n     * @param {number} cx\n     *        Origin x rotation\n     * @param {number} cy\n     *        Origin y rotation\n     * @param {number} radians\n     **/\n    rotate(cx, cy, radians) {\n        this.transform('rotate', cx, cy, radians);\n    }\n    /**\n     * Scale a controllable.\n     * @private\n     * @param {number} cx\n     *        Origin x rotation\n     * @param {number} cy\n     *        Origin y rotation\n     * @param {number} sx\n     *        Scale factor x\n     * @param {number} sy\n     *        Scale factor y\n     */\n    scale(cx, cy, sx, sy) {\n        this.transform('scale', cx, cy, sx, sy);\n    }\n    /**\n     * Set control points' visibility.\n     * @private\n     */\n    setControlPointsVisibility(visible) {\n        this.controlPoints.forEach((controlPoint) => {\n            controlPoint.setVisibility(visible);\n        });\n    }\n    /**\n     * Check if a controllable should be rendered/redrawn.\n     * @private\n     * @return {boolean}\n     *         Whether a controllable should be drawn.\n     */\n    shouldBeDrawn() {\n        return !!this.points.length;\n    }\n    /**\n     * Translate shape within controllable item.\n     * Replaces `controllable.translate` method.\n     * @private\n     * @param {number} dx\n     *        Translation for x coordinate\n     * @param {number} dy\n     *        Translation for y coordinate\n     * @param {boolean|undefined} translateSecondPoint\n     *        If the shape has two points attached to it, this option allows you\n     *        to translate also the second point.\n     */\n    translateShape(dx, dy, translateSecondPoint) {\n        const chart = this.annotation.chart, \n        // Annotation.options\n        shapeOptions = this.annotation.userOptions, \n        // Chart.options.annotations\n        annotationIndex = chart.annotations.indexOf(this.annotation), chartOptions = chart.options.annotations[annotationIndex];\n        this.translatePoint(dx, dy, 0);\n        if (translateSecondPoint) {\n            this.translatePoint(dx, dy, 1);\n        }\n        // Options stored in:\n        // - chart (for exporting)\n        // - current config (for redraws)\n        chartOptions[this.collection][this.index]\n            .point = this.options.point;\n        shapeOptions[this.collection][this.index]\n            .point = this.options.point;\n    }\n    /**\n     * Update a controllable.\n     * @private\n     */\n    update(newOptions) {\n        const annotation = this.annotation, options = Controllable_merge(true, this.options, newOptions), parentGroup = this.graphic.parentGroup, Constructor = this.constructor;\n        this.destroy();\n        const newControllable = new Constructor(annotation, options, this.index, this.itemType);\n        Controllable_merge(true, this, newControllable);\n        this.render(parentGroup);\n        this.redraw();\n    }\n}\nAnnotations_ControlTarget.compose(Controllable);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Controllables_Controllable = (Controllable);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * An object which denotes a controllable's anchor positions - relative and\n * absolute.\n *\n * @private\n * @interface Highcharts.AnnotationAnchorObject\n */ /**\n* Relative to the plot area position\n* @name Highcharts.AnnotationAnchorObject#relativePosition\n* @type {Highcharts.BBoxObject}\n*/ /**\n* Absolute position\n* @name Highcharts.AnnotationAnchorObject#absolutePosition\n* @type {Highcharts.BBoxObject}\n*/\n/**\n * @interface Highcharts.AnnotationControllable\n */ /**\n* @name Highcharts.AnnotationControllable#annotation\n* @type {Highcharts.Annotation}\n*/ /**\n* @name Highcharts.AnnotationControllable#chart\n* @type {Highcharts.Chart}\n*/ /**\n* @name Highcharts.AnnotationControllable#collection\n* @type {string}\n*/ /**\n* @private\n* @name Highcharts.AnnotationControllable#controlPoints\n* @type {Array<Highcharts.AnnotationControlPoint>}\n*/ /**\n* @name Highcharts.AnnotationControllable#points\n* @type {Array<Highcharts.Point>}\n*/\n(''); // Keeps doclets above in JS file\n\n;// ./code/es-modules/Extensions/Annotations/Controllables/ControllableDefaults.js\n/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/**\n * Options for configuring markers for annotations.\n *\n * An example of the arrow marker:\n * <pre>\n * {\n *   arrow: {\n *     id: 'arrow',\n *     tagName: 'marker',\n *     refY: 5,\n *     refX: 5,\n *     markerWidth: 10,\n *     markerHeight: 10,\n *     children: [{\n *       tagName: 'path',\n *       attrs: {\n *         d: 'M 0 0 L 10 5 L 0 10 Z',\n *         'stroke-width': 0\n *       }\n *     }]\n *   }\n * }\n * </pre>\n *\n * @sample highcharts/annotations/custom-markers/\n *         Define a custom marker for annotations\n *\n * @sample highcharts/css/annotations-markers/\n *         Define markers in a styled mode\n *\n * @type         {Highcharts.Dictionary<Highcharts.ASTNode>}\n * @since        6.0.0\n * @optionparent defs\n */\nconst defaultMarkers = {\n    /**\n     * @type {Highcharts.ASTNode}\n     */\n    arrow: {\n        tagName: 'marker',\n        attributes: {\n            id: 'arrow',\n            refY: 5,\n            refX: 9,\n            markerWidth: 10,\n            markerHeight: 10\n        },\n        /**\n         * @type {Array<Highcharts.DefsOptions>}\n         */\n        children: [{\n                tagName: 'path',\n                attributes: {\n                    d: 'M 0 0 L 10 5 L 0 10 Z', // Triangle (used as an arrow)\n                    'stroke-width': 0\n                }\n            }]\n    },\n    /**\n     * @type {Highcharts.ASTNode}\n     */\n    'reverse-arrow': {\n        tagName: 'marker',\n        attributes: {\n            id: 'reverse-arrow',\n            refY: 5,\n            refX: 1,\n            markerWidth: 10,\n            markerHeight: 10\n        },\n        children: [{\n                tagName: 'path',\n                attributes: {\n                    // Reverse triangle (used as an arrow)\n                    d: 'M 0 5 L 10 0 L 10 10 Z',\n                    'stroke-width': 0\n                }\n            }]\n    }\n};\n/* *\n *\n *  Default Export\n *\n * */\nconst ControllableDefaults = {\n    defaultMarkers\n};\n/* harmony default export */ const Controllables_ControllableDefaults = (ControllableDefaults);\n\n;// ./code/es-modules/Extensions/Annotations/Controllables/ControllablePath.js\n/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { defaultMarkers: ControllablePath_defaultMarkers } = Controllables_ControllableDefaults;\n\n\nconst { addEvent: ControllablePath_addEvent, defined: ControllablePath_defined, extend, merge: ControllablePath_merge, uniqueKey } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\nconst markerEndSetter = createMarkerSetter('marker-end');\nconst markerStartSetter = createMarkerSetter('marker-start');\n// See TRACKER_FILL in highcharts.js\nconst TRACKER_FILL = 'rgba(192,192,192,' + ((external_highcharts_src_js_default_default()).svg ? 0.0001 : 0.002) + ')';\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction createMarkerSetter(markerType) {\n    return function (value) {\n        this.attr(markerType, 'url(#' + value + ')');\n    };\n}\n/**\n * @private\n */\nfunction onChartAfterGetContainer() {\n    this.options.defs = ControllablePath_merge(ControllablePath_defaultMarkers, this.options.defs || {});\n    ///  objectEach(this.options.defs, function (def): void {\n    //     const attributes = def.attributes;\n    //     if (\n    //         def.tagName === 'marker' &&\n    //         attributes &&\n    //         attributes.id &&\n    //         attributes.display !== 'none'\n    //     ) {\n    //         this.renderer.addMarker(attributes.id, def);\n    //     }\n    // }, this);\n}\n/**\n * @private\n */\nfunction svgRendererAddMarker(id, markerOptions) {\n    const options = { attributes: { id } };\n    const attrs = {\n        stroke: markerOptions.color || 'none',\n        fill: markerOptions.color || 'rgba(0, 0, 0, 0.75)'\n    };\n    options.children = (markerOptions.children &&\n        markerOptions.children.map(function (child) {\n            return ControllablePath_merge(attrs, child);\n        }));\n    const ast = ControllablePath_merge(true, {\n        attributes: {\n            markerWidth: 20,\n            markerHeight: 20,\n            refX: 0,\n            refY: 0,\n            orient: 'auto'\n        }\n    }, markerOptions, options);\n    const marker = this.definition(ast);\n    marker.id = id;\n    return marker;\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * A controllable path class.\n *\n * @requires modules/annotations\n *\n * @private\n * @class\n * @name Highcharts.AnnotationControllablePath\n *\n * @param {Highcharts.Annotation}\n * Related annotation.\n *\n * @param {Highcharts.AnnotationsShapeOptions} options\n * A path's options object.\n *\n * @param {number} index\n * Index of the path.\n */\nclass ControllablePath extends Controllables_Controllable {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    static compose(ChartClass, SVGRendererClass) {\n        const svgRendererProto = SVGRendererClass.prototype;\n        if (!svgRendererProto.addMarker) {\n            ControllablePath_addEvent(ChartClass, 'afterGetContainer', onChartAfterGetContainer);\n            svgRendererProto.addMarker = svgRendererAddMarker;\n        }\n    }\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    constructor(annotation, options, index) {\n        super(annotation, options, index, 'shape');\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        this.type = 'path';\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Map the controllable path to 'd' path attribute.\n     *\n     * @return {Highcharts.SVGPathArray|null}\n     * A path's d attribute.\n     */\n    toD() {\n        const dOption = this.options.d;\n        if (dOption) {\n            return typeof dOption === 'function' ?\n                dOption.call(this) :\n                dOption;\n        }\n        const points = this.points, len = points.length, d = [];\n        let showPath = len, point = points[0], position = showPath && this.anchor(point).absolutePosition, pointIndex = 0, command;\n        if (position) {\n            d.push(['M', position.x, position.y]);\n            while (++pointIndex < len && showPath) {\n                point = points[pointIndex];\n                command = point.command || 'L';\n                position = this.anchor(point).absolutePosition;\n                if (command === 'M') {\n                    d.push([command, position.x, position.y]);\n                }\n                else if (command === 'L') {\n                    d.push([command, position.x, position.y]);\n                }\n                else if (command === 'Z') {\n                    d.push([command]);\n                }\n                showPath = point.series.visible;\n            }\n        }\n        return (showPath && this.graphic ?\n            this.chart.renderer.crispLine(d, this.graphic.strokeWidth()) :\n            null);\n    }\n    shouldBeDrawn() {\n        return super.shouldBeDrawn() || !!this.options.d;\n    }\n    render(parent) {\n        const options = this.options, attrs = this.attrsFromOptions(options);\n        this.graphic = this.annotation.chart.renderer\n            .path([['M', 0, 0]])\n            .attr(attrs)\n            .add(parent);\n        this.tracker = this.annotation.chart.renderer\n            .path([['M', 0, 0]])\n            .addClass('highcharts-tracker-line')\n            .attr({\n            zIndex: 2\n        })\n            .add(parent);\n        if (!this.annotation.chart.styledMode) {\n            this.tracker.attr({\n                'stroke-linejoin': 'round', // #1225\n                stroke: TRACKER_FILL,\n                fill: TRACKER_FILL,\n                'stroke-width': this.graphic.strokeWidth() +\n                    options.snap * 2\n            });\n        }\n        super.render();\n        extend(this.graphic, { markerStartSetter, markerEndSetter });\n        this.setMarkers(this);\n    }\n    redraw(animation) {\n        if (this.graphic) {\n            const d = this.toD(), action = animation ? 'animate' : 'attr';\n            if (d) {\n                this.graphic[action]({ d: d });\n                this.tracker[action]({ d: d });\n            }\n            else {\n                this.graphic.attr({ d: 'M 0 ' + -9e9 });\n                this.tracker.attr({ d: 'M 0 ' + -9e9 });\n            }\n            this.graphic.placed = this.tracker.placed = !!d;\n        }\n        super.redraw(animation);\n    }\n    /**\n     * Set markers.\n     * @private\n     * @param {Highcharts.AnnotationControllablePath} item\n     */\n    setMarkers(item) {\n        const itemOptions = item.options, chart = item.chart, defs = chart.options.defs, fill = itemOptions.fill, color = ControllablePath_defined(fill) && fill !== 'none' ?\n            fill :\n            itemOptions.stroke;\n        const setMarker = function (markerType) {\n            const markerId = itemOptions[markerType];\n            let def, predefinedMarker, key, marker;\n            if (markerId) {\n                for (key in defs) { // eslint-disable-line guard-for-in\n                    def = defs[key];\n                    if ((markerId === (def.attributes && def.attributes.id) ||\n                        // Legacy, for\n                        // unit-tests/annotations/annotations-shapes\n                        markerId === def.id) &&\n                        def.tagName === 'marker') {\n                        predefinedMarker = def;\n                        break;\n                    }\n                }\n                if (predefinedMarker) {\n                    marker = item[markerType] = chart.renderer\n                        .addMarker((itemOptions.id || uniqueKey()) + '-' + markerId, ControllablePath_merge(predefinedMarker, { color: color }));\n                    item.attr(markerType, marker.getAttribute('id'));\n                }\n            }\n        };\n        ['markerStart', 'markerEnd']\n            .forEach(setMarker);\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\n/**\n * A map object which allows to map options attributes to element attributes\n *\n * @name Highcharts.AnnotationControllablePath.attrsMap\n * @type {Highcharts.Dictionary<string>}\n */\nControllablePath.attrsMap = {\n    dashStyle: 'dashstyle',\n    strokeWidth: 'stroke-width',\n    stroke: 'stroke',\n    fill: 'fill',\n    zIndex: 'zIndex'\n};\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Controllables_ControllablePath = (ControllablePath);\n\n;// ./code/es-modules/Extensions/Annotations/Controllables/ControllableRect.js\n/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\nconst { merge: ControllableRect_merge } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * A controllable rect class.\n *\n * @requires modules/annotations\n *\n * @private\n * @class\n * @name Highcharts.AnnotationControllableRect\n *\n * @param {Highcharts.Annotation} annotation\n * An annotation instance.\n *\n * @param {Highcharts.AnnotationsShapeOptions} options\n * A rect's options.\n *\n * @param {number} index\n * Index of the rectangle\n */\nclass ControllableRect extends Controllables_Controllable {\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    constructor(annotation, options, index) {\n        super(annotation, options, index, 'shape');\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        this.type = 'rect';\n        this.translate = super.translateShape;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    render(parent) {\n        const attrs = this.attrsFromOptions(this.options);\n        this.graphic = this.annotation.chart.renderer\n            .rect(0, -9e9, 0, 0)\n            .attr(attrs)\n            .add(parent);\n        super.render();\n    }\n    redraw(animation) {\n        if (this.graphic) {\n            const position = this.anchor(this.points[0]).absolutePosition;\n            if (position) {\n                this.graphic[animation ? 'animate' : 'attr']({\n                    x: position.x,\n                    y: position.y,\n                    width: this.options.width,\n                    height: this.options.height\n                });\n            }\n            else {\n                this.attr({\n                    x: 0,\n                    y: -9e9\n                });\n            }\n            this.graphic.placed = Boolean(position);\n        }\n        super.redraw(animation);\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\n/**\n * A map object which allows to map options attributes to element attributes\n *\n * @type {Annotation.ControllableRect.AttrsMap}\n */\nControllableRect.attrsMap = ControllableRect_merge(Controllables_ControllablePath.attrsMap, {\n    width: 'width',\n    height: 'height'\n});\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Controllables_ControllableRect = (ControllableRect);\n\n;// ./code/es-modules/Extensions/Annotations/Controllables/ControllableCircle.js\n/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\nconst { merge: ControllableCircle_merge } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * A controllable circle class.\n *\n * @requires modules/annotations\n *\n * @private\n * @class\n * @name Highcharts.AnnotationControllableCircle\n *\n * @param {Highcharts.Annotation} annotation an annotation instance\n * @param {Highcharts.AnnotationsShapeOptions} options a shape's options\n * @param {number} index of the circle\n */\nclass ControllableCircle extends Controllables_Controllable {\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    constructor(annotation, options, index) {\n        super(annotation, options, index, 'shape');\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        this.type = 'circle';\n        this.translate = super.translateShape;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    redraw(animation) {\n        if (this.graphic) {\n            const position = this.anchor(this.points[0]).absolutePosition;\n            if (position) {\n                this.graphic[animation ? 'animate' : 'attr']({\n                    x: position.x,\n                    y: position.y,\n                    r: this.options.r\n                });\n            }\n            else {\n                this.graphic.attr({\n                    x: 0,\n                    y: -9e9\n                });\n            }\n            this.graphic.placed = !!position;\n        }\n        super.redraw.call(this, animation);\n    }\n    /**\n     * @private\n     */\n    render(parent) {\n        const attrs = this.attrsFromOptions(this.options);\n        this.graphic = this.annotation.chart.renderer\n            .circle(0, -9e9, 0)\n            .attr(attrs)\n            .add(parent);\n        super.render();\n    }\n    /**\n     * Set the radius.\n     * @private\n     * @param {number} r\n     *        A radius to be set\n     */\n    setRadius(r) {\n        this.options.r = r;\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\n/**\n * A map object which allows to map options attributes to element\n * attributes.\n *\n * @name Highcharts.AnnotationControllableCircle.attrsMap\n * @type {Highcharts.Dictionary<string>}\n */\nControllableCircle.attrsMap = ControllableCircle_merge(Controllables_ControllablePath.attrsMap, { r: 'r' });\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Controllables_ControllableCircle = (ControllableCircle);\n\n;// ./code/es-modules/Extensions/Annotations/Controllables/ControllableEllipse.js\n/* *\n *\n * Author: Pawel Lysy\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\nconst { merge: ControllableEllipse_merge, defined: ControllableEllipse_defined } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Class\n *\n * */\n/**\n * A controllable ellipse class.\n *\n * @requires modules/annotations\n *\n * @private\n * @class\n * @name Highcharts.AnnotationControllableEllipse\n *\n * @param {Highcharts.Annotation} annotation an annotation instance\n * @param {Highcharts.AnnotationsShapeOptions} options a shape's options\n * @param {number} index of the Ellipse\n */\nclass ControllableEllipse extends Controllables_Controllable {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(annotation, options, index) {\n        super(annotation, options, index, 'shape');\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        this.type = 'ellipse';\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    init(annotation, options, index) {\n        if (ControllableEllipse_defined(options.yAxis)) {\n            options.points.forEach((point) => {\n                point.yAxis = options.yAxis;\n            });\n        }\n        if (ControllableEllipse_defined(options.xAxis)) {\n            options.points.forEach((point) => {\n                point.xAxis = options.xAxis;\n            });\n        }\n        super.init(annotation, options, index);\n    }\n    /**\n     * Render the element\n     * @private\n     * @param parent\n     *        Parent SVG element.\n     */\n    render(parent) {\n        this.graphic = this.annotation.chart.renderer.createElement('ellipse')\n            .attr(this.attrsFromOptions(this.options))\n            .add(parent);\n        super.render();\n    }\n    /**\n     * Translate the points. Mostly used to handle dragging of the ellipse.\n     * @private\n     */\n    translate(dx, dy) {\n        super.translateShape(dx, dy, true);\n    }\n    /**\n     * Get the distance from the line to the point.\n     * @private\n     * @param point1\n     *        First point which is on the line\n     * @param point2\n     *        Second point\n     * @param x0\n     *        Point's x value from which you want to calculate the distance from\n     * @param y0\n     *        Point's y value from which you want to calculate the distance from\n     */\n    getDistanceFromLine(point1, point2, x0, y0) {\n        return Math.abs((point2.y - point1.y) * x0 - (point2.x - point1.x) * y0 +\n            point2.x * point1.y - point2.y * point1.x) / Math.sqrt((point2.y - point1.y) * (point2.y - point1.y) +\n            (point2.x - point1.x) * (point2.x - point1.x));\n    }\n    /**\n     * The function calculates the svg attributes of the ellipse, and returns\n     * all parameters necessary to draw the ellipse.\n     * @private\n     * @param position\n     *        Absolute position of the first point in points array\n     * @param position2\n     *        Absolute position of the second point in points array\n     */\n    getAttrs(position, position2) {\n        const x1 = position.x, y1 = position.y, x2 = position2.x, y2 = position2.y, cx = (x1 + x2) / 2, cy = (y1 + y2) / 2, rx = Math.sqrt((x1 - x2) * (x1 - x2) / 4 + (y1 - y2) * (y1 - y2) / 4), tan = (y2 - y1) / (x2 - x1);\n        let angle = Math.atan(tan) * 180 / Math.PI;\n        if (cx < x1) {\n            angle += 180;\n        }\n        const ry = this.getRY();\n        return { cx, cy, rx, ry, angle };\n    }\n    /**\n     * Get the value of minor radius of the ellipse.\n     * @private\n     */\n    getRY() {\n        const yAxis = this.getYAxis();\n        return ControllableEllipse_defined(yAxis) ?\n            Math.abs(yAxis.toPixels(this.options.ry) - yAxis.toPixels(0)) :\n            this.options.ry;\n    }\n    /**\n     * Get the yAxis object to which the ellipse is pinned.\n     * @private\n     */\n    getYAxis() {\n        const yAxisIndex = this.options.yAxis;\n        return this.chart.yAxis[yAxisIndex];\n    }\n    /**\n     * Get the absolute coordinates of the MockPoint\n     * @private\n     * @param point\n     *        MockPoint that is added through options\n     */\n    getAbsolutePosition(point) {\n        return this.anchor(point).absolutePosition;\n    }\n    /**\n     * Redraw the element\n     * @private\n     * @param animation\n     *        Display an animation\n     */\n    redraw(animation) {\n        if (this.graphic) {\n            const position = this.getAbsolutePosition(this.points[0]), position2 = this.getAbsolutePosition(this.points[1]), attrs = this.getAttrs(position, position2);\n            if (position) {\n                this.graphic[animation ? 'animate' : 'attr']({\n                    cx: attrs.cx,\n                    cy: attrs.cy,\n                    rx: attrs.rx,\n                    ry: attrs.ry,\n                    rotation: attrs.angle,\n                    rotationOriginX: attrs.cx,\n                    rotationOriginY: attrs.cy\n                });\n            }\n            else {\n                this.graphic.attr({\n                    x: 0,\n                    y: -9e9\n                });\n            }\n            this.graphic.placed = Boolean(position);\n        }\n        super.redraw(animation);\n    }\n    /**\n     * Set the radius Y.\n     * @private\n     * @param {number} ry\n     *        A radius in y direction to be set\n     */\n    setYRadius(ry) {\n        const shapes = this.annotation.userOptions.shapes;\n        this.options.ry = ry;\n        if (shapes && shapes[0]) {\n            shapes[0].ry = ry;\n            shapes[0].ry = ry;\n        }\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\n/**\n * A map object which allows to map options attributes to element\n * attributes.\n *\n * @name Highcharts.AnnotationControllableEllipse.attrsMap\n * @type {Highcharts.Dictionary<string>}\n */\nControllableEllipse.attrsMap = ControllableEllipse_merge(Controllables_ControllablePath.attrsMap, {\n    ry: 'ry'\n});\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Controllables_ControllableEllipse = (ControllableEllipse);\n\n;// external [\"../highcharts.js\",\"default\",\"Templating\"]\nconst external_highcharts_src_js_default_Templating_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].Templating;\nvar external_highcharts_src_js_default_Templating_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_Templating_namespaceObject);\n;// ./code/es-modules/Extensions/Annotations/Controllables/ControllableLabel.js\n/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { format } = (external_highcharts_src_js_default_Templating_default());\n\n\nconst { extend: ControllableLabel_extend, getAlignFactor, isNumber, pick: ControllableLabel_pick } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * General symbol definition for labels with connector\n * @private\n */\nfunction symbolConnector(x, y, w, h, options) {\n    const anchorX = options && options.anchorX, anchorY = options && options.anchorY;\n    let path, yOffset, lateral = w / 2;\n    if (isNumber(anchorX) && isNumber(anchorY)) {\n        path = [['M', anchorX, anchorY]];\n        // Prefer 45 deg connectors\n        yOffset = y - anchorY;\n        if (yOffset < 0) {\n            yOffset = -h - yOffset;\n        }\n        if (yOffset < w) {\n            lateral = anchorX < x + (w / 2) ? yOffset : w - yOffset;\n        }\n        // Anchor below label\n        if (anchorY > y + h) {\n            path.push(['L', x + lateral, y + h]);\n            // Anchor above label\n        }\n        else if (anchorY < y) {\n            path.push(['L', x + lateral, y]);\n            // Anchor left of label\n        }\n        else if (anchorX < x) {\n            path.push(['L', x, y + h / 2]);\n            // Anchor right of label\n        }\n        else if (anchorX > x + w) {\n            path.push(['L', x + w, y + h / 2]);\n        }\n    }\n    return path || [];\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * A controllable label class.\n *\n * @requires modules/annotations\n *\n * @private\n * @class\n * @name Highcharts.AnnotationControllableLabel\n *\n * @param {Highcharts.Annotation} annotation\n * An annotation instance.\n * @param {Highcharts.AnnotationsLabelOptions} options\n * A label's options.\n * @param {number} index\n * Index of the label.\n */\nclass ControllableLabel extends Controllables_Controllable {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * Returns new aligned position based alignment options and box to align to.\n     * It is almost a one-to-one copy from SVGElement.prototype.align\n     * except it does not use and mutate an element\n     *\n     * @param {Highcharts.AnnotationAlignObject} alignOptions\n     *\n     * @param {Highcharts.BBoxObject} box\n     *\n     * @return {Highcharts.PositionObject}\n     * Aligned position.\n     */\n    static alignedPosition(alignOptions, box) {\n        return {\n            x: Math.round((box.x || 0) + (alignOptions.x || 0) +\n                (box.width - (alignOptions.width || 0)) *\n                    getAlignFactor(alignOptions.align)),\n            y: Math.round((box.y || 0) + (alignOptions.y || 0) +\n                (box.height - (alignOptions.height || 0)) *\n                    getAlignFactor(alignOptions.verticalAlign))\n        };\n    }\n    static compose(SVGRendererClass) {\n        const symbols = SVGRendererClass.prototype.symbols;\n        symbols.connector = symbolConnector;\n    }\n    /**\n     * Returns new alignment options for a label if the label is outside the\n     * plot area. It is almost a one-to-one copy from\n     * Series.prototype.justifyDataLabel except it does not mutate the label and\n     * it works with absolute instead of relative position.\n     */\n    static justifiedOptions(chart, label, alignOptions, alignAttr) {\n        const align = alignOptions.align, verticalAlign = alignOptions.verticalAlign, padding = label.box ? 0 : (label.padding || 0), bBox = label.getBBox(), \n        //\n        options = {\n            align: align,\n            verticalAlign: verticalAlign,\n            x: alignOptions.x,\n            y: alignOptions.y,\n            width: label.width,\n            height: label.height\n        }, \n        //\n        x = (alignAttr.x || 0) - chart.plotLeft, y = (alignAttr.y || 0) - chart.plotTop;\n        let off;\n        // Off left\n        off = x + padding;\n        if (off < 0) {\n            if (align === 'right') {\n                options.align = 'left';\n            }\n            else {\n                options.x = (options.x || 0) - off;\n            }\n        }\n        // Off right\n        off = x + bBox.width - padding;\n        if (off > chart.plotWidth) {\n            if (align === 'left') {\n                options.align = 'right';\n            }\n            else {\n                options.x = (options.x || 0) + chart.plotWidth - off;\n            }\n        }\n        // Off top\n        off = y + padding;\n        if (off < 0) {\n            if (verticalAlign === 'bottom') {\n                options.verticalAlign = 'top';\n            }\n            else {\n                options.y = (options.y || 0) - off;\n            }\n        }\n        // Off bottom\n        off = y + bBox.height - padding;\n        if (off > chart.plotHeight) {\n            if (verticalAlign === 'top') {\n                options.verticalAlign = 'bottom';\n            }\n            else {\n                options.y = (options.y || 0) + chart.plotHeight - off;\n            }\n        }\n        return options;\n    }\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    constructor(annotation, options, index) {\n        super(annotation, options, index, 'label');\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Translate the point of the label by deltaX and deltaY translations.\n     * The point is the label's anchor.\n     *\n     * @param {number} dx translation for x coordinate\n     * @param {number} dy translation for y coordinate\n     */\n    translatePoint(dx, dy) {\n        super.translatePoint(dx, dy, 0);\n    }\n    /**\n     * Translate x and y position relative to the label's anchor.\n     *\n     * @param {number} dx translation for x coordinate\n     * @param {number} dy translation for y coordinate\n     */\n    translate(dx, dy) {\n        const chart = this.annotation.chart, \n        // Annotation.options\n        labelOptions = this.annotation.userOptions, \n        // Chart.options.annotations\n        annotationIndex = chart.annotations.indexOf(this.annotation), chartAnnotations = chart.options.annotations, chartOptions = chartAnnotations[annotationIndex];\n        if (chart.inverted) {\n            const temp = dx;\n            dx = dy;\n            dy = temp;\n        }\n        // Local options:\n        this.options.x += dx;\n        this.options.y += dy;\n        // Options stored in chart:\n        chartOptions[this.collection][this.index].x = this.options.x;\n        chartOptions[this.collection][this.index].y = this.options.y;\n        labelOptions[this.collection][this.index].x = this.options.x;\n        labelOptions[this.collection][this.index].y = this.options.y;\n    }\n    render(parent) {\n        const options = this.options, attrs = this.attrsFromOptions(options), style = options.style, optionsChart = this.annotation.chart.options.chart, chartBackground = optionsChart.plotBackgroundColor ||\n            optionsChart.backgroundColor;\n        this.graphic = this.annotation.chart.renderer\n            .label('', 0, -9999, // #10055\n        options.shape, void 0, void 0, options.useHTML, void 0, 'annotation-label')\n            .attr(attrs)\n            .add(parent);\n        if (!this.annotation.chart.styledMode) {\n            if (style.color === 'contrast') {\n                const background = (ControllableLabel.shapesWithoutBackground.indexOf(options.shape) > -1 ||\n                    options.backgroundColor === 'none') ?\n                    chartBackground :\n                    options.backgroundColor;\n                style.color = this.annotation.chart.renderer.getContrast(typeof background === 'string' ? background :\n                    typeof chartBackground === 'string' ? chartBackground :\n                        '#ffffff');\n            }\n            this.graphic\n                .css(options.style)\n                .shadow(options.shadow);\n        }\n        this.graphic.labelrank = options.labelrank;\n        super.render();\n    }\n    redraw(animation) {\n        const options = this.options, text = this.text || options.format || options.text, label = this.graphic, point = this.points[0];\n        if (!label) {\n            this.redraw(animation);\n            return;\n        }\n        label.attr({\n            text: text ?\n                format(String(text), point, this.annotation.chart) :\n                options.formatter.call(point, this)\n        });\n        const anchor = this.anchor(point);\n        const attrs = this.position(anchor);\n        if (attrs) {\n            label.alignAttr = attrs;\n            attrs.anchorX = anchor.absolutePosition.x;\n            attrs.anchorY = anchor.absolutePosition.y;\n            label[animation ? 'animate' : 'attr'](attrs);\n        }\n        else {\n            label.attr({\n                x: 0,\n                y: -9999 // #10055\n            });\n        }\n        label.placed = !!attrs;\n        super.redraw(animation);\n    }\n    /**\n     * All basic shapes don't support alignTo() method except label.\n     * For a controllable label, we need to subtract translation from\n     * options.\n     */\n    anchor(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _point) {\n        const anchor = super.anchor.apply(this, arguments), x = this.options.x || 0, y = this.options.y || 0;\n        anchor.absolutePosition.x -= x;\n        anchor.absolutePosition.y -= y;\n        anchor.relativePosition.x -= x;\n        anchor.relativePosition.y -= y;\n        return anchor;\n    }\n    /**\n     * Returns the label position relative to its anchor.\n     */\n    position(anchor) {\n        const item = this.graphic, chart = this.annotation.chart, tooltip = chart.tooltip, point = this.points[0], itemOptions = this.options, anchorAbsolutePosition = anchor.absolutePosition, anchorRelativePosition = anchor.relativePosition;\n        let itemPosition, alignTo, itemPosRelativeX, itemPosRelativeY, showItem = point.series.visible &&\n            Annotations_MockPoint.prototype.isInsidePlot.call(point);\n        if (item && showItem) {\n            const { width = 0, height = 0 } = item;\n            if (itemOptions.distance && tooltip) {\n                itemPosition = tooltip.getPosition.call({\n                    chart,\n                    distance: ControllableLabel_pick(itemOptions.distance, 16),\n                    getPlayingField: tooltip.getPlayingField,\n                    pointer: tooltip.pointer\n                }, width, height, {\n                    plotX: anchorRelativePosition.x,\n                    plotY: anchorRelativePosition.y,\n                    negative: point.negative,\n                    ttBelow: point.ttBelow,\n                    h: (anchorRelativePosition.height ||\n                        anchorRelativePosition.width)\n                });\n            }\n            else if (itemOptions.positioner) {\n                itemPosition = itemOptions.positioner.call(this);\n            }\n            else {\n                alignTo = {\n                    x: anchorAbsolutePosition.x,\n                    y: anchorAbsolutePosition.y,\n                    width: 0,\n                    height: 0\n                };\n                itemPosition = ControllableLabel.alignedPosition(ControllableLabel_extend(itemOptions, {\n                    width,\n                    height\n                }), alignTo);\n                if (this.options.overflow === 'justify') {\n                    itemPosition = ControllableLabel.alignedPosition(ControllableLabel.justifiedOptions(chart, item, itemOptions, itemPosition), alignTo);\n                }\n            }\n            if (itemOptions.crop) {\n                itemPosRelativeX = itemPosition.x - chart.plotLeft;\n                itemPosRelativeY = itemPosition.y - chart.plotTop;\n                showItem =\n                    chart.isInsidePlot(itemPosRelativeX, itemPosRelativeY) &&\n                        chart.isInsidePlot(itemPosRelativeX + width, itemPosRelativeY + height);\n            }\n        }\n        return showItem ? itemPosition : null;\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\n/**\n * A map object which allows to map options attributes to element attributes\n *\n * @type {Highcharts.Dictionary<string>}\n */\nControllableLabel.attrsMap = {\n    backgroundColor: 'fill',\n    borderColor: 'stroke',\n    borderWidth: 'stroke-width',\n    zIndex: 'zIndex',\n    borderRadius: 'r',\n    padding: 'padding'\n};\n/**\n * Shapes which do not have background - the object is used for proper\n * setting of the contrast color.\n *\n * @type {Array<string>}\n */\nControllableLabel.shapesWithoutBackground = ['connector'];\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Controllables_ControllableLabel = (ControllableLabel);\n\n;// ./code/es-modules/Extensions/Annotations/Controllables/ControllableImage.js\n/* *\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n/* *\n *\n *  Class\n *\n * */\n/**\n * A controllable image class.\n *\n * @requires modules/annotations\n *\n * @private\n * @class\n * @name Highcharts.AnnotationControllableImage\n *\n * @param {Highcharts.Annotation} annotation\n * An annotation instance.\n *\n * @param {Highcharts.AnnotationsShapeOptions} options\n * A controllable's options.\n *\n * @param {number} index\n * Index of the image.\n */\nclass ControllableImage extends Controllables_Controllable {\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    constructor(annotation, options, index) {\n        super(annotation, options, index, 'shape');\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        this.type = 'image';\n        this.translate = super.translateShape;\n    }\n    render(parent) {\n        const attrs = this.attrsFromOptions(this.options), options = this.options;\n        this.graphic = this.annotation.chart.renderer\n            .image(options.src, 0, -9e9, options.width, options.height)\n            .attr(attrs)\n            .add(parent);\n        this.graphic.width = options.width;\n        this.graphic.height = options.height;\n        super.render();\n    }\n    redraw(animation) {\n        if (this.graphic) {\n            const anchor = this.anchor(this.points[0]), position = Controllables_ControllableLabel.prototype.position.call(this, anchor);\n            if (position) {\n                this.graphic[animation ? 'animate' : 'attr']({\n                    x: position.x,\n                    y: position.y\n                });\n            }\n            else {\n                this.graphic.attr({\n                    x: 0,\n                    y: -9e9\n                });\n            }\n            this.graphic.placed = Boolean(position);\n        }\n        super.redraw(animation);\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\n/**\n * A map object which allows to map options attributes to element attributes\n *\n * @name Highcharts.AnnotationControllableImage.attrsMap\n * @type {Highcharts.Dictionary<string>}\n */\nControllableImage.attrsMap = {\n    width: 'width',\n    height: 'height',\n    zIndex: 'zIndex'\n};\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Controllables_ControllableImage = (ControllableImage);\n\n;// external [\"../highcharts.js\",\"default\",\"AST\"]\nconst external_highcharts_src_js_default_AST_namespaceObject = __WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__[\"default\"].AST;\nvar external_highcharts_src_js_default_AST_default = /*#__PURE__*/__webpack_require__.n(external_highcharts_src_js_default_AST_namespaceObject);\n;// ./code/es-modules/Shared/BaseForm.js\n/* *\n *\n *  (c) 2009-2025 Highsoft AS\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Imports\n *\n * */\n\n\nconst { addEvent: BaseForm_addEvent, createElement } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Class\n *\n * */\nclass BaseForm {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(parentDiv, iconsURL) {\n        this.iconsURL = iconsURL;\n        this.container = this.createPopupContainer(parentDiv);\n        this.closeButton = this.addCloseButton();\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Create popup div container.\n     *\n     * @param {HTMLElement} parentDiv\n     * Parent div to attach popup.\n     *\n     * @param  {string} className\n     * Class name of the popup.\n     *\n     * @return {HTMLElement}\n     * Popup div.\n     */\n    createPopupContainer(parentDiv, className = 'highcharts-popup highcharts-no-tooltip') {\n        return createElement('div', { className }, void 0, parentDiv);\n    }\n    /**\n     * Create HTML element and attach click event to close popup.\n     *\n     * @param {string} className\n     * Class name of the close button.\n     *\n     * @return {HTMLElement}\n     * Close button.\n     */\n    addCloseButton(className = 'highcharts-popup-close') {\n        const popup = this, iconsURL = this.iconsURL;\n        // Create close popup button.\n        const closeButton = createElement('button', { className }, void 0, this.container);\n        createElement('span', {\n            className: 'highcharts-icon'\n        }, {\n            backgroundImage: 'url(' + (iconsURL.match(/png|svg|jpeg|jpg|gif/ig) ?\n                iconsURL : iconsURL + 'close.svg') + ')'\n        }, closeButton);\n        ['click', 'touchstart'].forEach((eventName) => {\n            BaseForm_addEvent(closeButton, eventName, popup.closeButtonEvents.bind(popup));\n        });\n        // Close popup when press ESC\n        BaseForm_addEvent(document, 'keydown', function (event) {\n            if (event.code === 'Escape') {\n                popup.closeButtonEvents();\n            }\n        });\n        return closeButton;\n    }\n    /**\n     * Close button events.\n     * @return {void}\n     */\n    closeButtonEvents() {\n        this.closePopup();\n    }\n    /**\n     * Reset content of the current popup and show.\n     *\n     * @param {string} toolbarClass\n     * Class name of the toolbar which styles should be reset.\n     */\n    showPopup(toolbarClass = 'highcharts-annotation-toolbar') {\n        const popupDiv = this.container, popupCloseButton = this.closeButton;\n        this.type = void 0;\n        // Reset content.\n        popupDiv.innerHTML = (external_highcharts_src_js_default_AST_default()).emptyHTML;\n        // Reset toolbar styles if exists.\n        if (popupDiv.className.indexOf(toolbarClass) >= 0) {\n            popupDiv.classList.remove(toolbarClass);\n            // Reset toolbar inline styles\n            popupDiv.removeAttribute('style');\n        }\n        // Add close button.\n        popupDiv.appendChild(popupCloseButton);\n        popupDiv.style.display = 'block';\n        popupDiv.style.height = '';\n    }\n    /**\n     * Hide popup.\n     */\n    closePopup() {\n        this.container.style.display = 'none';\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Shared_BaseForm = (BaseForm);\n\n;// ./code/es-modules/Extensions/Annotations/Popup/PopupAnnotations.js\n/* *\n *\n *  Popup generator for Stock tools\n *\n *  (c) 2009-2025 Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { doc: PopupAnnotations_doc, isFirefox } = (external_highcharts_src_js_default_default());\n\nconst { createElement: PopupAnnotations_createElement, isArray: PopupAnnotations_isArray, isObject: PopupAnnotations_isObject, objectEach: PopupAnnotations_objectEach, pick: PopupAnnotations_pick, stableSort } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Create annotation simple form.\n * It contains fields with param names.\n * @private\n * @param {Highcharts.Chart} chart\n * Chart\n * @param {Object} options\n * Options\n * @param {Function} callback\n * On click callback\n * @param {boolean} [isInit]\n * If it is a form declared for init annotation\n */\nfunction addForm(chart, options, callback, isInit) {\n    if (!chart) {\n        return;\n    }\n    const popupDiv = this.container, lang = this.lang;\n    // Create title of annotations\n    let lhsCol = PopupAnnotations_createElement('h2', {\n        className: 'highcharts-popup-main-title'\n    }, void 0, popupDiv);\n    lhsCol.appendChild(PopupAnnotations_doc.createTextNode(lang[options.langKey] || options.langKey || ''));\n    // Left column\n    lhsCol = PopupAnnotations_createElement('div', {\n        className: ('highcharts-popup-lhs-col highcharts-popup-lhs-full')\n    }, void 0, popupDiv);\n    const bottomRow = PopupAnnotations_createElement('div', {\n        className: 'highcharts-popup-bottom-row'\n    }, void 0, popupDiv);\n    addFormFields.call(this, lhsCol, chart, '', options, [], true);\n    this.addButton(bottomRow, isInit ?\n        (lang.addButton || 'Add') :\n        (lang.saveButton || 'Save'), isInit ? 'add' : 'save', popupDiv, callback);\n}\n/**\n * Create annotation simple form. It contains two buttons\n * (edit / remove) and text label.\n * @private\n * @param {Highcharts.Chart} - chart\n * @param {Highcharts.AnnotationsOptions} - options\n * @param {Function} - on click callback\n */\nfunction addToolbar(chart, options, callback) {\n    const lang = this.lang, popupDiv = this.container, showForm = this.showForm, toolbarClass = 'highcharts-annotation-toolbar';\n    // Set small size\n    if (popupDiv.className.indexOf(toolbarClass) === -1) {\n        popupDiv.className += ' ' + toolbarClass + ' highcharts-no-mousewheel';\n    }\n    // Set position\n    if (chart) {\n        popupDiv.style.top = chart.plotTop + 10 + 'px';\n    }\n    // Create label\n    const label = PopupAnnotations_createElement('p', {\n        className: 'highcharts-annotation-label'\n    }, void 0, popupDiv);\n    label.setAttribute('aria-label', 'Annotation type');\n    label.appendChild(PopupAnnotations_doc.createTextNode(PopupAnnotations_pick(\n    // Advanced annotations:\n    lang[options.langKey] || options.langKey, \n    // Basic shapes:\n    options.shapes && options.shapes[0].type, '')));\n    // Add buttons\n    let button = this.addButton(popupDiv, lang.editButton || 'Edit', 'edit', popupDiv, () => {\n        showForm.call(this, 'annotation-edit', chart, options, callback);\n    });\n    button.className += ' highcharts-annotation-edit-button';\n    PopupAnnotations_createElement('span', {\n        className: 'highcharts-icon'\n    }, {\n        backgroundImage: `url(${this.iconsURL}edit.svg)`\n    }, button);\n    button = this.addButton(popupDiv, lang.removeButton || 'Remove', 'remove', popupDiv, callback);\n    button.className += ' highcharts-annotation-remove-button';\n    PopupAnnotations_createElement('span', {\n        className: 'highcharts-icon'\n    }, {\n        backgroundImage: `url(${this.iconsURL}destroy.svg)`\n    }, button);\n}\n/**\n * Create annotation's form fields.\n * @private\n * @param {Highcharts.HTMLDOMElement} parentDiv\n * Div where inputs are placed\n * @param {Highcharts.Chart} chart\n * Chart\n * @param {string} parentNode\n * Name of parent to create chain of names\n * @param {Highcharts.AnnotationsOptions} options\n * Options\n * @param {Array<unknown>} storage\n * Array where all items are stored\n * @param {boolean} [isRoot]\n * Recursive flag for root\n */\nfunction addFormFields(parentDiv, chart, parentNode, options, storage, isRoot) {\n    if (!chart) {\n        return;\n    }\n    const addInput = this.addInput, lang = this.lang;\n    let parentFullName, titleName;\n    PopupAnnotations_objectEach(options, (value, option) => {\n        // Create name like params.styles.fontSize\n        parentFullName = parentNode !== '' ? parentNode + '.' + option : option;\n        if (PopupAnnotations_isObject(value)) {\n            if (\n            // Value is object of options\n            !PopupAnnotations_isArray(value) ||\n                // Array of objects with params. i.e labels in Fibonacci\n                (PopupAnnotations_isArray(value) && PopupAnnotations_isObject(value[0]))) {\n                titleName = lang[option] || option;\n                if (!titleName.match(/\\d/g)) {\n                    storage.push([\n                        true,\n                        titleName,\n                        parentDiv\n                    ]);\n                }\n                addFormFields.call(this, parentDiv, chart, parentFullName, value, storage, false);\n            }\n            else {\n                storage.push([\n                    this,\n                    parentFullName,\n                    'annotation',\n                    parentDiv,\n                    value\n                ]);\n            }\n        }\n    });\n    if (isRoot) {\n        stableSort(storage, (a) => (a[1].match(/format/g) ? -1 : 1));\n        if (isFirefox) {\n            storage.reverse(); // (#14691)\n        }\n        storage.forEach((genInput) => {\n            if (genInput[0] === true) {\n                PopupAnnotations_createElement('span', {\n                    className: 'highcharts-annotation-title'\n                }, void 0, genInput[2]).appendChild(PopupAnnotations_doc.createTextNode(genInput[1]));\n            }\n            else {\n                genInput[4] = {\n                    value: genInput[4][0],\n                    type: genInput[4][1]\n                };\n                addInput.apply(genInput[0], genInput.splice(1));\n            }\n        });\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst PopupAnnotations = {\n    addForm,\n    addToolbar\n};\n/* harmony default export */ const Popup_PopupAnnotations = (PopupAnnotations);\n\n;// ./code/es-modules/Extensions/Annotations/Popup/PopupIndicators.js\n/* *\n *\n *  Popup generator for Stock tools\n *\n *  (c) 2009-2025 Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { doc: PopupIndicators_doc } = (external_highcharts_src_js_default_default());\n\nconst { seriesTypes } = (external_highcharts_src_js_default_SeriesRegistry_default());\n\nconst { addEvent: PopupIndicators_addEvent, createElement: PopupIndicators_createElement, defined: PopupIndicators_defined, isArray: PopupIndicators_isArray, isObject: PopupIndicators_isObject, objectEach: PopupIndicators_objectEach, stableSort: PopupIndicators_stableSort } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Enums\n *\n * */\n/**\n * Enum for properties which should have dropdown list.\n * @private\n */\nvar DropdownProperties;\n(function (DropdownProperties) {\n    DropdownProperties[DropdownProperties[\"params.algorithm\"] = 0] = \"params.algorithm\";\n    DropdownProperties[DropdownProperties[\"params.average\"] = 1] = \"params.average\";\n})(DropdownProperties || (DropdownProperties = {}));\n/**\n * List of available algorithms for the specific indicator.\n * @private\n */\nconst dropdownParameters = {\n    'algorithm-pivotpoints': ['standard', 'fibonacci', 'camarilla'],\n    'average-disparityindex': ['sma', 'ema', 'dema', 'tema', 'wma']\n};\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Create two columns (divs) in HTML.\n * @private\n * @param {Highcharts.HTMLDOMElement} container\n * Container of columns\n * @return {Highcharts.Dictionary<Highcharts.HTMLDOMElement>}\n * Reference to two HTML columns (lhsCol, rhsCol)\n */\nfunction addColsContainer(container) {\n    // Left column\n    const lhsCol = PopupIndicators_createElement('div', {\n        className: 'highcharts-popup-lhs-col'\n    }, void 0, container);\n    // Right column\n    const rhsCol = PopupIndicators_createElement('div', {\n        className: 'highcharts-popup-rhs-col'\n    }, void 0, container);\n    // Wrapper content\n    PopupIndicators_createElement('div', {\n        className: 'highcharts-popup-rhs-col-wrapper'\n    }, void 0, rhsCol);\n    return {\n        lhsCol: lhsCol,\n        rhsCol: rhsCol\n    };\n}\n/**\n * Create indicator's form. It contains two tabs (ADD and EDIT) with\n * content.\n * @private\n */\nfunction PopupIndicators_addForm(chart, _options, callback) {\n    const lang = this.lang;\n    let buttonParentDiv;\n    if (!chart) {\n        return;\n    }\n    // Add tabs\n    this.tabs.init.call(this, chart);\n    // Get all tabs content divs\n    const tabsContainers = this.container\n        .querySelectorAll('.highcharts-tab-item-content');\n    // ADD tab\n    addColsContainer(tabsContainers[0]);\n    addSearchBox.call(this, chart, tabsContainers[0]);\n    addIndicatorList.call(this, chart, tabsContainers[0], 'add');\n    buttonParentDiv = tabsContainers[0]\n        .querySelectorAll('.highcharts-popup-rhs-col')[0];\n    this.addButton(buttonParentDiv, lang.addButton || 'add', 'add', buttonParentDiv, callback);\n    // EDIT tab\n    addColsContainer(tabsContainers[1]);\n    addIndicatorList.call(this, chart, tabsContainers[1], 'edit');\n    buttonParentDiv = tabsContainers[1]\n        .querySelectorAll('.highcharts-popup-rhs-col')[0];\n    this.addButton(buttonParentDiv, lang.saveButton || 'save', 'edit', buttonParentDiv, callback);\n    this.addButton(buttonParentDiv, lang.removeButton || 'remove', 'remove', buttonParentDiv, callback);\n}\n/**\n * Create typical inputs for chosen indicator. Fields are extracted from\n * defaultOptions (ADD mode) or current indicator (ADD mode). Two extra\n * fields are added:\n * - hidden input - contains indicator type (required for callback)\n * - select - list of series which can be linked with indicator\n * @private\n * @param {Highcharts.Chart} chart\n * Chart\n * @param {Highcharts.Series} series\n * Indicator\n * @param {string} seriesType\n * Indicator type like: sma, ema, etc.\n * @param {Highcharts.HTMLDOMElement} rhsColWrapper\n * Element where created HTML list is added\n */\nfunction PopupIndicators_addFormFields(chart, series, seriesType, rhsColWrapper) {\n    const fields = series.params || series.options.params;\n    // Reset current content\n    rhsColWrapper.innerHTML = (external_highcharts_src_js_default_AST_default()).emptyHTML;\n    // Create title (indicator name in the right column)\n    PopupIndicators_createElement('h3', {\n        className: 'highcharts-indicator-title'\n    }, void 0, rhsColWrapper).appendChild(PopupIndicators_doc.createTextNode(getNameType(series, seriesType).indicatorFullName));\n    // Input type\n    PopupIndicators_createElement('input', {\n        type: 'hidden',\n        name: 'highcharts-type-' + seriesType,\n        value: seriesType\n    }, void 0, rhsColWrapper);\n    // List all series with id\n    listAllSeries.call(this, seriesType, 'series', chart, rhsColWrapper, series, series.linkedParent && series.linkedParent.options.id);\n    if (fields.volumeSeriesID) {\n        listAllSeries.call(this, seriesType, 'volume', chart, rhsColWrapper, series, series.linkedParent && fields.volumeSeriesID);\n    }\n    // Add param fields\n    addParamInputs.call(this, chart, 'params', fields, seriesType, rhsColWrapper);\n}\n/**\n * Create HTML list of all indicators (ADD mode) or added indicators\n * (EDIT mode).\n *\n * @private\n *\n * @param {Highcharts.AnnotationChart} chart\n *        The chart object.\n *\n * @param {string} [optionName]\n *        Name of the option into which selection is being added.\n *\n * @param {HTMLDOMElement} [parentDiv]\n *        HTML parent element.\n *\n * @param {string} listType\n *        Type of list depending on the selected bookmark.\n *        Might be 'add' or 'edit'.\n *\n * @param {string|undefined} filter\n *        Applied filter string from the input.\n *        For the first iteration, it's an empty string.\n */\nfunction addIndicatorList(chart, parentDiv, listType, filter) {\n    /**\n     *\n     */\n    function selectIndicator(series, indicatorType) {\n        const button = rhsColWrapper.parentNode\n            .children[1];\n        PopupIndicators_addFormFields.call(popup, chart, series, indicatorType, rhsColWrapper);\n        if (button) {\n            button.style.display = 'block';\n        }\n        // Add hidden input with series.id\n        if (isEdit && series.options) {\n            PopupIndicators_createElement('input', {\n                type: 'hidden',\n                name: 'highcharts-id-' + indicatorType,\n                value: series.options.id\n            }, void 0, rhsColWrapper).setAttribute('highcharts-data-series-id', series.options.id);\n        }\n    }\n    const popup = this, lang = popup.lang, lhsCol = parentDiv.querySelectorAll('.highcharts-popup-lhs-col')[0], rhsCol = parentDiv.querySelectorAll('.highcharts-popup-rhs-col')[0], isEdit = listType === 'edit', series = (isEdit ?\n        chart.series : // EDIT mode\n        chart.options.plotOptions || {} // ADD mode\n    );\n    if (!chart && series) {\n        return;\n    }\n    let item, filteredSeriesArray = [];\n    // Filter and sort the series.\n    if (!isEdit && !PopupIndicators_isArray(series)) {\n        // Apply filters only for the 'add' indicator list.\n        filteredSeriesArray = filterSeries.call(this, series, filter);\n    }\n    else if (PopupIndicators_isArray(series)) {\n        filteredSeriesArray = filterSeriesArray.call(this, series);\n    }\n    // Sort indicators alphabetically.\n    PopupIndicators_stableSort(filteredSeriesArray, (a, b) => {\n        const seriesAName = a.indicatorFullName.toLowerCase(), seriesBName = b.indicatorFullName.toLowerCase();\n        return (seriesAName < seriesBName) ?\n            -1 : (seriesAName > seriesBName) ? 1 : 0;\n    });\n    // If the list exists remove it from the DOM\n    // in order to create a new one with different filters.\n    if (lhsCol.children[1]) {\n        lhsCol.children[1].remove();\n    }\n    // Create wrapper for list.\n    const indicatorList = PopupIndicators_createElement('ul', {\n        className: 'highcharts-indicator-list'\n    }, void 0, lhsCol);\n    const rhsColWrapper = rhsCol.querySelectorAll('.highcharts-popup-rhs-col-wrapper')[0];\n    filteredSeriesArray.forEach((seriesSet) => {\n        const { indicatorFullName, indicatorType, series } = seriesSet;\n        item = PopupIndicators_createElement('li', {\n            className: 'highcharts-indicator-list'\n        }, void 0, indicatorList);\n        const btn = PopupIndicators_createElement('button', {\n            className: 'highcharts-indicator-list-item',\n            textContent: indicatorFullName\n        }, void 0, item);\n        ['click', 'touchstart'].forEach((eventName) => {\n            PopupIndicators_addEvent(btn, eventName, function () {\n                selectIndicator(series, indicatorType);\n            });\n        });\n    });\n    // Select first item from the list\n    if (filteredSeriesArray.length > 0) {\n        const { series, indicatorType } = filteredSeriesArray[0];\n        selectIndicator(series, indicatorType);\n    }\n    else if (!isEdit) {\n        external_highcharts_src_js_default_AST_default().setElementHTML(rhsColWrapper.parentNode.children[0], lang.noFilterMatch || '');\n        rhsColWrapper.parentNode.children[1]\n            .style.display = 'none';\n    }\n}\n/**\n * Recurrent function which lists all fields, from params object and\n * create them as inputs. Each input has unique `data-name` attribute,\n * which keeps chain of fields i.e params.styles.fontSize.\n * @private\n * @param {Highcharts.Chart} chart\n * Chart\n * @param {string} parentNode\n * Name of parent to create chain of names\n * @param {Highcharts.PopupFieldsDictionary<string>} fields\n * Params which are based for input create\n * @param {string} type\n * Indicator type like: sma, ema, etc.\n * @param {Highcharts.HTMLDOMElement} parentDiv\n * Element where created HTML list is added\n */\nfunction addParamInputs(chart, parentNode, fields, type, parentDiv) {\n    if (!chart) {\n        return;\n    }\n    const addInput = this.addInput;\n    PopupIndicators_objectEach(fields, (value, fieldName) => {\n        // Create name like params.styles.fontSize\n        const parentFullName = parentNode + '.' + fieldName;\n        if (PopupIndicators_defined(value) && // Skip if field is unnecessary, #15362\n            parentFullName) {\n            if (PopupIndicators_isObject(value)) {\n                // (15733) 'Periods' has an arrayed value. Label must be\n                // created here.\n                addInput.call(this, parentFullName, type, parentDiv, {});\n                addParamInputs.call(this, chart, parentFullName, value, type, parentDiv);\n            }\n            // If the option is listed in dropdown enum,\n            // add the selection box for it.\n            if (parentFullName in DropdownProperties) {\n                // Add selection boxes.\n                const selectBox = addSelection.call(this, type, parentFullName, parentDiv);\n                // Add possible dropdown options.\n                addSelectionOptions.call(this, chart, parentNode, selectBox, type, fieldName, value);\n            }\n            else if (\n            // Skip volume field which is created by addFormFields.\n            parentFullName !== 'params.volumeSeriesID' &&\n                !PopupIndicators_isArray(value) // Skip params declared in array.\n            ) {\n                addInput.call(this, parentFullName, type, parentDiv, {\n                    value: value,\n                    type: 'number'\n                } // All inputs are text type\n                );\n            }\n        }\n    });\n}\n/**\n * Add searchbox HTML element and its' label.\n *\n * @private\n *\n * @param {Highcharts.AnnotationChart} chart\n *        The chart object.\n *\n * @param {HTMLDOMElement} parentDiv\n *        HTML parent element.\n */\nfunction addSearchBox(chart, parentDiv) {\n    const popup = this, lhsCol = parentDiv.querySelectorAll('.highcharts-popup-lhs-col')[0], options = 'searchIndicators', inputAttributes = {\n        value: '',\n        type: 'text',\n        htmlFor: 'search-indicators',\n        labelClassName: 'highcharts-input-search-indicators-label'\n    }, clearFilterText = this.lang.clearFilter, inputWrapper = PopupIndicators_createElement('div', {\n        className: 'highcharts-input-wrapper'\n    }, void 0, lhsCol);\n    const handleInputChange = function (inputText) {\n        // Apply some filters.\n        addIndicatorList.call(popup, chart, popup.container, 'add', inputText);\n    };\n    // Add input field with the label and button.\n    const input = this.addInput(options, 'input', inputWrapper, inputAttributes), button = PopupIndicators_createElement('a', {\n        textContent: clearFilterText\n    }, void 0, inputWrapper);\n    input.classList.add('highcharts-input-search-indicators');\n    button.classList.add('clear-filter-button');\n    // Add input change events.\n    PopupIndicators_addEvent(input, 'input', function () {\n        handleInputChange(this.value);\n        // Show clear filter button.\n        if (this.value.length) {\n            button.style.display = 'inline-block';\n        }\n        else {\n            button.style.display = 'none';\n        }\n    });\n    // Add clear filter click event.\n    ['click', 'touchstart'].forEach((eventName) => {\n        PopupIndicators_addEvent(button, eventName, function () {\n            // Clear the input.\n            input.value = '';\n            handleInputChange('');\n            // Hide clear filter button- no longer necessary.\n            button.style.display = 'none';\n        });\n    });\n}\n/**\n * Add selection HTML element and its' label.\n *\n * @private\n *\n * @param {string} indicatorType\n * Type of the indicator i.e. sma, ema...\n *\n * @param {string} [optionName]\n * Name of the option into which selection is being added.\n *\n * @param {HTMLDOMElement} [parentDiv]\n * HTML parent element.\n */\nfunction addSelection(indicatorType, optionName, parentDiv) {\n    const optionParamList = optionName.split('.'), labelText = optionParamList[optionParamList.length - 1], selectName = 'highcharts-' + optionName + '-type-' + indicatorType, lang = this.lang;\n    // Add a label for the selection box.\n    PopupIndicators_createElement('label', {\n        htmlFor: selectName\n    }, null, parentDiv).appendChild(PopupIndicators_doc.createTextNode(lang[labelText] || optionName));\n    // Create a selection box.\n    const selectBox = PopupIndicators_createElement('select', {\n        name: selectName,\n        className: 'highcharts-popup-field',\n        id: 'highcharts-select-' + optionName\n    }, null, parentDiv);\n    selectBox.setAttribute('id', 'highcharts-select-' + optionName);\n    return selectBox;\n}\n/**\n * Get and add selection options.\n *\n * @private\n *\n * @param {Highcharts.AnnotationChart} chart\n *        The chart object.\n *\n * @param {string} [optionName]\n *        Name of the option into which selection is being added.\n *\n * @param {HTMLSelectElement} [selectBox]\n *        HTML select box element to which the options are being added.\n *\n * @param {string|undefined} indicatorType\n *        Type of the indicator i.e. sma, ema...\n *\n * @param {string|undefined} parameterName\n *        Name of the parameter which should be applied.\n *\n * @param {string|undefined} selectedOption\n *        Default value in dropdown.\n */\nfunction addSelectionOptions(chart, optionName, selectBox, indicatorType, parameterName, selectedOption, currentSeries) {\n    // Get and apply selection options for the possible series.\n    if (optionName === 'series' || optionName === 'volume') {\n        // List all series which have id - mandatory for indicator.\n        chart.series.forEach((series) => {\n            const seriesOptions = series.options, seriesName = seriesOptions.name ||\n                seriesOptions.params ?\n                series.name :\n                seriesOptions.id || '';\n            if (seriesOptions.id !== 'highcharts-navigator-series' &&\n                seriesOptions.id !== (currentSeries &&\n                    currentSeries.options &&\n                    currentSeries.options.id)) {\n                if (!PopupIndicators_defined(selectedOption) &&\n                    optionName === 'volume' &&\n                    series.type === 'column') {\n                    selectedOption = seriesOptions.id;\n                }\n                PopupIndicators_createElement('option', {\n                    value: seriesOptions.id\n                }, void 0, selectBox).appendChild(PopupIndicators_doc.createTextNode(seriesName));\n            }\n        });\n    }\n    else if (indicatorType && parameterName) {\n        // Get and apply options for the possible parameters.\n        const dropdownKey = parameterName + '-' + indicatorType, parameterOption = dropdownParameters[dropdownKey];\n        parameterOption.forEach((element) => {\n            PopupIndicators_createElement('option', {\n                value: element\n            }, void 0, selectBox).appendChild(PopupIndicators_doc.createTextNode(element));\n        });\n    }\n    // Add the default dropdown value if defined.\n    if (PopupIndicators_defined(selectedOption)) {\n        selectBox.value = selectedOption;\n    }\n}\n/**\n * Filter object of series which are not indicators.\n * If the filter string exists, check against it.\n *\n * @private\n *\n * @param {Highcharts.FilteredSeries} series\n *        All series are available in the plotOptions.\n *\n * @param {string|undefined} filter\n *        Applied filter string from the input.\n *        For the first iteration, it's an empty string.\n *\n * @return {Array<Highcharts.FilteredSeries>} filteredSeriesArray\n *         Returns array of filtered series based on filter string.\n */\nfunction filterSeries(series, filter) {\n    const popup = this, lang = popup.chart && popup.chart.options.lang, indicatorAliases = lang &&\n        lang.navigation &&\n        lang.navigation.popup &&\n        lang.navigation.popup.indicatorAliases, filteredSeriesArray = [];\n    let filteredSeries;\n    PopupIndicators_objectEach(series, (series, value) => {\n        const seriesOptions = series && series.options;\n        // Allow only indicators.\n        if (series.params || seriesOptions &&\n            seriesOptions.params) {\n            const { indicatorFullName, indicatorType } = getNameType(series, value);\n            if (filter) {\n                // Replace invalid characters.\n                const validFilter = filter.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n                const regex = new RegExp(validFilter, 'i'), alias = indicatorAliases &&\n                    indicatorAliases[indicatorType] &&\n                    indicatorAliases[indicatorType].join(' ') || '';\n                if (indicatorFullName.match(regex) ||\n                    alias.match(regex)) {\n                    filteredSeries = {\n                        indicatorFullName,\n                        indicatorType,\n                        series: series\n                    };\n                    filteredSeriesArray.push(filteredSeries);\n                }\n            }\n            else {\n                filteredSeries = {\n                    indicatorFullName,\n                    indicatorType,\n                    series: series\n                };\n                filteredSeriesArray.push(filteredSeries);\n            }\n        }\n    });\n    return filteredSeriesArray;\n}\n/**\n * Filter an array of series and map its names and types.\n *\n * @private\n *\n * @param {Highcharts.FilteredSeries} series\n *        All series that are available in the plotOptions.\n *\n * @return {Array<Highcharts.FilteredSeries>} filteredSeriesArray\n *         Returns array of filtered series based on filter string.\n */\nfunction filterSeriesArray(series) {\n    const filteredSeriesArray = [];\n    // Allow only indicators.\n    series.forEach((series) => {\n        if (series.is('sma')) {\n            filteredSeriesArray.push({\n                indicatorFullName: series.name,\n                indicatorType: series.type,\n                series: series\n            });\n        }\n    });\n    return filteredSeriesArray;\n}\n/**\n * Get amount of indicators added to chart.\n * @private\n * @return {number} - Amount of indicators\n */\nfunction getAmount() {\n    let counter = 0;\n    this.series.forEach((serie) => {\n        if (serie.params ||\n            serie.options.params) {\n            counter++;\n        }\n    });\n    return counter;\n}\n/**\n * Extract full name and type of requested indicator.\n *\n * @private\n *\n * @param {Highcharts.Series} series\n * Series which name is needed(EDITmode - defaultOptions.series,\n * ADDmode - indicator series).\n *\n * @param {string} [indicatorType]\n * Type of the indicator i.e. sma, ema...\n *\n * @return {Highcharts.Dictionary<string>}\n * Full name and series type.\n */\nfunction getNameType(series, indicatorType) {\n    const options = series.options;\n    // Add mode\n    let seriesName = (seriesTypes[indicatorType] &&\n        seriesTypes[indicatorType].prototype.nameBase) ||\n        indicatorType.toUpperCase(), seriesType = indicatorType;\n    // Edit\n    if (options && options.type) {\n        seriesType = series.options.type;\n        seriesName = series.name;\n    }\n    return {\n        indicatorFullName: seriesName,\n        indicatorType: seriesType\n    };\n}\n/**\n * Create the selection box for the series,\n * add options and apply the default one.\n *\n * @private\n *\n * @param {string} indicatorType\n *        Type of the indicator i.e. sma, ema...\n *\n * @param {string} [optionName]\n *        Name of the option into which selection is being added.\n *\n * @param {Highcharts.AnnotationChart} chart\n *        The chart object.\n *\n * @param {HTMLDOMElement} [parentDiv]\n *        HTML parent element.\n *\n * @param {string|undefined} selectedOption\n *        Default value in dropdown.\n */\nfunction listAllSeries(indicatorType, optionName, chart, parentDiv, currentSeries, selectedOption) {\n    const popup = this;\n    // Won't work without the chart.\n    if (!chart) {\n        return;\n    }\n    // Add selection boxes.\n    const selectBox = addSelection.call(popup, indicatorType, optionName, parentDiv);\n    // Add possible dropdown options.\n    addSelectionOptions.call(popup, chart, optionName, selectBox, void 0, void 0, void 0, currentSeries);\n    // Add the default dropdown value if defined.\n    if (PopupIndicators_defined(selectedOption)) {\n        selectBox.value = selectedOption;\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst PopupIndicators = {\n    addForm: PopupIndicators_addForm,\n    getAmount\n};\n/* harmony default export */ const Popup_PopupIndicators = (PopupIndicators);\n\n;// ./code/es-modules/Extensions/Annotations/Popup/PopupTabs.js\n/* *\n *\n *  Popup generator for Stock tools\n *\n *  (c) 2009-2025 Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { doc: PopupTabs_doc } = (external_highcharts_src_js_default_default());\n\nconst { addEvent: PopupTabs_addEvent, createElement: PopupTabs_createElement } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Create tab content\n * @private\n * @return {HTMLDOMElement} - created HTML tab-content element\n */\nfunction addContentItem() {\n    const popupDiv = this.container;\n    return PopupTabs_createElement('div', {\n        // #12100\n        className: 'highcharts-tab-item-content highcharts-no-mousewheel'\n    }, void 0, popupDiv);\n}\n/**\n * Create tab menu item\n * @private\n * @param {string} tabName\n * `add` or `edit`\n * @param {number} [disableTab]\n * Disable tab when 0\n * @return {Highcharts.HTMLDOMElement}\n * Created HTML tab-menu element\n */\nfunction addMenuItem(tabName, disableTab) {\n    const popupDiv = this.container, lang = this.lang;\n    let className = 'highcharts-tab-item';\n    if (disableTab === 0) {\n        className += ' highcharts-tab-disabled';\n    }\n    // Tab 1\n    const menuItem = PopupTabs_createElement('button', {\n        className\n    }, void 0, popupDiv);\n    menuItem.appendChild(PopupTabs_doc.createTextNode(lang[tabName + 'Button'] || tabName));\n    menuItem.setAttribute('highcharts-data-tab-type', tabName);\n    return menuItem;\n}\n/**\n * Set all tabs as invisible.\n * @private\n */\nfunction deselectAll() {\n    const popupDiv = this.container, tabs = popupDiv\n        .querySelectorAll('.highcharts-tab-item'), tabsContent = popupDiv\n        .querySelectorAll('.highcharts-tab-item-content');\n    for (let i = 0; i < tabs.length; i++) {\n        tabs[i].classList.remove('highcharts-tab-item-active');\n        tabsContent[i].classList.remove('highcharts-tab-item-show');\n    }\n}\n/**\n * Init tabs. Create tab menu items, tabs containers\n * @private\n * @param {Highcharts.Chart} chart\n * Reference to current chart\n */\nfunction init(chart) {\n    if (!chart) {\n        return;\n    }\n    const indicatorsCount = this.indicators.getAmount.call(chart);\n    // Create menu items\n    const firstTab = addMenuItem.call(this, 'add'); // Run by default\n    addMenuItem.call(this, 'edit', indicatorsCount);\n    // Create tabs containers\n    addContentItem.call(this);\n    addContentItem.call(this);\n    switchTabs.call(this, indicatorsCount);\n    // Activate first tab\n    selectTab.call(this, firstTab, 0);\n}\n/**\n * Set tab as visible\n * @private\n * @param {globals.Element} - current tab\n * @param {number} - Index of tab in menu\n */\nfunction selectTab(tab, index) {\n    const allTabs = this.container\n        .querySelectorAll('.highcharts-tab-item-content');\n    tab.className += ' highcharts-tab-item-active';\n    allTabs[index].className += ' highcharts-tab-item-show';\n}\n/**\n * Add click event to each tab\n * @private\n * @param {number} disableTab\n * Disable tab when 0\n */\nfunction switchTabs(disableTab) {\n    const popup = this, popupDiv = this.container, tabs = popupDiv.querySelectorAll('.highcharts-tab-item');\n    tabs.forEach((tab, i) => {\n        if (disableTab === 0 &&\n            tab.getAttribute('highcharts-data-tab-type') === 'edit') {\n            return;\n        }\n        ['click', 'touchstart'].forEach((eventName) => {\n            PopupTabs_addEvent(tab, eventName, function () {\n                // Reset class on other elements\n                deselectAll.call(popup);\n                selectTab.call(popup, this, i);\n            });\n        });\n    });\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst PopupTabs = {\n    init\n};\n/* harmony default export */ const Popup_PopupTabs = (PopupTabs);\n\n;// ./code/es-modules/Extensions/Annotations/Popup/Popup.js\n/* *\n *\n *  Popup generator for Stock tools\n *\n *  (c) 2009-2025 Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { doc: Popup_doc } = (external_highcharts_src_js_default_default());\n\nconst { getOptions } = (external_highcharts_src_js_default_default());\n\n\n\n\nconst { addEvent: Popup_addEvent, createElement: Popup_createElement, extend: Popup_extend, fireEvent: Popup_fireEvent, pick: Popup_pick } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Get values from all inputs and selections then create JSON.\n *\n * @private\n *\n * @param {Highcharts.HTMLDOMElement} parentDiv\n * The container where inputs and selections are created.\n *\n * @param {string} type\n * Type of the popup bookmark (add|edit|remove).\n */\nfunction getFields(parentDiv, type) {\n    const inputList = Array.prototype.slice.call(parentDiv.querySelectorAll('input')), selectList = Array.prototype.slice.call(parentDiv.querySelectorAll('select')), optionSeries = '#highcharts-select-series > option:checked', optionVolume = '#highcharts-select-volume > option:checked', linkedTo = parentDiv.querySelectorAll(optionSeries)[0], volumeTo = parentDiv.querySelectorAll(optionVolume)[0];\n    const fieldsOutput = {\n        actionType: type,\n        linkedTo: linkedTo && linkedTo.getAttribute('value') || '',\n        fields: {}\n    };\n    inputList.forEach((input) => {\n        const param = input.getAttribute('highcharts-data-name'), seriesId = input.getAttribute('highcharts-data-series-id');\n        // Params\n        if (seriesId) {\n            fieldsOutput.seriesId = input.value;\n        }\n        else if (param) {\n            fieldsOutput.fields[param] = input.value;\n        }\n        else {\n            // Type like sma / ema\n            fieldsOutput.type = input.value;\n        }\n    });\n    selectList.forEach((select) => {\n        const id = select.id;\n        // Get inputs only for the parameters, not for series and volume.\n        if (id !== 'highcharts-select-series' &&\n            id !== 'highcharts-select-volume') {\n            const parameter = id.split('highcharts-select-')[1];\n            fieldsOutput.fields[parameter] = select.value;\n        }\n    });\n    if (volumeTo) {\n        fieldsOutput.fields['params.volumeSeriesID'] = volumeTo\n            .getAttribute('value') || '';\n    }\n    return fieldsOutput;\n}\n/* *\n *\n *  Class\n *\n * */\nclass Popup extends Shared_BaseForm {\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(parentDiv, iconsURL, chart) {\n        super(parentDiv, iconsURL);\n        this.chart = chart;\n        this.lang = (getOptions().lang.navigation || {}).popup || {};\n        Popup_addEvent(this.container, 'mousedown', () => {\n            const activeAnnotation = chart &&\n                chart.navigationBindings &&\n                chart.navigationBindings.activeAnnotation;\n            if (activeAnnotation) {\n                activeAnnotation.cancelClick = true;\n                const unbind = Popup_addEvent(Popup_doc, 'click', () => {\n                    setTimeout(() => {\n                        activeAnnotation.cancelClick = false;\n                    }, 0);\n                    unbind();\n                });\n            }\n        });\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Create input with label.\n     *\n     * @private\n     *\n     * @param {string} option\n     *        Chain of fields i.e params.styles.fontSize separated by the dot.\n     *\n     * @param {string} indicatorType\n     *        Type of the indicator i.e. sma, ema...\n     *\n     * @param {HTMLDOMElement} parentDiv\n     *        HTML parent element.\n     *\n     * @param {Highcharts.InputAttributes} inputAttributes\n     *        Attributes of the input.\n     *\n     * @return {HTMLInputElement}\n     *         Return created input element.\n     */\n    addInput(option, indicatorType, parentDiv, inputAttributes) {\n        const optionParamList = option.split('.'), optionName = optionParamList[optionParamList.length - 1], lang = this.lang, inputName = 'highcharts-' + indicatorType + '-' + Popup_pick(inputAttributes.htmlFor, optionName);\n        if (!optionName.match(/^\\d+$/)) {\n            // Add label\n            Popup_createElement('label', {\n                htmlFor: inputName,\n                className: inputAttributes.labelClassName\n            }, void 0, parentDiv).appendChild(Popup_doc.createTextNode(lang[optionName] || optionName));\n        }\n        // Add input\n        const input = Popup_createElement('input', {\n            name: inputName,\n            value: inputAttributes.value,\n            type: inputAttributes.type,\n            className: 'highcharts-popup-field'\n        }, void 0, parentDiv);\n        input.setAttribute('highcharts-data-name', option);\n        return input;\n    }\n    closeButtonEvents() {\n        if (this.chart) {\n            const navigationBindings = this.chart.navigationBindings;\n            Popup_fireEvent(navigationBindings, 'closePopup');\n            if (navigationBindings &&\n                navigationBindings.selectedButtonElement) {\n                Popup_fireEvent(navigationBindings, 'deselectButton', { button: navigationBindings.selectedButtonElement });\n            }\n        }\n        else {\n            super.closeButtonEvents();\n        }\n    }\n    /**\n     * Create button.\n     * @private\n     * @param {Highcharts.HTMLDOMElement} parentDiv\n     * Container where elements should be added\n     * @param {string} label\n     * Text placed as button label\n     * @param {string} type\n     * add | edit | remove\n     * @param {Function} callback\n     * On click callback\n     * @param {Highcharts.HTMLDOMElement} fieldsDiv\n     * Container where inputs are generated\n     * @return {Highcharts.HTMLDOMElement}\n     * HTML button\n     */\n    addButton(parentDiv, label, type, fieldsDiv, callback) {\n        const button = Popup_createElement('button', void 0, void 0, parentDiv);\n        button.appendChild(Popup_doc.createTextNode(label));\n        if (callback) {\n            ['click', 'touchstart'].forEach((eventName) => {\n                Popup_addEvent(button, eventName, () => {\n                    this.closePopup();\n                    return callback(getFields(fieldsDiv, type));\n                });\n            });\n        }\n        return button;\n    }\n    /**\n     * Create content and show popup.\n     * @private\n     * @param {string} - type of popup i.e indicators\n     * @param {Highcharts.Chart} - chart\n     * @param {Highcharts.AnnotationsOptions} - options\n     * @param {Function} - on click callback\n     */\n    showForm(type, chart, options, callback) {\n        if (!chart) {\n            return;\n        }\n        // Show blank popup\n        this.showPopup();\n        // Indicator form\n        if (type === 'indicators') {\n            this.indicators.addForm.call(this, chart, options, callback);\n        }\n        // Annotation small toolbar\n        if (type === 'annotation-toolbar') {\n            this.annotations.addToolbar.call(this, chart, options, callback);\n        }\n        // Annotation edit form\n        if (type === 'annotation-edit') {\n            this.annotations.addForm.call(this, chart, options, callback);\n        }\n        // Flags form - add / edit\n        if (type === 'flag') {\n            this.annotations.addForm.call(this, chart, options, callback, true);\n        }\n        this.type = type;\n        // Explicit height is needed to make inner elements scrollable\n        this.container.style.height = this.container.offsetHeight + 'px';\n    }\n}\nPopup_extend(Popup.prototype, {\n    annotations: Popup_PopupAnnotations,\n    indicators: Popup_PopupIndicators,\n    tabs: Popup_PopupTabs\n});\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Popup_Popup = (Popup);\n\n;// ./code/es-modules/Extensions/Annotations/Popup/PopupComposition.js\n/* *\n *\n *  Popup generator for Stock tools\n *\n *  (c) 2009-2025 Sebastian Bochan\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { composed } = (external_highcharts_src_js_default_default());\n\n\nconst { addEvent: PopupComposition_addEvent, pushUnique, wrap: PopupComposition_wrap } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction compose(NagivationBindingsClass, PointerClass) {\n    if (pushUnique(composed, 'Popup')) {\n        PopupComposition_addEvent(NagivationBindingsClass, 'closePopup', onNavigationBindingsClosePopup);\n        PopupComposition_addEvent(NagivationBindingsClass, 'showPopup', onNavigationBindingsShowPopup);\n        PopupComposition_wrap(PointerClass.prototype, 'onContainerMouseDown', wrapPointerOnContainerMouserDown);\n    }\n}\n/**\n * @private\n */\nfunction onNavigationBindingsClosePopup() {\n    if (this.popup) {\n        this.popup.closePopup();\n    }\n}\n/**\n * @private\n */\nfunction onNavigationBindingsShowPopup(config) {\n    if (!this.popup) {\n        // Add popup to main container\n        this.popup = new Popup_Popup(this.chart.container, (this.chart.options.navigation.iconsURL ||\n            (this.chart.options.stockTools &&\n                this.chart.options.stockTools.gui.iconsURL) ||\n            'https://code.highcharts.com/12.3.0/gfx/stock-icons/'), this.chart);\n    }\n    this.popup.showForm(config.formType, this.chart, config.options, config.onSubmit);\n}\n/**\n * `onContainerMouseDown` blocks internal popup events, due to e.preventDefault.\n * Related issue #4606\n * @private\n */\nfunction wrapPointerOnContainerMouserDown(proceed, e) {\n    // Elements is not in popup\n    if (!this.inClass(e.target, 'highcharts-popup')) {\n        proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst PopupComposition = {\n    compose\n};\n/* harmony default export */ const Popup_PopupComposition = (PopupComposition);\n\n;// ./code/es-modules/Extensions/Annotations/Annotation.js\n/* *\n *\n *  (c) 2009-2025 Highsoft, Black Label\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { getDeferredAnimation } = (external_highcharts_src_js_default_default());\n\n\n\n\n\n\n\n\n\n\n\nconst { defaultOptions } = (external_highcharts_src_js_default_default());\n\n\n\n\nconst { destroyObjectProperties, erase: Annotation_erase, fireEvent: Annotation_fireEvent, merge: Annotation_merge, pick: Annotation_pick, splat } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Hide or show annotation attached to points.\n * @private\n */\nfunction adjustVisibility(item) {\n    const label = item.graphic, hasVisiblePoints = item.points.some((point) => (point.series.visible !== false &&\n        point.visible !== false));\n    if (label) {\n        if (!hasVisiblePoints) {\n            label.hide();\n        }\n        else if (label.visibility === 'hidden') {\n            label.show();\n        }\n    }\n}\n/**\n * @private\n */\nfunction getLabelsAndShapesOptions(baseOptions, newOptions) {\n    const mergedOptions = {};\n    ['labels', 'shapes'].forEach((name) => {\n        const someBaseOptions = baseOptions[name], newOptionsValue = newOptions[name];\n        if (someBaseOptions) {\n            if (newOptionsValue) {\n                mergedOptions[name] = splat(newOptionsValue).map((basicOptions, i) => Annotation_merge(someBaseOptions[i], basicOptions));\n            }\n            else {\n                mergedOptions[name] = baseOptions[name];\n            }\n        }\n    });\n    return mergedOptions;\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * An annotation class which serves as a container for items like labels or\n * shapes. Created items are positioned on the chart either by linking them to\n * existing points or created mock points\n *\n * @requires modules/annotations\n *\n * @class\n * @name Highcharts.Annotation\n *\n * @param {Highcharts.Chart} chart\n *        A chart instance\n * @param {Highcharts.AnnotationsOptions} userOptions\n *        The annotation options\n */\nclass Annotation extends Annotations_EventEmitter {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    static compose(ChartClass, NavigationBindingsClass, PointerClass, SVGRendererClass) {\n        Annotations_AnnotationChart.compose(Annotation, ChartClass, PointerClass);\n        Controllables_ControllableLabel.compose(SVGRendererClass);\n        Controllables_ControllablePath.compose(ChartClass, SVGRendererClass);\n        NavigationBindingsClass.compose(Annotation, ChartClass);\n        Popup_PopupComposition.compose(NavigationBindingsClass, PointerClass);\n    }\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    constructor(chart, userOptions) {\n        super();\n        this.coll = 'annotations';\n        /**\n         * The chart that the annotation belongs to.\n         *\n         * @name Highcharts.Annotation#chart\n         * @type {Highcharts.Chart}\n         */\n        this.chart = chart;\n        /**\n         * The array of points which defines the annotation.\n         * @private\n         * @name Highcharts.Annotation#points\n         * @type {Array<Highcharts.Point>}\n         */\n        this.points = [];\n        /**\n         * The array of control points.\n         * @private\n         * @name Highcharts.Annotation#controlPoints\n         * @type {Array<Annotation.ControlPoint>}\n         */\n        this.controlPoints = [];\n        this.coll = 'annotations';\n        this.index = -1;\n        /**\n         * The array of labels which belong to the annotation.\n         * @private\n         * @name Highcharts.Annotation#labels\n         * @type {Array<Highcharts.AnnotationLabelType>}\n         */\n        this.labels = [];\n        /**\n         * The array of shapes which belong to the annotation.\n         * @private\n         * @name Highcharts.Annotation#shapes\n         * @type {Array<Highcharts.AnnotationShapeType>}\n         */\n        this.shapes = [];\n        /**\n         * The options for the annotations.\n         *\n         * @name Highcharts.Annotation#options\n         * @type {Highcharts.AnnotationsOptions}\n         */\n        this.setOptions(userOptions);\n        /**\n         * The user options for the annotations.\n         *\n         * @name Highcharts.Annotation#userOptions\n         * @type {Highcharts.AnnotationsOptions}\n         */\n        this.userOptions = userOptions;\n        // Handle labels and shapes - those are arrays\n        // Merging does not work with arrays (stores reference)\n        const labelsAndShapes = getLabelsAndShapesOptions(this.options, userOptions);\n        this.options.labels = labelsAndShapes.labels;\n        this.options.shapes = labelsAndShapes.shapes;\n        /**\n         * The callback that reports to the overlapping labels logic which\n         * labels it should account for.\n         * @private\n         * @name Highcharts.Annotation#labelCollector\n         * @type {Function}\n         */\n        /**\n         * The group svg element.\n         *\n         * @name Highcharts.Annotation#group\n         * @type {Highcharts.SVGElement}\n         */\n        /**\n         * The group svg element of the annotation's shapes.\n         *\n         * @name Highcharts.Annotation#shapesGroup\n         * @type {Highcharts.SVGElement}\n         */\n        /**\n         * The group svg element of the annotation's labels.\n         *\n         * @name Highcharts.Annotation#labelsGroup\n         * @type {Highcharts.SVGElement}\n         */\n        this.init(chart, this.options);\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * @private\n     */\n    addClipPaths() {\n        this.setClipAxes();\n        if (this.clipXAxis &&\n            this.clipYAxis &&\n            this.options.crop // #15399\n        ) {\n            this.clipRect = this.chart.renderer.clipRect(this.getClipBox());\n        }\n    }\n    /**\n     * @private\n     */\n    addLabels() {\n        const labelsOptions = (this.options.labels || []);\n        labelsOptions.forEach((labelOptions, i) => {\n            const label = this.initLabel(labelOptions, i);\n            Annotation_merge(true, labelsOptions[i], label.options);\n        });\n    }\n    /**\n     * @private\n     */\n    addShapes() {\n        const shapes = this.options.shapes || [];\n        shapes.forEach((shapeOptions, i) => {\n            const shape = this.initShape(shapeOptions, i);\n            Annotation_merge(true, shapes[i], shape.options);\n        });\n    }\n    /**\n     * Destroy the annotation. This function does not touch the chart\n     * that the annotation belongs to (all annotations are kept in\n     * the chart.annotations array) - it is recommended to use\n     * {@link Highcharts.Chart#removeAnnotation} instead.\n     * @private\n     */\n    destroy() {\n        const chart = this.chart, destroyItem = function (item) {\n            item.destroy();\n        };\n        this.labels.forEach(destroyItem);\n        this.shapes.forEach(destroyItem);\n        this.clipXAxis = null;\n        this.clipYAxis = null;\n        Annotation_erase(chart.labelCollectors, this.labelCollector);\n        super.destroy();\n        this.destroyControlTarget();\n        destroyObjectProperties(this, chart);\n    }\n    /**\n     * Destroy a single item.\n     * @private\n     */\n    destroyItem(item) {\n        // Erase from shapes or labels array\n        Annotation_erase(this[item.itemType + 's'], item);\n        item.destroy();\n    }\n    /**\n     * @private\n     */\n    getClipBox() {\n        if (this.clipXAxis && this.clipYAxis) {\n            return {\n                x: this.clipXAxis.left,\n                y: this.clipYAxis.top,\n                width: this.clipXAxis.width,\n                height: this.clipYAxis.height\n            };\n        }\n    }\n    /**\n     * Initialize the annotation properties.\n     * @private\n     */\n    initProperties(chart, userOptions) {\n        this.setOptions(userOptions);\n        const labelsAndShapes = getLabelsAndShapesOptions(this.options, userOptions);\n        this.options.labels = labelsAndShapes.labels;\n        this.options.shapes = labelsAndShapes.shapes;\n        this.chart = chart;\n        this.points = [];\n        this.controlPoints = [];\n        this.coll = 'annotations';\n        this.userOptions = userOptions;\n        this.labels = [];\n        this.shapes = [];\n    }\n    /**\n     * Initialize the annotation.\n     * @private\n     */\n    init(_annotationOrChart, _userOptions, index = this.index) {\n        const chart = this.chart, animOptions = this.options.animation;\n        this.index = index;\n        this.linkPoints();\n        this.addControlPoints();\n        this.addShapes();\n        this.addLabels();\n        this.setLabelCollector();\n        this.animationConfig = getDeferredAnimation(chart, animOptions);\n    }\n    /**\n     * Initialisation of a single label\n     * @private\n     */\n    initLabel(labelOptions, index) {\n        const options = Annotation_merge(this.options.labelOptions, {\n            controlPointOptions: this.options.controlPointOptions\n        }, labelOptions), label = new Controllables_ControllableLabel(this, options, index);\n        label.itemType = 'label';\n        this.labels.push(label);\n        return label;\n    }\n    /**\n     * Initialisation of a single shape\n     * @private\n     * @param {Object} shapeOptions\n     * a config object for a single shape\n     * @param {number} index\n     * annotation may have many shapes, this is the shape's index saved in\n     * shapes.index.\n     */\n    initShape(shapeOptions, index) {\n        const options = Annotation_merge(this.options.shapeOptions, {\n            controlPointOptions: this.options.controlPointOptions\n        }, shapeOptions), shape = new (Annotation.shapesMap[options.type])(this, options, index);\n        shape.itemType = 'shape';\n        this.shapes.push(shape);\n        return shape;\n    }\n    /**\n     * @private\n     */\n    redraw(animation) {\n        this.linkPoints();\n        if (!this.graphic) {\n            this.render();\n        }\n        if (this.clipRect) {\n            this.clipRect.animate(this.getClipBox());\n        }\n        this.redrawItems(this.shapes, animation);\n        this.redrawItems(this.labels, animation);\n        this.redrawControlPoints(animation);\n    }\n    /**\n     * Redraw a single item.\n     * @private\n     */\n    redrawItem(item, animation) {\n        item.linkPoints();\n        if (!item.shouldBeDrawn()) {\n            this.destroyItem(item);\n        }\n        else {\n            if (!item.graphic) {\n                this.renderItem(item);\n            }\n            item.redraw(Annotation_pick(animation, true) && item.graphic.placed);\n            if (item.points.length) {\n                adjustVisibility(item);\n            }\n        }\n    }\n    /**\n     * @private\n     */\n    redrawItems(items, animation) {\n        let i = items.length;\n        // Needs a backward loop. Labels/shapes array might be modified due to\n        // destruction of the item\n        while (i--) {\n            this.redrawItem(items[i], animation);\n        }\n    }\n    /**\n     * See {@link Highcharts.Chart#removeAnnotation}.\n     * @private\n     */\n    remove() {\n        // Let chart.update() remove annotations on demand\n        return this.chart.removeAnnotation(this);\n    }\n    /**\n     * @private\n     */\n    render() {\n        const renderer = this.chart.renderer;\n        this.graphic = renderer\n            .g('annotation')\n            .attr({\n            opacity: 0,\n            zIndex: this.options.zIndex,\n            visibility: this.options.visible ?\n                'inherit' :\n                'hidden'\n        })\n            .add();\n        this.shapesGroup = renderer\n            .g('annotation-shapes')\n            .add(this.graphic);\n        if (this.options.crop) { // #15399\n            this.shapesGroup.clip(this.chart.plotBoxClip);\n        }\n        this.labelsGroup = renderer\n            .g('annotation-labels')\n            .attr({\n            // `hideOverlappingLabels` requires translation\n            translateX: 0,\n            translateY: 0\n        })\n            .add(this.graphic);\n        this.addClipPaths();\n        if (this.clipRect) {\n            this.graphic.clip(this.clipRect);\n        }\n        // Render shapes and labels before adding events (#13070).\n        this.renderItems(this.shapes);\n        this.renderItems(this.labels);\n        this.addEvents();\n        this.renderControlPoints();\n    }\n    /**\n     * @private\n     */\n    renderItem(item) {\n        item.render(item.itemType === 'label' ?\n            this.labelsGroup :\n            this.shapesGroup);\n    }\n    /**\n     * @private\n     */\n    renderItems(items) {\n        let i = items.length;\n        while (i--) {\n            this.renderItem(items[i]);\n        }\n    }\n    /**\n     * @private\n     */\n    setClipAxes() {\n        const xAxes = this.chart.xAxis, yAxes = this.chart.yAxis, linkedAxes = (this.options.labels || [])\n            .concat(this.options.shapes || [])\n            .reduce((axes, labelOrShape) => {\n            const point = labelOrShape &&\n                (labelOrShape.point ||\n                    (labelOrShape.points && labelOrShape.points[0]));\n            return [\n                xAxes[point && point.xAxis] || axes[0],\n                yAxes[point && point.yAxis] || axes[1]\n            ];\n        }, []);\n        this.clipXAxis = linkedAxes[0];\n        this.clipYAxis = linkedAxes[1];\n    }\n    /**\n     * @private\n     */\n    setControlPointsVisibility(visible) {\n        const setItemControlPointsVisibility = function (item) {\n            item.setControlPointsVisibility(visible);\n        };\n        this.controlPoints.forEach((controlPoint) => {\n            controlPoint.setVisibility(visible);\n        });\n        this.shapes.forEach(setItemControlPointsVisibility);\n        this.labels.forEach(setItemControlPointsVisibility);\n    }\n    /**\n     * @private\n     */\n    setLabelCollector() {\n        const annotation = this;\n        annotation.labelCollector = function () {\n            return annotation.labels.reduce(function (labels, label) {\n                if (!label.options.allowOverlap) {\n                    labels.push(label.graphic);\n                }\n                return labels;\n            }, []);\n        };\n        annotation.chart.labelCollectors.push(annotation.labelCollector);\n    }\n    /**\n     * Set an annotation options.\n     * @private\n     * @param {Highcharts.AnnotationsOptions} userOptions\n     *        User options for an annotation\n     */\n    setOptions(userOptions) {\n        this.options = Annotation_merge(\n        // Shared for all annotation types\n        this.defaultOptions, \n        // The static typeOptions from the class\n        (userOptions.type &&\n            this.defaultOptions.types[userOptions.type]) || {}, userOptions);\n    }\n    /**\n     * Set the annotation's visibility.\n     * @private\n     * @param {boolean} [visible]\n     * Whether to show or hide an annotation. If the param is omitted, the\n     * annotation's visibility is toggled.\n     */\n    setVisibility(visible) {\n        const options = this.options, navigation = this.chart.navigationBindings, visibility = Annotation_pick(visible, !options.visible);\n        this.graphic.attr('visibility', visibility ? 'inherit' : 'hidden');\n        if (!visibility) {\n            const setItemControlPointsVisibility = function (item) {\n                item.setControlPointsVisibility(visibility);\n            };\n            this.shapes.forEach(setItemControlPointsVisibility);\n            this.labels.forEach(setItemControlPointsVisibility);\n            if (navigation.activeAnnotation === this &&\n                navigation.popup &&\n                navigation.popup.type === 'annotation-toolbar') {\n                Annotation_fireEvent(navigation, 'closePopup');\n            }\n        }\n        options.visible = visibility;\n    }\n    /**\n     * Updates an annotation.\n     *\n     * @function Highcharts.Annotation#update\n     *\n     * @param {Partial<Highcharts.AnnotationsOptions>} userOptions\n     *        New user options for the annotation.\n     *\n     */\n    update(userOptions, redraw) {\n        const chart = this.chart, labelsAndShapes = getLabelsAndShapesOptions(this.userOptions, userOptions), userOptionsIndex = chart.annotations.indexOf(this), options = Annotation_merge(true, this.userOptions, userOptions);\n        options.labels = labelsAndShapes.labels;\n        options.shapes = labelsAndShapes.shapes;\n        this.destroy();\n        this.initProperties(chart, options);\n        this.init(chart, options);\n        // Update options in chart options, used in exporting (#9767, #21507):\n        chart.options.annotations[userOptionsIndex] = this.options;\n        this.isUpdating = true;\n        if (Annotation_pick(redraw, true)) {\n            chart.drawAnnotations();\n        }\n        Annotation_fireEvent(this, 'afterUpdate');\n        this.isUpdating = false;\n    }\n}\n/**\n * @private\n */\nAnnotation.ControlPoint = Annotations_ControlPoint;\n/**\n * @private\n */\nAnnotation.MockPoint = Annotations_MockPoint;\n/**\n * An object uses for mapping between a shape type and a constructor.\n * To add a new shape type extend this object with type name as a key\n * and a constructor as its value.\n *\n * @private\n */\nAnnotation.shapesMap = {\n    'rect': Controllables_ControllableRect,\n    'circle': Controllables_ControllableCircle,\n    'ellipse': Controllables_ControllableEllipse,\n    'path': Controllables_ControllablePath,\n    'image': Controllables_ControllableImage\n};\n/**\n * @private\n */\nAnnotation.types = {};\nAnnotation.prototype.defaultOptions = Annotations_AnnotationDefaults;\ndefaultOptions.annotations = Annotations_AnnotationDefaults;\n/**\n * List of events for `annotation.options.events` that should not be\n * added to `annotation.graphic` but to the `annotation`.\n *\n * @private\n * @type {Array<string>}\n */\nAnnotation.prototype.nonDOMEvents = ['add', 'afterUpdate', 'drag', 'remove'];\nAnnotations_ControlTarget.compose(Annotation);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Annotations_Annotation = (Annotation);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * Possible directions for draggable annotations. An empty string (`''`)\n * makes the annotation undraggable.\n *\n * @typedef {''|'x'|'xy'|'y'} Highcharts.AnnotationDraggableValue\n * @requires modules/annotations\n */\n/**\n * @private\n * @typedef {\n *          Highcharts.AnnotationControllableCircle|\n *          Highcharts.AnnotationControllableImage|\n *          Highcharts.AnnotationControllablePath|\n *          Highcharts.AnnotationControllableRect\n *     } Highcharts.AnnotationShapeType\n * @requires modules/annotations\n */\n/**\n * @private\n * @typedef {\n *          Highcharts.AnnotationControllableLabel\n *     } Highcharts.AnnotationLabelType\n * @requires modules/annotations\n */\n/**\n * A point-like object, a mock point or a point used in series.\n * @private\n * @typedef {\n *          Highcharts.AnnotationMockPoint|\n *          Highcharts.Point\n *     } Highcharts.AnnotationPointType\n * @requires modules/annotations\n */\n/**\n * Shape point as string, object or function.\n *\n * @typedef {\n *          string|\n *          Highcharts.AnnotationMockPointOptionsObject|\n *          Highcharts.AnnotationMockPointFunction\n *     } Highcharts.AnnotationShapePointOptions\n */\n(''); // Keeps doclets above in JS file\n\n;// ./code/es-modules/Core/Chart/ChartNavigationComposition.js\n/**\n *\n *  (c) 2010-2025 Paweł Fus\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Composition\n *\n * */\nvar ChartNavigationComposition;\n(function (ChartNavigationComposition) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * @private\n     */\n    function compose(chart) {\n        if (!chart.navigation) {\n            chart.navigation = new Additions(chart);\n        }\n        return chart;\n    }\n    ChartNavigationComposition.compose = compose;\n    /* *\n     *\n     *  Class\n     *\n     * */\n    /**\n     * Initializes `chart.navigation` object which delegates `update()` methods\n     * to all other common classes (used in exporting and navigationBindings).\n     * @private\n     */\n    class Additions {\n        /* *\n         *\n         *  Constructor\n         *\n         * */\n        constructor(chart) {\n            this.updates = [];\n            this.chart = chart;\n        }\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Registers an `update()` method in the `chart.navigation` object.\n         *\n         * @private\n         * @param {UpdateFunction} updateFn\n         * The `update()` method that will be called in `chart.update()`.\n         */\n        addUpdate(updateFn) {\n            this.chart.navigation.updates.push(updateFn);\n        }\n        /**\n         * @private\n         */\n        update(options, redraw) {\n            this.updates.forEach((updateFn) => {\n                updateFn.call(this.chart, options, redraw);\n            });\n        }\n    }\n    ChartNavigationComposition.Additions = Additions;\n})(ChartNavigationComposition || (ChartNavigationComposition = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Chart_ChartNavigationComposition = (ChartNavigationComposition);\n\n;// ./code/es-modules/Extensions/Annotations/NavigationBindingsUtilities.js\n/* *\n *\n *  (c) 2009-2025 Highsoft, Black Label\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { defined: NavigationBindingsUtilities_defined, isNumber: NavigationBindingsUtilities_isNumber, pick: NavigationBindingsUtilities_pick } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\n/**\n * Define types for editable fields per annotation. There is no need to define\n * numbers, because they won't change their type to string.\n * @private\n */\nconst annotationsFieldsTypes = {\n    backgroundColor: 'string',\n    borderColor: 'string',\n    borderRadius: 'string',\n    color: 'string',\n    fill: 'string',\n    fontSize: 'string',\n    labels: 'string',\n    name: 'string',\n    stroke: 'string',\n    title: 'string'\n};\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Returns the first xAxis or yAxis that was clicked with its value.\n *\n * @private\n *\n * @param {Array<Highcharts.PointerAxisCoordinateObject>} coords\n *        All the chart's x or y axes with a current pointer's axis value.\n *\n * @return {Highcharts.PointerAxisCoordinateObject}\n *         Object with a first found axis and its value that pointer\n *         is currently pointing.\n */\nfunction getAssignedAxis(coords) {\n    return coords.filter((coord) => {\n        const extremes = coord.axis.getExtremes(), axisMin = extremes.min, axisMax = extremes.max, \n        // Correct axis edges when axis has series\n        // with pointRange (like column)\n        minPointOffset = NavigationBindingsUtilities_pick(coord.axis.minPointOffset, 0);\n        return NavigationBindingsUtilities_isNumber(axisMin) && NavigationBindingsUtilities_isNumber(axisMax) &&\n            coord.value >= (axisMin - minPointOffset) &&\n            coord.value <= (axisMax + minPointOffset) &&\n            // Don't count navigator axis\n            !coord.axis.options.isInternal;\n    })[0]; // If the axes overlap, return the first axis that was found.\n}\n/**\n * Get field type according to value\n *\n * @private\n *\n * @param {'boolean'|'number'|'string'} value\n * Atomic type (one of: string, number, boolean)\n *\n * @return {'checkbox'|'number'|'text'}\n * Field type (one of: text, number, checkbox)\n */\nfunction getFieldType(key, value) {\n    const predefinedType = annotationsFieldsTypes[key];\n    let fieldType = typeof value;\n    if (NavigationBindingsUtilities_defined(predefinedType)) {\n        fieldType = predefinedType;\n    }\n    return {\n        'string': 'text',\n        'number': 'number',\n        'boolean': 'checkbox'\n    }[fieldType];\n}\n/* *\n *\n *  Default Export\n *\n * */\nconst NavigationBindingUtilities = {\n    annotationsFieldsTypes,\n    getAssignedAxis,\n    getFieldType\n};\n/* harmony default export */ const NavigationBindingsUtilities = (NavigationBindingUtilities);\n\n;// ./code/es-modules/Extensions/Annotations/NavigationBindingsDefaults.js\n/* *\n *\n *  (c) 2009-2025 Highsoft, Black Label\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nconst { getAssignedAxis: NavigationBindingsDefaults_getAssignedAxis } = NavigationBindingsUtilities;\n\nconst { isNumber: NavigationBindingsDefaults_isNumber, merge: NavigationBindingsDefaults_merge } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Constants\n *\n * */\n/**\n * @optionparent lang\n */\nconst lang = {\n    /**\n     * Configure the Popup strings in the chart. Requires the\n     * `annotations.js` or `annotations-advanced.js` module to be\n     * loaded.\n     * @since   7.0.0\n     * @product highcharts highstock\n     */\n    navigation: {\n        /**\n         * Translations for all field names used in popup.\n         *\n         * @product highcharts highstock\n         */\n        popup: {\n            simpleShapes: 'Simple shapes',\n            lines: 'Lines',\n            circle: 'Circle',\n            ellipse: 'Ellipse',\n            rectangle: 'Rectangle',\n            label: 'Label',\n            shapeOptions: 'Shape options',\n            typeOptions: 'Details',\n            fill: 'Fill',\n            format: 'Text',\n            strokeWidth: 'Line width',\n            stroke: 'Line color',\n            title: 'Title',\n            name: 'Name',\n            labelOptions: 'Label options',\n            labels: 'Labels',\n            backgroundColor: 'Background color',\n            backgroundColors: 'Background colors',\n            borderColor: 'Border color',\n            borderRadius: 'Border radius',\n            borderWidth: 'Border width',\n            style: 'Style',\n            padding: 'Padding',\n            fontSize: 'Font size',\n            color: 'Color',\n            height: 'Height',\n            shapes: 'Shape options'\n        }\n    }\n};\n/**\n * @optionparent navigation\n * @product      highcharts highstock\n */\nconst navigation = {\n    /**\n     * A CSS class name where all bindings will be attached to. Multiple\n     * charts on the same page should have separate class names to prevent\n     * duplicating events.\n     *\n     * Default value of versions < 7.0.4 `highcharts-bindings-wrapper`\n     *\n     * @since     7.0.0\n     * @type      {string}\n     */\n    bindingsClassName: 'highcharts-bindings-container',\n    /**\n     * Bindings definitions for custom HTML buttons. Each binding implements\n     * simple event-driven interface:\n     *\n     * - `className`: classname used to bind event to\n     *\n     * - `init`: initial event, fired on button click\n     *\n     * - `start`: fired on first click on a chart\n     *\n     * - `steps`: array of sequential events fired one after another on each\n     *   of users clicks\n     *\n     * - `end`: last event to be called after last step event\n     *\n     * @type         {Highcharts.Dictionary<Highcharts.NavigationBindingsOptionsObject>|*}\n     *\n     * @sample {highstock} stock/stocktools/stocktools-thresholds\n     *               Custom bindings\n     * @sample {highcharts} highcharts/annotations/bindings/\n     *               Simple binding\n     * @sample {highcharts} highcharts/annotations/bindings-custom-annotation/\n     *               Custom annotation binding\n     *\n     * @since        7.0.0\n     * @requires     modules/annotations\n     * @product      highcharts highstock\n     */\n    bindings: {\n        /**\n         * A circle annotation bindings. Includes `start` and one event in\n         * `steps` array.\n         *\n         * @type    {Highcharts.NavigationBindingsOptionsObject}\n         * @default {\"className\": \"highcharts-circle-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n         */\n        circleAnnotation: {\n            /** @ignore-option */\n            className: 'highcharts-circle-annotation',\n            /** @ignore-option */\n            start: function (e) {\n                const coords = this.chart.pointer?.getCoordinates(e), coordsX = coords && NavigationBindingsDefaults_getAssignedAxis(coords.xAxis), coordsY = coords && NavigationBindingsDefaults_getAssignedAxis(coords.yAxis), navigation = this.chart.options.navigation;\n                // Exit if clicked out of axes area\n                if (!coordsX || !coordsY) {\n                    return;\n                }\n                return this.chart.addAnnotation(NavigationBindingsDefaults_merge({\n                    langKey: 'circle',\n                    type: 'basicAnnotation',\n                    shapes: [{\n                            type: 'circle',\n                            point: {\n                                x: coordsX.value,\n                                y: coordsY.value,\n                                xAxis: coordsX.axis.index,\n                                yAxis: coordsY.axis.index\n                            },\n                            r: 5\n                        }]\n                }, navigation.annotationsOptions, navigation.bindings.circleAnnotation\n                    .annotationsOptions));\n            },\n            /** @ignore-option */\n            steps: [\n                function (e, annotation) {\n                    const shapes = annotation.options.shapes, mockPointOpts = ((shapes && shapes[0] && shapes[0].point) ||\n                        {});\n                    let distance;\n                    if (NavigationBindingsDefaults_isNumber(mockPointOpts.xAxis) &&\n                        NavigationBindingsDefaults_isNumber(mockPointOpts.yAxis)) {\n                        const inverted = this.chart.inverted, x = this.chart.xAxis[mockPointOpts.xAxis]\n                            .toPixels(mockPointOpts.x), y = this.chart.yAxis[mockPointOpts.yAxis]\n                            .toPixels(mockPointOpts.y);\n                        distance = Math.max(Math.sqrt(Math.pow(inverted ? y - e.chartX : x - e.chartX, 2) +\n                            Math.pow(inverted ? x - e.chartY : y - e.chartY, 2)), 5);\n                    }\n                    annotation.update({\n                        shapes: [{\n                                r: distance\n                            }]\n                    });\n                }\n            ]\n        },\n        /**\n         * A ellipse annotation bindings. Includes `start` and two events in\n         * `steps` array. First updates the second point, responsible for a\n         * rx width, and second updates the ry width.\n         *\n         * @type    {Highcharts.NavigationBindingsOptionsObject}\n         * @default {\"className\": \"highcharts-ellipse-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n         */\n        ellipseAnnotation: {\n            className: 'highcharts-ellipse-annotation',\n            start: function (e) {\n                const coords = this.chart.pointer?.getCoordinates(e), coordsX = coords && NavigationBindingsDefaults_getAssignedAxis(coords.xAxis), coordsY = coords && NavigationBindingsDefaults_getAssignedAxis(coords.yAxis), navigation = this.chart.options.navigation;\n                if (!coordsX || !coordsY) {\n                    return;\n                }\n                return this.chart.addAnnotation(NavigationBindingsDefaults_merge({\n                    langKey: 'ellipse',\n                    type: 'basicAnnotation',\n                    shapes: [\n                        {\n                            type: 'ellipse',\n                            xAxis: coordsX.axis.index,\n                            yAxis: coordsY.axis.index,\n                            points: [{\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }, {\n                                    x: coordsX.value,\n                                    y: coordsY.value\n                                }],\n                            ry: 1\n                        }\n                    ]\n                }, navigation.annotationsOptions, navigation.bindings.ellipseAnnotation\n                    .annotationsOptions));\n            },\n            steps: [\n                function (e, annotation) {\n                    const target = annotation.shapes[0], position = target.getAbsolutePosition(target.points[1]);\n                    target.translatePoint(e.chartX - position.x, e.chartY - position.y, 1);\n                    target.redraw(false);\n                },\n                function (e, annotation) {\n                    const target = annotation.shapes[0], position = target.getAbsolutePosition(target.points[0]), position2 = target.getAbsolutePosition(target.points[1]), newR = target.getDistanceFromLine(position, position2, e.chartX, e.chartY), yAxis = target.getYAxis(), newRY = Math.abs(yAxis.toValue(0) - yAxis.toValue(newR));\n                    target.setYRadius(newRY);\n                    target.redraw(false);\n                }\n            ]\n        },\n        /**\n         * A rectangle annotation bindings. Includes `start` and one event\n         * in `steps` array.\n         *\n         * @type    {Highcharts.NavigationBindingsOptionsObject}\n         * @default {\"className\": \"highcharts-rectangle-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n         */\n        rectangleAnnotation: {\n            /** @ignore-option */\n            className: 'highcharts-rectangle-annotation',\n            /** @ignore-option */\n            start: function (e) {\n                const coords = this.chart.pointer?.getCoordinates(e), coordsX = coords && NavigationBindingsDefaults_getAssignedAxis(coords.xAxis), coordsY = coords && NavigationBindingsDefaults_getAssignedAxis(coords.yAxis);\n                // Exit if clicked out of axes area\n                if (!coordsX || !coordsY) {\n                    return;\n                }\n                const x = coordsX.value, y = coordsY.value, xAxis = coordsX.axis.index, yAxis = coordsY.axis.index, navigation = this.chart.options.navigation;\n                return this.chart.addAnnotation(NavigationBindingsDefaults_merge({\n                    langKey: 'rectangle',\n                    type: 'basicAnnotation',\n                    shapes: [{\n                            type: 'path',\n                            points: [\n                                { xAxis, yAxis, x, y },\n                                { xAxis, yAxis, x, y },\n                                { xAxis, yAxis, x, y },\n                                { xAxis, yAxis, x, y },\n                                { command: 'Z' }\n                            ]\n                        }]\n                }, navigation\n                    .annotationsOptions, navigation\n                    .bindings\n                    .rectangleAnnotation\n                    .annotationsOptions));\n            },\n            /** @ignore-option */\n            steps: [\n                function (e, annotation) {\n                    const shapes = annotation.options.shapes, points = ((shapes && shapes[0] && shapes[0].points) ||\n                        []), coords = this.chart.pointer?.getCoordinates(e), coordsX = coords && NavigationBindingsDefaults_getAssignedAxis(coords.xAxis), coordsY = coords && NavigationBindingsDefaults_getAssignedAxis(coords.yAxis);\n                    if (coordsX && coordsY) {\n                        const x = coordsX.value, y = coordsY.value;\n                        // Top right point\n                        points[1].x = x;\n                        // Bottom right point (cursor position)\n                        points[2].x = x;\n                        points[2].y = y;\n                        // Bottom left\n                        points[3].y = y;\n                        annotation.update({\n                            shapes: [{\n                                    points: points\n                                }]\n                        });\n                    }\n                }\n            ]\n        },\n        /**\n         * A label annotation bindings. Includes `start` event only.\n         *\n         * @type    {Highcharts.NavigationBindingsOptionsObject}\n         * @default {\"className\": \"highcharts-label-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n         */\n        labelAnnotation: {\n            /** @ignore-option */\n            className: 'highcharts-label-annotation',\n            /** @ignore-option */\n            start: function (e) {\n                const coords = this.chart.pointer?.getCoordinates(e), coordsX = coords && NavigationBindingsDefaults_getAssignedAxis(coords.xAxis), coordsY = coords && NavigationBindingsDefaults_getAssignedAxis(coords.yAxis), navigation = this.chart.options.navigation;\n                // Exit if clicked out of axes area\n                if (!coordsX || !coordsY) {\n                    return;\n                }\n                return this.chart.addAnnotation(NavigationBindingsDefaults_merge({\n                    langKey: 'label',\n                    type: 'basicAnnotation',\n                    labelOptions: {\n                        format: '{y:.2f}',\n                        overflow: 'none',\n                        crop: true\n                    },\n                    labels: [{\n                            point: {\n                                xAxis: coordsX.axis.index,\n                                yAxis: coordsY.axis.index,\n                                x: coordsX.value,\n                                y: coordsY.value\n                            }\n                        }]\n                }, navigation\n                    .annotationsOptions, navigation\n                    .bindings\n                    .labelAnnotation\n                    .annotationsOptions));\n            }\n        }\n    },\n    /**\n     * Path where Highcharts will look for icons. Change this to use icons\n     * from a different server.\n     *\n     * @type      {string}\n     * @default   https://code.highcharts.com/12.3.0/gfx/stock-icons/\n     * @since     7.1.3\n     * @apioption navigation.iconsURL\n     */\n    /**\n     * A `showPopup` event. Fired when selecting for example an annotation.\n     *\n     * @type      {Function}\n     * @apioption navigation.events.showPopup\n     */\n    /**\n     * A `closePopup` event. Fired when Popup should be hidden, for example\n     * when clicking on an annotation again.\n     *\n     * @type      {Function}\n     * @apioption navigation.events.closePopup\n     */\n    /**\n     * Event fired on a button click.\n     *\n     * @type      {Function}\n     * @sample    highcharts/annotations/gui/\n     *            Change icon in a dropddown on event\n     * @sample    highcharts/annotations/gui-buttons/\n     *            Change button class on event\n     * @apioption navigation.events.selectButton\n     */\n    /**\n     * Event fired when button state should change, for example after\n     * adding an annotation.\n     *\n     * @type      {Function}\n     * @sample    highcharts/annotations/gui/\n     *            Change icon in a dropddown on event\n     * @sample    highcharts/annotations/gui-buttons/\n     *            Change button class on event\n     * @apioption navigation.events.deselectButton\n     */\n    /**\n     * Events to communicate between Stock Tools and custom GUI.\n     *\n     * @since        7.0.0\n     * @product      highcharts highstock\n     * @optionparent navigation.events\n     */\n    events: {},\n    /**\n     * Additional options to be merged into all annotations.\n     *\n     * @sample stock/stocktools/navigation-annotation-options\n     *         Set red color of all line annotations\n     *\n     * @type      {Highcharts.AnnotationsOptions}\n     * @extends   annotations\n     * @exclude   crookedLine, elliottWave, fibonacci, infinityLine,\n     *            measure, pitchfork, tunnel, verticalLine, basicAnnotation\n     * @requires     modules/annotations\n     * @apioption navigation.annotationsOptions\n     */\n    annotationsOptions: {\n        animation: {\n            defer: 0\n        }\n    }\n};\n/* *\n *\n *  Default Export\n *\n * */\nconst NavigationBindingDefaults = {\n    lang,\n    navigation\n};\n/* harmony default export */ const NavigationBindingsDefaults = (NavigationBindingDefaults);\n\n;// ./code/es-modules/Extensions/Annotations/NavigationBindings.js\n/* *\n *\n *  (c) 2009-2025 Highsoft, Black Label\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nconst { setOptions } = (external_highcharts_src_js_default_default());\n\nconst { format: NavigationBindings_format } = (external_highcharts_src_js_default_Templating_default());\n\nconst { composed: NavigationBindings_composed, doc: NavigationBindings_doc, win } = (external_highcharts_src_js_default_default());\n\n\nconst { getAssignedAxis: NavigationBindings_getAssignedAxis, getFieldType: NavigationBindings_getFieldType } = NavigationBindingsUtilities;\n\nconst { addEvent: NavigationBindings_addEvent, attr, defined: NavigationBindings_defined, fireEvent: NavigationBindings_fireEvent, isArray: NavigationBindings_isArray, isFunction, isNumber: NavigationBindings_isNumber, isObject: NavigationBindings_isObject, merge: NavigationBindings_merge, objectEach: NavigationBindings_objectEach, pick: NavigationBindings_pick, pushUnique: NavigationBindings_pushUnique } = (external_highcharts_src_js_default_default());\n/* *\n *\n *  Functions\n *\n * */\n/**\n * IE 9-11 polyfill for Element.closest():\n * @private\n */\nfunction closestPolyfill(el, s) {\n    const ElementProto = win.Element.prototype, elementMatches = ElementProto.matches ||\n        ElementProto.msMatchesSelector ||\n        ElementProto.webkitMatchesSelector;\n    let ret = null;\n    if (ElementProto.closest) {\n        ret = ElementProto.closest.call(el, s);\n    }\n    else {\n        do {\n            if (elementMatches.call(el, s)) {\n                return el;\n            }\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1);\n    }\n    return ret;\n}\n/**\n * @private\n */\nfunction onAnnotationRemove() {\n    if (this.chart.navigationBindings) {\n        this.chart.navigationBindings.deselectAnnotation();\n    }\n}\n/**\n * @private\n */\nfunction onChartDestroy() {\n    if (this.navigationBindings) {\n        this.navigationBindings.destroy();\n    }\n}\n/**\n * @private\n */\nfunction onChartLoad() {\n    const options = this.options;\n    if (options && options.navigation && options.navigation.bindings) {\n        this.navigationBindings = new NavigationBindings(this, options.navigation);\n        this.navigationBindings.initEvents();\n        this.navigationBindings.initUpdate();\n    }\n}\n/**\n * @private\n */\nfunction onChartRender() {\n    const navigationBindings = this.navigationBindings, disabledClassName = 'highcharts-disabled-btn';\n    if (this && navigationBindings) {\n        // Check if the buttons should be enabled/disabled based on\n        // visible series.\n        let buttonsEnabled = false;\n        this.series.forEach((series) => {\n            if (!series.options.isInternal && series.visible) {\n                buttonsEnabled = true;\n            }\n        });\n        if (this.navigationBindings &&\n            this.navigationBindings.container &&\n            this.navigationBindings.container[0]) {\n            const container = this.navigationBindings.container[0];\n            NavigationBindings_objectEach(navigationBindings.boundClassNames, (value, key) => {\n                // Get the HTML element corresponding to the className taken\n                // from StockToolsBindings.\n                const buttonNode = container.querySelectorAll('.' + key);\n                if (buttonNode) {\n                    for (let i = 0; i < buttonNode.length; i++) {\n                        const button = buttonNode[i], cls = button.className;\n                        if (value.noDataState === 'normal') {\n                            // If button has noDataState: 'normal', and has\n                            // disabledClassName, remove this className.\n                            if (cls.indexOf(disabledClassName) !== -1) {\n                                button.classList.remove(disabledClassName);\n                            }\n                        }\n                        else if (!buttonsEnabled) {\n                            if (cls.indexOf(disabledClassName) === -1) {\n                                button.className += ' ' + disabledClassName;\n                            }\n                        }\n                        else {\n                            // Enable all buttons by deleting the className.\n                            if (cls.indexOf(disabledClassName) !== -1) {\n                                button.classList.remove(disabledClassName);\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }\n}\n/**\n * @private\n */\nfunction NavigationBindings_onNavigationBindingsClosePopup() {\n    this.deselectAnnotation();\n}\n/**\n * @private\n */\nfunction onNavigationBindingsDeselectButton() {\n    this.selectedButtonElement = null;\n}\n/**\n * Show edit-annotation form:\n * @private\n */\nfunction selectableAnnotation(annotationType) {\n    const originalClick = annotationType.prototype.defaultOptions.events &&\n        annotationType.prototype.defaultOptions.events.click;\n    /**\n     * Select and show popup\n     * @private\n     */\n    function selectAndShowPopup(eventArguments) {\n        const annotation = this, navigation = annotation.chart.navigationBindings, prevAnnotation = navigation.activeAnnotation;\n        if (originalClick) {\n            originalClick.call(annotation, eventArguments);\n        }\n        if (prevAnnotation !== annotation) {\n            // Select current:\n            navigation.deselectAnnotation();\n            navigation.activeAnnotation = annotation;\n            annotation.setControlPointsVisibility(true);\n            NavigationBindings_fireEvent(navigation, 'showPopup', {\n                annotation: annotation,\n                formType: 'annotation-toolbar',\n                options: navigation.annotationToFields(annotation),\n                onSubmit: function (data) {\n                    if (data.actionType === 'remove') {\n                        navigation.activeAnnotation = false;\n                        navigation.chart.removeAnnotation(annotation);\n                    }\n                    else {\n                        const config = {};\n                        navigation.fieldsToOptions(data.fields, config);\n                        navigation.deselectAnnotation();\n                        const typeOptions = config.typeOptions;\n                        if (annotation.options.type === 'measure') {\n                            // Manually disable crooshars according to\n                            // stroke width of the shape:\n                            typeOptions.crosshairY.enabled = (typeOptions.crosshairY\n                                .strokeWidth !== 0);\n                            typeOptions.crosshairX.enabled = (typeOptions.crosshairX\n                                .strokeWidth !== 0);\n                        }\n                        annotation.update(config);\n                    }\n                }\n            });\n        }\n        else {\n            // Deselect current:\n            NavigationBindings_fireEvent(navigation, 'closePopup');\n        }\n        // Let bubble event to chart.click:\n        eventArguments.activeAnnotation = true;\n    }\n    // #18276, show popup on touchend, but not on touchmove\n    let touchStartX, touchStartY;\n    /**\n     *\n     */\n    function saveCoords(e) {\n        touchStartX = e.touches[0].clientX;\n        touchStartY = e.touches[0].clientY;\n    }\n    /**\n     *\n     */\n    function checkForTouchmove(e) {\n        const hasMoved = touchStartX ? Math.sqrt(Math.pow(touchStartX - e.changedTouches[0].clientX, 2) +\n            Math.pow(touchStartY - e.changedTouches[0].clientY, 2)) >= 4 : false;\n        if (!hasMoved) {\n            selectAndShowPopup.call(this, e);\n        }\n    }\n    NavigationBindings_merge(true, annotationType.prototype.defaultOptions.events, {\n        click: selectAndShowPopup,\n        touchstart: saveCoords,\n        touchend: checkForTouchmove\n    });\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * @private\n */\nclass NavigationBindings {\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    static compose(AnnotationClass, ChartClass) {\n        if (NavigationBindings_pushUnique(NavigationBindings_composed, 'NavigationBindings')) {\n            NavigationBindings_addEvent(AnnotationClass, 'remove', onAnnotationRemove);\n            // Basic shapes:\n            selectableAnnotation(AnnotationClass);\n            // Advanced annotations:\n            NavigationBindings_objectEach(AnnotationClass.types, (annotationType) => {\n                selectableAnnotation(annotationType);\n            });\n            NavigationBindings_addEvent(ChartClass, 'destroy', onChartDestroy);\n            NavigationBindings_addEvent(ChartClass, 'load', onChartLoad);\n            NavigationBindings_addEvent(ChartClass, 'render', onChartRender);\n            NavigationBindings_addEvent(NavigationBindings, 'closePopup', NavigationBindings_onNavigationBindingsClosePopup);\n            NavigationBindings_addEvent(NavigationBindings, 'deselectButton', onNavigationBindingsDeselectButton);\n            setOptions(NavigationBindingsDefaults);\n        }\n    }\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    constructor(chart, options) {\n        this.boundClassNames = void 0;\n        this.chart = chart;\n        this.options = options;\n        this.eventsToUnbind = [];\n        this.container =\n            this.chart.container.getElementsByClassName(this.options.bindingsClassName || '');\n        if (!this.container.length) {\n            this.container = NavigationBindings_doc.getElementsByClassName(this.options.bindingsClassName || '');\n        }\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    getCoords(e) {\n        const coords = this.chart.pointer?.getCoordinates(e);\n        return [\n            coords && NavigationBindings_getAssignedAxis(coords.xAxis),\n            coords && NavigationBindings_getAssignedAxis(coords.yAxis)\n        ];\n    }\n    /**\n     * Init all events connected to NavigationBindings.\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#initEvents\n     */\n    initEvents() {\n        const navigation = this, chart = navigation.chart, bindingsContainer = navigation.container, options = navigation.options;\n        // Shorthand object for getting events for buttons:\n        navigation.boundClassNames = {};\n        NavigationBindings_objectEach((options.bindings || {}), (value) => {\n            navigation.boundClassNames[value.className] = value;\n        });\n        // Handle multiple containers with the same class names:\n        [].forEach.call(bindingsContainer, (subContainer) => {\n            navigation.eventsToUnbind.push(NavigationBindings_addEvent(subContainer, 'click', (event) => {\n                const bindings = navigation.getButtonEvents(subContainer, event);\n                if (bindings &&\n                    (!bindings.button.classList\n                        .contains('highcharts-disabled-btn'))) {\n                    navigation.bindingsButtonClick(bindings.button, bindings.events, event);\n                }\n            }));\n        });\n        NavigationBindings_objectEach((options.events || {}), (callback, eventName) => {\n            if (isFunction(callback)) {\n                navigation.eventsToUnbind.push(NavigationBindings_addEvent(navigation, eventName, callback, { passive: false }));\n            }\n        });\n        navigation.eventsToUnbind.push(NavigationBindings_addEvent(chart.container, 'click', function (e) {\n            if (!chart.cancelClick &&\n                chart.isInsidePlot(e.chartX - chart.plotLeft, e.chartY - chart.plotTop, {\n                    visiblePlotOnly: true\n                })) {\n                navigation.bindingsChartClick(this, e);\n            }\n        }));\n        navigation.eventsToUnbind.push(NavigationBindings_addEvent(chart.container, (external_highcharts_src_js_default_default()).isTouchDevice ? 'touchmove' : 'mousemove', function (e) {\n            navigation.bindingsContainerMouseMove(this, e);\n        }, (external_highcharts_src_js_default_default()).isTouchDevice ? { passive: false } : void 0));\n    }\n    /**\n     * Common chart.update() delegation, shared between bindings and exporting.\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#initUpdate\n     */\n    initUpdate() {\n        const navigation = this;\n        Chart_ChartNavigationComposition\n            .compose(this.chart).navigation\n            .addUpdate((options) => {\n            navigation.update(options);\n        });\n    }\n    /**\n     * Hook for click on a button, method selects/unselects buttons,\n     * then calls `bindings.init` callback.\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#bindingsButtonClick\n     *\n     * @param {Highcharts.HTMLDOMElement} [button]\n     *        Clicked button\n     *\n     * @param {Object} events\n     *        Events passed down from bindings (`init`, `start`, `step`, `end`)\n     *\n     * @param {Highcharts.PointerEventObject} clickEvent\n     *        Browser's click event\n     */\n    bindingsButtonClick(button, events, clickEvent) {\n        const navigation = this, chart = navigation.chart, svgContainer = chart.renderer.boxWrapper;\n        let shouldEventBeFired = true;\n        if (navigation.selectedButtonElement) {\n            if (navigation.selectedButtonElement.classList === button.classList) {\n                shouldEventBeFired = false;\n            }\n            NavigationBindings_fireEvent(navigation, 'deselectButton', { button: navigation.selectedButtonElement });\n            if (navigation.nextEvent) {\n                // Remove in-progress annotations adders:\n                if (navigation.currentUserDetails &&\n                    navigation.currentUserDetails.coll === 'annotations') {\n                    chart.removeAnnotation(navigation.currentUserDetails);\n                }\n                navigation.mouseMoveEvent = navigation.nextEvent = false;\n            }\n        }\n        if (shouldEventBeFired) {\n            navigation.selectedButton = events;\n            navigation.selectedButtonElement = button;\n            NavigationBindings_fireEvent(navigation, 'selectButton', { button: button });\n            // Call \"init\" event, for example to open modal window\n            if (events.init) {\n                events.init.call(navigation, button, clickEvent);\n            }\n            if (events.start || events.steps) {\n                chart.renderer.boxWrapper.addClass('highcharts-draw-mode');\n            }\n        }\n        else {\n            chart.stockTools && button.classList.remove('highcharts-active');\n            svgContainer.removeClass('highcharts-draw-mode');\n            navigation.nextEvent = false;\n            navigation.mouseMoveEvent = false;\n            navigation.selectedButton = null;\n        }\n    }\n    /**\n     * Hook for click on a chart, first click on a chart calls `start` event,\n     * then on all subsequent clicks iterate over `steps` array.\n     * When finished, calls `end` event.\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#bindingsChartClick\n     *\n     * @param {Highcharts.Chart} chart\n     *        Chart that click was performed on.\n     *\n     * @param {Highcharts.PointerEventObject} clickEvent\n     *        Browser's click event.\n     */\n    bindingsChartClick(chart, clickEvent) {\n        chart = this.chart;\n        const navigation = this, activeAnnotation = navigation.activeAnnotation, selectedButton = navigation.selectedButton, svgContainer = chart.renderer.boxWrapper;\n        if (activeAnnotation) {\n            // Click outside popups, should close them and deselect the\n            // annotation\n            if (!activeAnnotation.cancelClick && // #15729\n                !clickEvent.activeAnnotation &&\n                // Element could be removed in the child action, e.g. button\n                clickEvent.target.parentNode &&\n                // TO DO: Polyfill for IE11?\n                !closestPolyfill(clickEvent.target, '.highcharts-popup')) {\n                NavigationBindings_fireEvent(navigation, 'closePopup');\n            }\n            else if (activeAnnotation.cancelClick) {\n                // Reset cancelClick after the other event handlers have run\n                setTimeout(() => {\n                    activeAnnotation.cancelClick = false;\n                }, 0);\n            }\n        }\n        if (!selectedButton || !selectedButton.start) {\n            return;\n        }\n        if (!navigation.nextEvent) {\n            // Call init method:\n            navigation.currentUserDetails = selectedButton.start.call(navigation, clickEvent);\n            // If steps exists (e.g. Annotations), bind them:\n            if (navigation.currentUserDetails && selectedButton.steps) {\n                navigation.stepIndex = 0;\n                navigation.steps = true;\n                navigation.mouseMoveEvent = navigation.nextEvent =\n                    selectedButton.steps[navigation.stepIndex];\n            }\n            else {\n                NavigationBindings_fireEvent(navigation, 'deselectButton', { button: navigation.selectedButtonElement });\n                svgContainer.removeClass('highcharts-draw-mode');\n                navigation.steps = false;\n                navigation.selectedButton = null;\n                // First click is also the last one:\n                if (selectedButton.end) {\n                    selectedButton.end.call(navigation, clickEvent, navigation.currentUserDetails);\n                }\n            }\n        }\n        else {\n            navigation.nextEvent(clickEvent, navigation.currentUserDetails);\n            if (navigation.steps) {\n                navigation.stepIndex++;\n                if (selectedButton.steps[navigation.stepIndex]) {\n                    // If we have more steps, bind them one by one:\n                    navigation.mouseMoveEvent = navigation.nextEvent = selectedButton.steps[navigation.stepIndex];\n                }\n                else {\n                    NavigationBindings_fireEvent(navigation, 'deselectButton', { button: navigation.selectedButtonElement });\n                    svgContainer.removeClass('highcharts-draw-mode');\n                    // That was the last step, call end():\n                    if (selectedButton.end) {\n                        selectedButton.end.call(navigation, clickEvent, navigation.currentUserDetails);\n                    }\n                    navigation.nextEvent = false;\n                    navigation.mouseMoveEvent = false;\n                    navigation.selectedButton = null;\n                }\n            }\n        }\n    }\n    /**\n     * Hook for mouse move on a chart's container. It calls current step.\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#bindingsContainerMouseMove\n     *\n     * @param {Highcharts.HTMLDOMElement} container\n     *        Chart's container.\n     *\n     * @param {global.Event} moveEvent\n     *        Browser's move event.\n     */\n    bindingsContainerMouseMove(_container, moveEvent) {\n        if (this.mouseMoveEvent) {\n            this.mouseMoveEvent(moveEvent, this.currentUserDetails);\n        }\n    }\n    /**\n     * Translate fields (e.g. `params.period` or `marker.styles.color`) to\n     * Highcharts options object (e.g. `{ params: { period } }`).\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#fieldsToOptions<T>\n     *\n     * @param {Highcharts.Dictionary<string>} fields\n     *        Fields from popup form.\n     *\n     * @param {T} config\n     *        Default config to be modified.\n     *\n     * @return {T}\n     *         Modified config\n     */\n    fieldsToOptions(fields, config) {\n        NavigationBindings_objectEach(fields, (value, field) => {\n            const parsedValue = parseFloat(value), path = field.split('.'), pathLength = path.length - 1;\n            // If it's a number (not \"format\" options), parse it:\n            if (NavigationBindings_isNumber(parsedValue) &&\n                !value.match(/px|em/g) &&\n                !field.match(/format/g)) {\n                value = parsedValue;\n            }\n            // Remove values like 0\n            if (value !== 'undefined') {\n                let parent = config;\n                path.forEach((name, index) => {\n                    if (name !== '__proto__' && name !== 'constructor') {\n                        const nextName = NavigationBindings_pick(path[index + 1], '');\n                        if (pathLength === index) {\n                            // Last index, put value:\n                            parent[name] = value;\n                        }\n                        else if (!parent[name]) {\n                            // Create middle property:\n                            parent[name] = nextName.match(/\\d/g) ?\n                                [] :\n                                {};\n                            parent = parent[name];\n                        }\n                        else {\n                            // Jump into next property\n                            parent = parent[name];\n                        }\n                    }\n                });\n            }\n        });\n        return config;\n    }\n    /**\n     * Shorthand method to deselect an annotation.\n     *\n     * @function Highcharts.NavigationBindings#deselectAnnotation\n     */\n    deselectAnnotation() {\n        if (this.activeAnnotation) {\n            this.activeAnnotation.setControlPointsVisibility(false);\n            this.activeAnnotation = false;\n        }\n    }\n    /**\n     * Generates API config for popup in the same format as options for\n     * Annotation object.\n     *\n     * @function Highcharts.NavigationBindings#annotationToFields\n     *\n     * @param {Highcharts.Annotation} annotation\n     *        Annotations object\n     *\n     * @return {Highcharts.Dictionary<string>}\n     *         Annotation options to be displayed in popup box\n     */\n    annotationToFields(annotation) {\n        const options = annotation.options, editables = NavigationBindings.annotationsEditable, nestedEditables = editables.nestedOptions, type = NavigationBindings_pick(options.type, options.shapes && options.shapes[0] &&\n            options.shapes[0].type, options.labels && options.labels[0] &&\n            options.labels[0].type, 'label'), nonEditables = NavigationBindings.annotationsNonEditable[options.langKey] || [], visualOptions = {\n            langKey: options.langKey,\n            type: type\n        };\n        /**\n         * Nested options traversing. Method goes down to the options and copies\n         * allowed options (with values) to new object, which is last parameter:\n         * \"parent\".\n         *\n         * @private\n         *\n         * @param {*} option\n         *        Atomic type or object/array\n         *\n         * @param {string} key\n         *        Option name, for example \"visible\" or \"x\", \"y\"\n         *\n         * @param {Object} parentEditables\n         *        Editables from NavigationBindings.annotationsEditable\n         *\n         * @param {Object} parent\n         *        Where new options will be assigned\n         */\n        function traverse(option, key, parentEditables, parent, parentKey) {\n            let nextParent;\n            if (parentEditables &&\n                NavigationBindings_defined(option) &&\n                nonEditables.indexOf(key) === -1 &&\n                ((parentEditables.indexOf &&\n                    parentEditables.indexOf(key)) >= 0 ||\n                    parentEditables[key] || // Nested array\n                    parentEditables === true // Simple array\n                )) {\n                // Roots:\n                if (NavigationBindings_isArray(option)) {\n                    parent[key] = [];\n                    option.forEach((arrayOption, i) => {\n                        if (!NavigationBindings_isObject(arrayOption)) {\n                            // Simple arrays, e.g. [String, Number, Boolean]\n                            traverse(arrayOption, 0, nestedEditables[key], parent[key], key);\n                        }\n                        else {\n                            // Advanced arrays, e.g. [Object, Object]\n                            parent[key][i] = {};\n                            NavigationBindings_objectEach(arrayOption, (nestedOption, nestedKey) => {\n                                traverse(nestedOption, nestedKey, nestedEditables[key], parent[key][i], key);\n                            });\n                        }\n                    });\n                }\n                else if (NavigationBindings_isObject(option)) {\n                    nextParent = {};\n                    if (NavigationBindings_isArray(parent)) {\n                        parent.push(nextParent);\n                        nextParent[key] = {};\n                        nextParent = nextParent[key];\n                    }\n                    else {\n                        parent[key] = nextParent;\n                    }\n                    NavigationBindings_objectEach(option, (nestedOption, nestedKey) => {\n                        traverse(nestedOption, nestedKey, key === 0 ?\n                            parentEditables :\n                            nestedEditables[key], nextParent, key);\n                    });\n                }\n                else {\n                    // Leaf:\n                    if (key === 'format') {\n                        parent[key] = [\n                            NavigationBindings_format(option, annotation.labels[0].points[0]).toString(),\n                            'text'\n                        ];\n                    }\n                    else if (NavigationBindings_isArray(parent)) {\n                        parent.push([option, NavigationBindings_getFieldType(parentKey, option)]);\n                    }\n                    else {\n                        parent[key] = [option, NavigationBindings_getFieldType(key, option)];\n                    }\n                }\n            }\n        }\n        NavigationBindings_objectEach(options, (option, key) => {\n            if (key === 'typeOptions') {\n                visualOptions[key] = {};\n                NavigationBindings_objectEach(options[key], (typeOption, typeKey) => {\n                    traverse(typeOption, typeKey, nestedEditables, visualOptions[key], typeKey);\n                });\n            }\n            else {\n                traverse(option, key, editables[type], visualOptions, key);\n            }\n        });\n        return visualOptions;\n    }\n    /**\n     * Get all class names for all parents in the element. Iterates until finds\n     * main container.\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#getClickedClassNames\n     *\n     * @param {Highcharts.HTMLDOMElement} container\n     * Container that event is bound to.\n     *\n     * @param {global.Event} event\n     * Browser's event.\n     *\n     * @return {Array<Array<string, Highcharts.HTMLDOMElement>>}\n     * Array of class names with corresponding elements\n     */\n    getClickedClassNames(container, event) {\n        let element = event.target, classNames = [], elemClassName;\n        while (element && element.tagName) {\n            elemClassName = attr(element, 'class');\n            if (elemClassName) {\n                classNames = classNames.concat(elemClassName\n                    .split(' ')\n                    // eslint-disable-next-line no-loop-func\n                    .map((name) => ([name, element])));\n            }\n            element = element.parentNode;\n            if (element === container) {\n                return classNames;\n            }\n        }\n        return classNames;\n    }\n    /**\n     * Get events bound to a button. It's a custom event delegation to find all\n     * events connected to the element.\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#getButtonEvents\n     *\n     * @param {Highcharts.HTMLDOMElement} container\n     *        Container that event is bound to.\n     *\n     * @param {global.Event} event\n     *        Browser's event.\n     *\n     * @return {Object}\n     *         Object with events (init, start, steps, and end)\n     */\n    getButtonEvents(container, event) {\n        const navigation = this, classNames = this.getClickedClassNames(container, event);\n        let bindings;\n        classNames.forEach((className) => {\n            if (navigation.boundClassNames[className[0]] && !bindings) {\n                bindings = {\n                    events: navigation.boundClassNames[className[0]],\n                    button: className[1]\n                };\n            }\n        });\n        return bindings;\n    }\n    /**\n     * Bindings are just events, so the whole update process is simply\n     * removing old events and adding new ones.\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#update\n     */\n    update(options) {\n        this.options = NavigationBindings_merge(true, this.options, options);\n        this.removeEvents();\n        this.initEvents();\n    }\n    /**\n     * Remove all events created in the navigation.\n     *\n     * @private\n     * @function Highcharts.NavigationBindings#removeEvents\n     */\n    removeEvents() {\n        this.eventsToUnbind.forEach((unbinder) => unbinder());\n    }\n    /**\n     * @private\n     * @function Highcharts.NavigationBindings#destroy\n     */\n    destroy() {\n        this.removeEvents();\n    }\n}\n/* *\n *\n *  Static Properties\n *\n * */\n// Define which options from annotations should show up in edit box:\nNavigationBindings.annotationsEditable = {\n    // `typeOptions` are always available\n    // Nested and shared options:\n    nestedOptions: {\n        labelOptions: ['style', 'format', 'backgroundColor'],\n        labels: ['style'],\n        label: ['style'],\n        style: ['fontSize', 'color'],\n        background: ['fill', 'strokeWidth', 'stroke'],\n        innerBackground: ['fill', 'strokeWidth', 'stroke'],\n        outerBackground: ['fill', 'strokeWidth', 'stroke'],\n        shapeOptions: ['fill', 'strokeWidth', 'stroke'],\n        shapes: ['fill', 'strokeWidth', 'stroke'],\n        line: ['strokeWidth', 'stroke'],\n        backgroundColors: [true],\n        connector: ['fill', 'strokeWidth', 'stroke'],\n        crosshairX: ['strokeWidth', 'stroke'],\n        crosshairY: ['strokeWidth', 'stroke']\n    },\n    // Simple shapes:\n    circle: ['shapes'],\n    ellipse: ['shapes'],\n    verticalLine: [],\n    label: ['labelOptions'],\n    // Measure\n    measure: ['background', 'crosshairY', 'crosshairX'],\n    // Others:\n    fibonacci: [],\n    tunnel: ['background', 'line', 'height'],\n    pitchfork: ['innerBackground', 'outerBackground'],\n    rect: ['shapes'],\n    // Crooked lines, elliots, arrows etc:\n    crookedLine: [],\n    basicAnnotation: ['shapes', 'labelOptions']\n};\n// Define non editable fields per annotation, for example Rectangle inherits\n// options from Measure, but crosshairs are not available\nNavigationBindings.annotationsNonEditable = {\n    rectangle: ['crosshairX', 'crosshairY', 'labelOptions'],\n    ellipse: ['labelOptions'],\n    circle: ['labelOptions']\n};\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ const Annotations_NavigationBindings = (NavigationBindings);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * A config object for navigation bindings in annotations.\n *\n * @interface Highcharts.NavigationBindingsOptionsObject\n */ /**\n* ClassName of the element for a binding.\n* @name Highcharts.NavigationBindingsOptionsObject#className\n* @type {string|undefined}\n*/ /**\n* Last event to be fired after last step event.\n* @name Highcharts.NavigationBindingsOptionsObject#end\n* @type {Function|undefined}\n*/ /**\n* Initial event, fired on a button click.\n* @name Highcharts.NavigationBindingsOptionsObject#init\n* @type {Function|undefined}\n*/ /**\n* Event fired on first click on a chart.\n* @name Highcharts.NavigationBindingsOptionsObject#start\n* @type {Function|undefined}\n*/ /**\n* Last event to be fired after last step event. Array of step events to be\n* called sequentially after each user click.\n* @name Highcharts.NavigationBindingsOptionsObject#steps\n* @type {Array<Function>|undefined}\n*/\n(''); // Keeps doclets above in JS file\n\n;// ./code/es-modules/masters/modules/annotations.js\n\n\n\n\n\nconst G = (external_highcharts_src_js_default_default());\nG.Annotation = G.Annotation || Annotations_Annotation;\nG.NavigationBindings = G.NavigationBindings || Annotations_NavigationBindings;\nG.Annotation.compose(G.Chart, G.NavigationBindings, G.Pointer, G.SVGRenderer);\n/* harmony default export */ const annotations_src = ((external_highcharts_src_js_default_default()));\n\nexport { annotations_src as default };\n"],"names":["__WEBPACK_EXTERNAL_MODULE__highcharts_src_js_8202131d__","DropdownProperties","AnnotationChart","ControlTarget","ChartNavigationComposition","__webpack_require__","n","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","external_highcharts_src_js_default_namespaceObject","external_highcharts_src_js_default_default","addEvent","erase","find","fireEvent","isArray","isObject","pick","wrap","chartAddAnnotation","userOptions","redraw","annotation","initAnnotation","options","annotations","push","graphic","attr","opacity","chartCallback","chart","plotBoxClip","renderer","clipRect","plotBox","controlPointsGroup","g","zIndex","clip","add","forEach","annotationOptions","i","some","drawAnnotations","destroy","event","csvColumnHeaderFormatter","exporting","csv","columnHeaderFormatter","multiLevelHeaders","dataRows","xValues","annotationHeader","lang","exportData","startRowLength","length","annotationSeparator","itemDelimiter","joinAnnotations","join","labelOptions","includeInDataExport","labels","label","text","annotationText","points","annotationX","x","xAxisIndex","series","xAxis","index","wasAdded","newRow","Array","row","maxRowLen","Math","max","newRows","header","s","columnTitle","topLevelColumnTitle","chartDrawAnnotations","animate","animationConfig","chartRemoveAnnotation","idOrAnnotation","coll","id","onChartAfterInit","annotationsOption","annotationsUserOption","wrapPointerOnContainerMouseDown","proceed","hasDraggedAnnotation","apply","slice","arguments","compose","AnnotationClass","ChartClass","PointerClass","chartProto","addAnnotation","pointerProto","callbacks","collectionsWithInit","collectionsWithUpdate","removeAnnotation","types","type","Annotations_AnnotationChart","defined","Annotations_AnnotationDefaults","visible","animation","crop","draggable","align","allowOverlap","backgroundColor","borderColor","borderRadius","borderWidth","className","formatter","y","overflow","padding","shadow","shape","style","fontSize","fontWeight","color","useHTML","verticalAlign","shapeOptions","stroke","strokeWidth","fill","r","snap","controlPointOptions","events","cursor","height","symbol","width","doc","isTouchDevice","EventEmitter_addEvent","EventEmitter_fireEvent","objectEach","EventEmitter_pick","removeEvent","Annotations_EventEmitter","addEvents","emitter","addMouseDownEvent","element","e","onMouseDown","passive","foreignObject","eventHandler","cancelClick","pointer","normalize","target","nonDOMEvents","indexOf","div","onDrag","styledMode","cssPointer","xy","css","isUpdating","removeDocEvents","hcEvents","mouseMoveToRadians","cx","cy","prevDy","prevChartY","prevDx","prevChartX","dy","chartY","dx","chartX","temp","inverted","atan2","mouseMoveToScale","sx","sy","mouseMoveToTranslation","isInsidePlot","plotLeft","plotTop","visiblePlotOnly","translation","translate","shapes","preventDefault","button","firesTouchEvents","sourceCapabilities","removeDrag","hasDragged","removeMouseUp","onMouseUp","merge","ControlPoint_pick","Annotations_ControlPoint","constructor","positioner","render","setVisibility","update","external_highcharts_src_js_default_SeriesRegistry_namespaceObject","SeriesRegistry","external_highcharts_src_js_default_SeriesRegistry_default","seriesProto","MockPoint_defined","MockPoint_fireEvent","MockPoint","fromPoint","point","yAxis","pointToPixels","paneCoordinates","plotX","plotY","mock","plotWidth","plotHeight","getPlotBox","translateX","translateY","pointToOptions","applyOptions","getOptions","command","setAxis","refresh","hasDynamicOptions","len","toPixels","isInside","refreshOptions","toValue","rotate","radians","cos","sin","tx","ty","scale","xOrY","axisName","axisOptions","toAnchor","anchor","_cx","_cy","addControlPoints","controlPoints","controlPointsOptions","box","tooltip","getAnchor","relativePosition","absolutePosition","destroyControlTarget","controlPoint","getPointsOptions","splat","linkPoints","pointsOptions","pointOptions","isString","pointConfig","redrawControlPoints","renderControlPoints","transform","transformation","p1","p2","_point","transformPoint","Annotations_MockPoint","translatePoint","ControlTargetClass","controlProto","Annotations_ControlTarget","Controllable_merge","Controllable","itemType","collection","init","_args","attrsFromOptions","mappedKey","map","attrsMap","attrs","tracker","_parentGroup","addClass","setControlPointsVisibility","shouldBeDrawn","translateShape","translateSecondPoint","annotationIndex","chartOptions","newOptions","parentGroup","Constructor","Controllables_Controllable","defaultMarkers","ControllablePath_defaultMarkers","arrow","tagName","attributes","refY","refX","markerWidth","markerHeight","children","ControllablePath_addEvent","ControllablePath_defined","extend","ControllablePath_merge","uniqueKey","markerEndSetter","createMarkerSetter","markerStartSetter","TRACKER_FILL","svg","markerType","value","onChartAfterGetContainer","defs","svgRendererAddMarker","markerOptions","child","ast","orient","marker","ControllablePath","SVGRendererClass","svgRendererProto","addMarker","toD","dOption","showPath","position","pointIndex","crispLine","parent","path","setMarkers","action","placed","item","itemOptions","def","predefinedMarker","markerId","getAttribute","dashStyle","ControllableRect_merge","ControllableRect","rect","Boolean","Controllables_ControllablePath","ControllableCircle_merge","ControllableCircle","circle","setRadius","ControllableEllipse_merge","ControllableEllipse_defined","ControllableEllipse","createElement","getDistanceFromLine","point1","point2","x0","y0","abs","sqrt","getAttrs","position2","x1","y1","x2","y2","rx","angle","atan","PI","ry","getRY","getYAxis","yAxisIndex","getAbsolutePosition","rotation","rotationOriginX","rotationOriginY","setYRadius","external_highcharts_src_js_default_Templating_namespaceObject","Templating","external_highcharts_src_js_default_Templating_default","format","ControllableLabel_extend","getAlignFactor","isNumber","ControllableLabel_pick","symbolConnector","w","h","anchorX","anchorY","yOffset","lateral","ControllableLabel","alignedPosition","alignOptions","round","symbols","connector","justifiedOptions","alignAttr","off","bBox","getBBox","chartAnnotations","optionsChart","chartBackground","plotBackgroundColor","background","shapesWithoutBackground","getContrast","labelrank","String","anchorAbsolutePosition","anchorRelativePosition","itemPosition","alignTo","itemPosRelativeX","itemPosRelativeY","showItem","distance","getPosition","getPlayingField","negative","ttBelow","ControllableImage","image","src","Controllables_ControllableLabel","external_highcharts_src_js_default_AST_namespaceObject","AST","external_highcharts_src_js_default_AST_default","BaseForm_addEvent","Shared_BaseForm","parentDiv","iconsURL","container","createPopupContainer","closeButton","addCloseButton","popup","backgroundImage","match","eventName","closeButtonEvents","bind","document","code","closePopup","showPopup","toolbarClass","popupDiv","popupCloseButton","innerHTML","emptyHTML","classList","remove","removeAttribute","appendChild","display","PopupAnnotations_doc","isFirefox","PopupAnnotations_createElement","PopupAnnotations_isArray","PopupAnnotations_isObject","PopupAnnotations_objectEach","PopupAnnotations_pick","stableSort","addFormFields","parentNode","storage","isRoot","parentFullName","titleName","addInput","option","reverse","genInput","createTextNode","splice","PopupIndicators_doc","seriesTypes","PopupIndicators_addEvent","PopupIndicators_createElement","PopupIndicators_defined","PopupIndicators_isArray","PopupIndicators_isObject","PopupIndicators_objectEach","PopupIndicators_stableSort","dropdownParameters","addColsContainer","lhsCol","rhsCol","PopupIndicators_addFormFields","seriesType","rhsColWrapper","fields","params","getNameType","indicatorFullName","name","listAllSeries","linkedParent","volumeSeriesID","addParamInputs","addIndicatorList","listType","filter","selectIndicator","indicatorType","isEdit","setAttribute","querySelectorAll","plotOptions","filteredSeriesArray","filterSeriesArray","filterSeries","b","seriesAName","toLowerCase","seriesBName","indicatorList","seriesSet","btn","textContent","setElementHTML","noFilterMatch","fieldName","selectBox","addSelection","addSelectionOptions","addSearchBox","clearFilterText","clearFilter","inputWrapper","handleInputChange","inputText","input","htmlFor","labelClassName","optionName","optionParamList","split","labelText","selectName","parameterName","selectedOption","currentSeries","seriesOptions","seriesName","parameterOption","filteredSeries","indicatorAliases","navigation","regex","RegExp","replace","alias","is","nameBase","toUpperCase","PopupTabs_doc","PopupTabs_addEvent","PopupTabs_createElement","addContentItem","addMenuItem","tabName","disableTab","menuItem","deselectAll","tabs","tabsContent","selectTab","tab","allTabs","switchTabs","Popup_doc","Popup_addEvent","Popup_createElement","Popup_extend","Popup_fireEvent","Popup_pick","Popup","activeAnnotation","navigationBindings","unbind","setTimeout","inputAttributes","inputName","selectedButtonElement","addButton","fieldsDiv","callback","getFields","inputList","selectList","linkedTo","volumeTo","fieldsOutput","actionType","param","seriesId","select","parameter","showForm","indicators","addForm","addToolbar","offsetHeight","isInit","langKey","bottomRow","saveButton","top","editButton","removeButton","_options","buttonParentDiv","tabsContainers","getAmount","counter","serie","indicatorsCount","firstTab","composed","PopupComposition_addEvent","pushUnique","PopupComposition_wrap","onNavigationBindingsClosePopup","onNavigationBindingsShowPopup","config","stockTools","gui","formType","onSubmit","wrapPointerOnContainerMouserDown","inClass","NagivationBindingsClass","getDeferredAnimation","defaultOptions","destroyObjectProperties","Annotation_erase","Annotation_fireEvent","Annotation_merge","Annotation_pick","getLabelsAndShapesOptions","baseOptions","mergedOptions","someBaseOptions","newOptionsValue","basicOptions","Annotation","NavigationBindingsClass","Popup_PopupComposition","setOptions","labelsAndShapes","addClipPaths","setClipAxes","clipXAxis","clipYAxis","getClipBox","addLabels","labelsOptions","initLabel","addShapes","initShape","destroyItem","labelCollectors","labelCollector","left","initProperties","_annotationOrChart","_userOptions","animOptions","setLabelCollector","shapesMap","redrawItems","redrawItem","renderItem","adjustVisibility","hasVisiblePoints","visibility","show","hide","items","shapesGroup","labelsGroup","renderItems","xAxes","yAxes","linkedAxes","concat","reduce","axes","labelOrShape","setItemControlPointsVisibility","userOptionsIndex","ControlPoint","Additions","updates","addUpdate","updateFn","Chart_ChartNavigationComposition","NavigationBindingsUtilities_defined","NavigationBindingsUtilities_isNumber","NavigationBindingsUtilities_pick","annotationsFieldsTypes","title","NavigationBindingsUtilities","getAssignedAxis","coords","coord","extremes","axis","getExtremes","axisMin","min","axisMax","minPointOffset","isInternal","getFieldType","predefinedType","fieldType","NavigationBindingsDefaults_getAssignedAxis","NavigationBindingsDefaults_isNumber","NavigationBindingsDefaults_merge","NavigationBindingsDefaults","simpleShapes","lines","ellipse","rectangle","typeOptions","backgroundColors","bindingsClassName","bindings","circleAnnotation","start","getCoordinates","coordsX","coordsY","annotationsOptions","steps","mockPointOpts","pow","ellipseAnnotation","newR","newRY","rectangleAnnotation","labelAnnotation","defer","NavigationBindings_format","NavigationBindings_composed","NavigationBindings_doc","win","NavigationBindings_getAssignedAxis","NavigationBindings_getFieldType","NavigationBindings_addEvent","NavigationBindings_defined","NavigationBindings_fireEvent","NavigationBindings_isArray","isFunction","NavigationBindings_isNumber","NavigationBindings_isObject","NavigationBindings_merge","NavigationBindings_objectEach","NavigationBindings_pick","NavigationBindings_pushUnique","onAnnotationRemove","deselectAnnotation","onChartDestroy","onChartLoad","NavigationBindings","initEvents","initUpdate","onChartRender","disabledClassName","buttonsEnabled","boundClassNames","buttonNode","cls","noDataState","NavigationBindings_onNavigationBindingsClosePopup","onNavigationBindingsDeselectButton","selectableAnnotation","annotationType","touchStartX","touchStartY","originalClick","click","selectAndShowPopup","eventArguments","prevAnnotation","annotationToFields","data","fieldsToOptions","crosshairY","enabled","crosshairX","touchstart","touches","clientX","clientY","touchend","changedTouches","eventsToUnbind","getElementsByClassName","getCoords","bindingsContainer","subContainer","getButtonEvents","contains","bindingsButtonClick","bindingsChartClick","bindingsContainerMouseMove","clickEvent","svgContainer","boxWrapper","shouldEventBeFired","nextEvent","currentUserDetails","mouseMoveEvent","selectedButton","removeClass","closestPolyfill","el","ElementProto","Element","elementMatches","matches","msMatchesSelector","webkitMatchesSelector","ret","closest","parentElement","nodeType","stepIndex","end","_container","moveEvent","field","parsedValue","parseFloat","pathLength","nextName","editables","annotationsEditable","nestedEditables","nestedOptions","nonEditables","annotationsNonEditable","visualOptions","traverse","parentEditables","parentKey","nextParent","arrayOption","nestedOption","nestedKey","toString","typeOption","typeKey","getClickedClassNames","classNames","elemClassName","removeEvents","unbinder","innerBackground","outerBackground","line","verticalLine","measure","fibonacci","tunnel","pitchfork","crookedLine","basicAnnotation","G","Chart","Pointer","SVGRenderer","annotations_src","default"],"mappings":"AAAA;;;;;;;;;;CAUC,EACD,UAAYA,MAA6D,sBAAuB,CAEvF,IA86HEC,EAnpHPC,EA4jDAC,EAslEAF,EA+pDAG,EA5kLSC,EAAsB,CAAC,CAM1BA,CAAAA,EAAoBC,CAAC,CAAG,AAACC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,UAAU,CACvC,IAAOF,EAAO,OAAU,CACxB,IAAOA,EAER,OADAF,EAAoBK,CAAC,CAACF,EAAQ,CAAEG,EAAGH,CAAO,GACnCA,CACR,EAMAH,EAAoBK,CAAC,CAAG,CAACE,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXR,EAAoBU,CAAC,CAACF,EAAYC,IAAQ,CAACT,EAAoBU,CAAC,CAACH,EAASE,IAC5EE,OAAOC,cAAc,CAACL,EAASE,EAAK,CAAEI,WAAY,CAAA,EAAMC,IAAKN,CAAU,CAACC,EAAI,AAAC,EAGhF,EAKAT,EAAoBU,CAAC,CAAG,CAACK,EAAKC,IAAUL,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,EAAKC,GAM5F,IAAMI,EAAqDzB,EAAwD,OAAU,CAC7H,IAAI0B,EAA0DrB,EAAoBC,CAAC,CAACmB,GAapF,GAAM,CAAEE,SAAAA,CAAQ,CAAEC,MAAAA,CAAK,CAAEC,KAAAA,CAAI,CAAEC,UAAAA,CAAS,CAAEC,QAAAA,CAAO,CAAEC,SAAAA,CAAQ,CAAEC,KAAAA,CAAI,CAAEC,KAAAA,CAAI,CAAE,CAAIR,IAsB7E,SAASS,EAAmBC,CAAW,CAAEC,CAAM,EAC3C,IAAMC,EAAa,IAAI,CAACC,cAAc,CAACH,GAQvC,OAPA,IAAI,CAACI,OAAO,CAACC,WAAW,CAACC,IAAI,CAACJ,EAAWE,OAAO,EAC5CP,EAAKI,EAAQ,CAAA,KACbC,EAAWD,MAAM,GACjBC,EAAWK,OAAO,CAACC,IAAI,CAAC,CACpBC,QAAS,CACb,IAEGP,CACX,CAIA,SAASQ,IACL,IAAMC,EAAQ,IAAI,AAClBA,CAAAA,EAAMC,WAAW,CAAG,IAAI,CAACC,QAAQ,CAACC,QAAQ,CAAC,IAAI,CAACC,OAAO,EACvDJ,EAAMK,kBAAkB,CAAGL,EAAME,QAAQ,CACpCI,CAAC,CAAC,kBACFT,IAAI,CAAC,CAAEU,OAAQ,EAAG,GAClBC,IAAI,CAACR,EAAMC,WAAW,EACtBQ,GAAG,GACRT,EAAMP,OAAO,CAACC,WAAW,CAACgB,OAAO,CAAC,CAACC,EAAmBC,KAClD,GAEA,CAACZ,EAAMN,WAAW,CAACmB,IAAI,CAAC,AAACtB,GAAeA,EAAWE,OAAO,GAAKkB,GAAoB,CAC/E,IAAMpB,EAAaS,EAAMR,cAAc,CAACmB,EACxCX,CAAAA,EAAMP,OAAO,CAACC,WAAW,CAACkB,EAAE,CAAGrB,EAAWE,OAAO,AACrD,CACJ,GACAO,EAAMc,eAAe,GACrBlC,EAASoB,EAAO,SAAUA,EAAMc,eAAe,EAC/ClC,EAASoB,EAAO,UAAW,WACvBA,EAAMC,WAAW,CAACc,OAAO,GACzBf,EAAMK,kBAAkB,CAACU,OAAO,EACpC,GACAnC,EAASoB,EAAO,aAAc,SAAUgB,CAAK,EACzC,IAAMtB,EAAcM,EAAMN,WAAW,CAAEuB,EAA2B,AAAC,CAAA,AAAC,IAAI,CAACxB,OAAO,CAACyB,SAAS,EACtF,IAAI,CAACzB,OAAO,CAACyB,SAAS,CAACC,GAAG,EAC1B,CAAC,CAAA,EAAGC,qBAAqB,CAG7BC,EAAoB,CAACL,EAAMM,QAAQ,CAAC,EAAE,CAACC,OAAO,CAAEC,EAAoBxB,EAAMP,OAAO,CAACgC,IAAI,EAClFzB,EAAMP,OAAO,CAACgC,IAAI,CAACC,UAAU,EAC7B1B,EAAMP,OAAO,CAACgC,IAAI,CAACC,UAAU,CAACF,gBAAgB,CAgB/CG,EAAiBX,EAAMM,QAAQ,CAAC,EAAE,CAACM,MAAM,CAAEC,EAAuB7B,EAAMP,OAAO,CAACyB,SAAS,EACxFlB,EAAMP,OAAO,CAACyB,SAAS,CAACC,GAAG,EAC3BnB,EAAMP,OAAO,CAACyB,SAAS,CAACC,GAAG,CAACzB,WAAW,EACvCM,EAAMP,OAAO,CAACyB,SAAS,CAACC,GAAG,CAACzB,WAAW,CAACoC,aAAa,CAAGC,EAAmB/B,EAAMP,OAAO,CAACyB,SAAS,EAClGlB,EAAMP,OAAO,CAACyB,SAAS,CAACC,GAAG,EAC3BnB,EAAMP,OAAO,CAACyB,SAAS,CAACC,GAAG,CAACzB,WAAW,EACvCM,EAAMP,OAAO,CAACyB,SAAS,CAACC,GAAG,CAACzB,WAAW,CAACsC,IAAI,CAChDtC,EAAYgB,OAAO,CAAC,AAACnB,IACbA,EAAWE,OAAO,CAACwC,YAAY,EAC/B1C,EAAWE,OAAO,CAACwC,YAAY,CAACC,mBAAmB,EACnD3C,EAAW4C,MAAM,CAACzB,OAAO,CAAC,AAAC0B,IACvB,GAAIA,EAAM3C,OAAO,CAAC4C,IAAI,CAAE,CACpB,IAAMC,EAAiBF,EAAM3C,OAAO,CAAC4C,IAAI,CACzCD,EAAMG,MAAM,CAAC7B,OAAO,CAAC,AAAC6B,IAClB,IAAMC,EAAcD,EAAOE,CAAC,CAAEC,EAAaH,EAAOI,MAAM,CAACC,KAAK,CAC1DL,EAAOI,MAAM,CAACC,KAAK,CAACC,KAAK,CACzB,GACAC,EAAW,CAAA,EAGf,GAAIJ,AAAe,KAAfA,EAAmB,CACnB,IAAMnF,EAAIyD,EAAMM,QAAQ,CAAC,EAAE,CAACM,MAAM,CAAEmB,EAAS,AAAIC,MAAMzF,GACvD,IAAK,IAAIqD,EAAI,EAAGA,EAAIrD,EAAG,EAAEqD,EACrBmC,CAAM,CAACnC,EAAE,CAAG,GAEhBmC,EAAOpD,IAAI,CAAC2C,GACZS,EAAOxB,OAAO,CAAG,EAAE,CACnBwB,EAAOxB,OAAO,CAACmB,EAAW,CAAGF,EAC7BxB,EAAMM,QAAQ,CAAC3B,IAAI,CAACoD,GACpBD,EAAW,CAAA,CACf,CAuBA,GApBI,AAACA,GACD9B,EAAMM,QAAQ,CAACZ,OAAO,CAAC,AAACuC,IAChB,CAACH,GACDG,EAAI1B,OAAO,EACXmB,AAAe,KAAK,IAApBA,GACAF,IAAgBS,EAAI1B,OAAO,CAACmB,EAAW,GACnCX,GACAkB,EAAIrB,MAAM,CAAGD,EACbsB,CAAG,CAACA,EAAIrB,MAAM,CAAG,EAAE,EAAKC,EACpBS,EAGJW,EAAItD,IAAI,CAAC2C,GAEbQ,EAAW,CAAA,EAEnB,GAIA,CAACA,EAAU,CACX,IAAMvF,EAAIyD,EAAMM,QAAQ,CAAC,EAAE,CAACM,MAAM,CAAEmB,EAAS,AAAIC,MAAMzF,GACvD,IAAK,IAAIqD,EAAI,EAAGA,EAAIrD,EAAG,EAAEqD,EACrBmC,CAAM,CAACnC,EAAE,CAAG,EAEhBmC,CAAAA,CAAM,CAAC,EAAE,CAAGP,EACZO,EAAOpD,IAAI,CAAC2C,GACZS,EAAOxB,OAAO,CAAG,EAAE,CACfmB,AAAe,KAAK,IAApBA,GACAK,CAAAA,EAAOxB,OAAO,CAACmB,EAAW,CAAGF,CAAU,EAE3CxB,EAAMM,QAAQ,CAAC3B,IAAI,CAACoD,EACxB,CACJ,EACJ,CACJ,EAER,GACA,IAAIG,EAAY,EAChBlC,EAAMM,QAAQ,CAACZ,OAAO,CAAC,AAACuC,IACpBC,EAAYC,KAAKC,GAAG,CAACF,EAAWD,EAAIrB,MAAM,CAC9C,GACA,IAAMyB,EAAUH,EAAYlC,EAAMM,QAAQ,CAAC,EAAE,CAACM,MAAM,CACpD,IAAK,IAAIhB,EAAI,EAAGA,EAAIyC,EAASzC,IAAK,CAC9B,IAAM0C,EAASlC,AA7F0D,SAAUyB,CAAK,EACxF,IAAIU,SACJ,AAAItC,GAEIsC,AAAM,CAAA,IADVA,CAAAA,EAAItC,EAAyB4B,EAAK,EAEvBU,EAIf,CADAA,EAAI/B,EAAmB,IAAMqB,EACzBxB,GACO,CACHmC,YAAaD,EACbE,oBAAqBF,CACzB,EAEGA,CACX,EA6EyC3C,EAAI,GACrCS,GACAL,EAAMM,QAAQ,CAAC,EAAE,CAAC3B,IAAI,CAAC2D,EAAOG,mBAAmB,EACjDzC,EAAMM,QAAQ,CAAC,EAAE,CAAC3B,IAAI,CAAC2D,EAAOE,WAAW,GAGzCxC,EAAMM,QAAQ,CAAC,EAAE,CAAC3B,IAAI,CAAC2D,EAE/B,CACJ,EACJ,CAIA,SAASI,IACL,IAAI,CAACzD,WAAW,CAACJ,IAAI,CAAC,IAAI,CAACO,OAAO,EAClC,IAAI,CAACV,WAAW,CAACgB,OAAO,CAAC,AAACnB,IACtBA,EAAWD,MAAM,GACjBC,EAAWK,OAAO,CAAC+D,OAAO,CAAC,CACvB7D,QAAS,CACb,EAAGP,EAAWqE,eAAe,CACjC,EACJ,CASA,SAASC,EAAsBC,CAAc,EACzC,IAAMpE,EAAc,IAAI,CAACA,WAAW,CAAEH,EAAa,AAACuE,AAAwB,gBAAxBA,EAAeC,IAAI,CACnED,EACAhF,EAAKY,EAAa,SAAUH,CAAU,EAClC,OAAOA,EAAWE,OAAO,CAACuE,EAAE,GAAKF,CACrC,GACAvE,IACAR,EAAUQ,EAAY,UACtBV,EAAM,IAAI,CAACY,OAAO,CAACC,WAAW,CAAEH,EAAWE,OAAO,EAClDZ,EAAMa,EAAaH,GACnBA,EAAWwB,OAAO,GAE1B,CAKA,SAASkD,IACL,IAAoBC,EAAoB,IAAI,CAACzE,OAAO,CAACC,WAAW,CAAEyE,EAAwB,IAAI,CAAC9E,WAAW,CAACK,WAAW,AACtHM,CADc,IAAI,CACZN,WAAW,CAAG,EAAE,CAClB,AAACV,EAAQ,IAAI,CAACS,OAAO,CAACC,WAAW,GACjC,CAAA,IAAI,CAACD,OAAO,CAACC,WAAW,CAAG,EAAE,AAAD,EAE5BT,EAASkF,EAAuB,CAAA,IAChClF,EAASiF,EAAmB,CAAA,IAC5B,IAAI,CAACzE,OAAO,CAACC,WAAW,CAACC,IAAI,CAACuE,EAEtC,CAIA,SAASE,EAAgCC,CAAO,EACxC,AAAC,IAAI,CAACrE,KAAK,CAACsE,oBAAoB,EAChCD,EAAQE,KAAK,CAAC,IAAI,CAAEvB,MAAMzE,SAAS,CAACiG,KAAK,CAAC/F,IAAI,CAACgG,UAAW,GAElE,CAuCItH,AACDA,CAAAA,GAAoBA,CAAAA,EAAkB,CAAC,CAAA,CAAC,EADvBuH,OAAO,CApBvB,SAAiBC,CAAe,CAAEC,CAAU,CAAEC,CAAY,EACtD,IAAMC,EAAaF,EAAWrG,SAAS,CACvC,GAAI,CAACuG,EAAWC,aAAa,CAAE,CAC3B,IAAMC,EAAeH,EAAatG,SAAS,CAC3CK,EAASgG,EAAY,YAAaX,GAClCa,EAAWC,aAAa,CAAG3F,EAC3B0F,EAAWG,SAAS,CAACtF,IAAI,CAACI,GAC1B+E,EAAWI,mBAAmB,CAACxF,WAAW,CAAG,CAACN,EAAmB,CACjE0F,EAAWK,qBAAqB,CAACxF,IAAI,CAAC,eACtCmF,EAAWhE,eAAe,CAAG4C,EAC7BoB,EAAWM,gBAAgB,CAAGvB,EAC9BiB,EAAWtF,cAAc,CAAG,SAA6BH,CAAW,EAChE,IACsBE,EAAa,GADdoF,CAAAA,EAAgBU,KAAK,CAAChG,EAAYiG,IAAI,CAAC,EACxDX,CAAc,EAAiC,IAAI,CAAEtF,GAEzD,OADA,IAAI,CAACK,WAAW,CAACC,IAAI,CAACJ,GACfA,CACX,EACAJ,EAAK6F,EAAc,uBAAwBZ,EAC/C,CACJ,EAQyB,IAAMmB,EAA+BpI,EAS5D,CAAEqI,QAAAA,CAAO,CAAE,CAAI7G,IA8oBc8G,EA9mBR,CA0BvBC,QAAS,CAAA,EAiBTC,UAAW,CAAC,EAUZC,KAAM,CAAA,EAmBNC,UAAW,KAQX5D,aAAc,CAUV6D,MAAO,SASPC,aAAc,CAAA,EAUdC,gBAAiB,sBASjBC,YAAa,UAObC,aAAc,EAOdC,YAAa,EASbC,UAAW,wBAQXR,KAAM,CAAA,EA8CNS,UAAW,WACP,OAAOb,EAAQ,IAAI,CAACc,CAAC,EAAI,GAAK,IAAI,CAACA,CAAC,CAAG,kBAC3C,EAWApE,oBAAqB,CAAA,EAWrBqE,SAAU,UAQVC,QAAS,EAWTC,OAAQ,CAAA,EASRC,MAAO,UAWPC,MAAO,CAEHC,SAAU,QAEVC,WAAY,SAEZC,MAAO,UACX,EAKAC,QAAS,CAAA,EASTC,cAAe,SASfvE,EAAG,EASH6D,EAAG,GACP,EAkHAW,aAAc,CAuFVC,OAAQ,sBAORC,YAAa,EASbC,KAAM,sBAONC,EAAG,EAKHC,KAAM,CACV,EAUAC,oBAAqB,CAQjBC,OAAQ,CAAC,EAITb,MAAO,CACHc,OAAQ,UACRL,KAAM,UACNF,OAAQ,UACR,eAAgB,CACpB,EACAQ,OAAQ,GACRC,OAAQ,SACRjC,QAAS,CAAA,EACTkC,MAAO,EACX,EAyCAJ,OAAQ,CAAC,EAUTnC,MAAO,CAAC,EAIR9E,OAAQ,CACZ,EAoBM,CAAEsH,IAAAA,CAAG,CAAEC,cAAAA,CAAa,CAAE,CAAInJ,IAE1B,CAAEC,SAAUmJ,CAAqB,CAAEhJ,UAAWiJ,CAAsB,CAAEC,WAAAA,CAAU,CAAE/I,KAAMgJ,CAAiB,CAAEC,YAAAA,CAAW,CAAE,CAAIxJ,IAsO/FyJ,EA7NnC,MAUIC,WAAY,CACR,IAAMC,EAAU,IAAI,CAAEC,EAAoB,SAAUC,CAAO,EACvDT,EAAsBS,EAASV,EAAgB,aAAe,YAAa,AAACW,IACxEH,EAAQI,WAAW,CAACD,EACxB,EAAG,CAAEE,QAAS,CAAA,CAAM,EACxB,EA0BA,GAzBAJ,EAAkB,IAAI,CAAC3I,OAAO,CAAC4I,OAAO,EACtC,AAACF,CAAAA,EAAQnG,MAAM,EAAI,EAAE,AAAD,EAAGzB,OAAO,CAAC,AAAC0B,IACxBA,EAAM3C,OAAO,CAACsH,OAAO,EACrB3E,EAAMxC,OAAO,CAACyC,IAAI,EAClB,CAACD,EAAMxC,OAAO,CAACyC,IAAI,CAACuG,aAAa,EAEjCL,EAAkBnG,EAAMxC,OAAO,CAACyC,IAAI,CAACmG,OAAO,CAEpD,GACAP,EAAWK,EAAQ7I,OAAO,CAAC+H,MAAM,CAAE,CAACxG,EAAOsE,KACvC,IAAMuD,EAAe,SAAUJ,CAAC,EACxBnD,AAAS,UAATA,GAAqBgD,EAAQQ,WAAW,EACxC9H,EAAMvC,IAAI,CAAC6J,EAASA,EAAQtI,KAAK,CAAC+I,OAAO,EAAEC,UAAUP,GAAIH,EAAQW,MAAM,CAE/E,CACI,AAA+C,CAAA,KAA/C,AAACX,CAAAA,EAAQY,YAAY,EAAI,EAAE,AAAD,EAAGC,OAAO,CAAC7D,IACrCyC,EAAsBO,EAAQ1I,OAAO,CAAC4I,OAAO,CAAElD,EAAMuD,EAAc,CAAEF,QAAS,CAAA,CAAM,GAChFL,EAAQ1I,OAAO,CAACwJ,GAAG,EACnBrB,EAAsBO,EAAQ1I,OAAO,CAACwJ,GAAG,CAAE9D,EAAMuD,EAAc,CAAEF,QAAS,CAAA,CAAM,IAIpFZ,EAAsBO,EAAShD,EAAMuD,EAAc,CAAEF,QAAS,CAAA,CAAM,EAE5E,GACIL,EAAQ7I,OAAO,CAACoG,SAAS,GACzBkC,EAAsBO,EAAS,OAAQA,EAAQe,MAAM,EACjD,CAACf,EAAQ1I,OAAO,CAACM,QAAQ,CAACoJ,UAAU,EAAE,CACtC,IAAMC,EAAa,CACf9B,OAAQ,CACJhF,EAAG,YACH6D,EAAG,YACHkD,GAAI,MACR,CAAC,CAAClB,EAAQ7I,OAAO,CAACoG,SAAS,CAAC,AAChC,EACAyC,EAAQ1I,OAAO,CAAC6J,GAAG,CAACF,GACpB,AAACjB,CAAAA,EAAQnG,MAAM,EAAI,EAAE,AAAD,EAAGzB,OAAO,CAAC,AAAC0B,IACxBA,EAAM3C,OAAO,CAACsH,OAAO,EACrB3E,EAAMxC,OAAO,CAACyC,IAAI,EAClB,CAACD,EAAMxC,OAAO,CAACyC,IAAI,CAACuG,aAAa,EACjCxG,EAAMxC,OAAO,CAACyC,IAAI,CAACoH,GAAG,CAACF,EAE/B,EACJ,CAEA,AAACjB,EAAQoB,UAAU,EACnB1B,EAAuBM,EAAS,MAExC,CAIAvH,SAAU,CACN,IAAI,CAAC4I,eAAe,GACpBxB,EAAY,IAAI,EAChB,IAAI,CAACyB,QAAQ,CAAG,IACpB,CAKAC,mBAAmBpB,CAAC,CAAEqB,CAAE,CAAEC,CAAE,CAAE,CAC1B,IAAIC,EAASvB,EAAEwB,UAAU,CAAGF,EAAIG,EAASzB,EAAE0B,UAAU,CAAGL,EAAIM,EAAK3B,EAAE4B,MAAM,CAAGN,EAAIO,EAAK7B,EAAE8B,MAAM,CAAGT,EAAIU,EASpG,OARI,IAAI,CAACxK,KAAK,CAACyK,QAAQ,GACnBD,EAAON,EACPA,EAASF,EACTA,EAASQ,EACTA,EAAOF,EACPA,EAAKF,EACLA,EAAKI,GAEFrH,KAAKuH,KAAK,CAACN,EAAIE,GAAMnH,KAAKuH,KAAK,CAACV,EAAQE,EACnD,CAKAS,iBAAiBlC,CAAC,CAAEqB,CAAE,CAAEC,CAAE,CAAE,CACxB,IAAMG,EAASzB,EAAE0B,UAAU,CAAGL,EAAIE,EAASvB,EAAEwB,UAAU,CAAGF,EAAIO,EAAK7B,EAAE8B,MAAM,CAAGT,EAAIM,EAAK3B,EAAE4B,MAAM,CAAGN,EAC9Fa,EAAK,AAACN,CAAAA,GAAM,CAAA,EAAMJ,CAAAA,GAAU,CAAA,EAAIW,EAAK,AAACT,CAAAA,GAAM,CAAA,EAAMJ,CAAAA,GAAU,CAAA,EAChE,GAAI,IAAI,CAAChK,KAAK,CAACyK,QAAQ,CAAE,CACrB,IAAMD,EAAOK,EACbA,EAAKD,EACLA,EAAKJ,CACT,CACA,MAAO,CACH/H,EAAGmI,EACHtE,EAAGuE,CACP,CACJ,CAKAC,uBAAuBrC,CAAC,CAAE,CACtB,IAAI6B,EAAK7B,EAAE8B,MAAM,CAAG9B,EAAE0B,UAAU,CAAEC,EAAK3B,EAAE4B,MAAM,CAAG5B,EAAEwB,UAAU,CAAEO,EAMhE,OALI,IAAI,CAACxK,KAAK,CAACyK,QAAQ,GACnBD,EAAOJ,EACPA,EAAKE,EACLA,EAAKE,GAEF,CACH/H,EAAG6H,EACHhE,EAAG8D,CACP,CACJ,CAMAf,OAAOZ,CAAC,CAAE,CACN,GAAI,IAAI,CAACzI,KAAK,CAAC+K,YAAY,CAACtC,EAAE8B,MAAM,CAAG,IAAI,CAACvK,KAAK,CAACgL,QAAQ,CAAEvC,EAAE4B,MAAM,CAAG,IAAI,CAACrK,KAAK,CAACiL,OAAO,CAAE,CACvFC,gBAAiB,CAAA,CACrB,GAAI,CACA,IAAMC,EAAc,IAAI,CAACL,sBAAsB,CAACrC,EAC5C,AAA2B,CAAA,MAA3B,IAAI,CAAChJ,OAAO,CAACoG,SAAS,EACtBsF,CAAAA,EAAY7E,CAAC,CAAG,CAAA,EAEhB,AAA2B,MAA3B,IAAI,CAAC7G,OAAO,CAACoG,SAAS,EACtBsF,CAAAA,EAAY1I,CAAC,CAAG,CAAA,EAGhB6F,AADY,IAAI,CACR/F,MAAM,CAACX,MAAM,CACrB0G,AAFY,IAAI,CAER8C,SAAS,CAACD,EAAY1I,CAAC,CAAE0I,EAAY7E,CAAC,GAG9CgC,AALY,IAAI,CAKR+C,MAAM,CAAC3K,OAAO,CAAC,AAACgG,GAAUA,EAAM0E,SAAS,CAACD,EAAY1I,CAAC,CAAE0I,EAAY7E,CAAC,GAC9EgC,AANY,IAAI,CAMRnG,MAAM,CAACzB,OAAO,CAAC,AAAC0B,GAAUA,EAAMgJ,SAAS,CAACD,EAAY1I,CAAC,CAAE0I,EAAY7E,CAAC,IAElF,IAAI,CAAChH,MAAM,CAAC,CAAA,EAChB,CACJ,CAKAoJ,YAAYD,CAAC,CAAE,CAKX,GAJIA,EAAE6C,cAAc,EAChB7C,EAAE6C,cAAc,GAGhB7C,AAAa,IAAbA,EAAE8C,MAAM,CACR,OAEJ,IAAMjD,EAAU,IAAI,CAAES,EAAUT,EAAQtI,KAAK,CAAC+I,OAAO,CAGrDyC,EAAmB,AAAC/C,GAAGgD,oBAAoBD,kBAAqB,CAAA,EAE5DrB,EAAa1B,AADjBA,CAAAA,EAAIM,GAASC,UAAUP,IAAMA,CAAAA,EACV8B,MAAM,CAAEN,EAAaxB,EAAE4B,MAAM,AAChD/B,CAAAA,EAAQQ,WAAW,CAAG,CAAA,EACtBR,EAAQtI,KAAK,CAACsE,oBAAoB,CAAG,CAAA,EACrCgE,EAAQoD,UAAU,CAAG3D,EAAsBF,EAAKC,GAAiB0D,EAAmB,YAAc,YAAa,SAAU/C,CAAC,EACtHH,EAAQqD,UAAU,CAAG,CAAA,EAErBlD,AADAA,CAAAA,EAAIM,GAASC,UAAUP,IAAMA,CAAAA,EAC3B0B,UAAU,CAAGA,EACf1B,EAAEwB,UAAU,CAAGA,EACfjC,EAAuBM,EAAS,OAAQG,GACxC0B,EAAa1B,EAAE8B,MAAM,CACrBN,EAAaxB,EAAE4B,MAAM,AACzB,EAAGvC,GAAiB0D,EAAmB,CAAE7C,QAAS,CAAA,CAAM,EAAI,KAAK,GACjEL,EAAQsD,aAAa,CAAG7D,EAAsBF,EAAKC,GAAiB0D,EAAmB,WAAa,UAAW,WAG3G,IAAMjM,EAAa2I,EAAkBI,EAAQW,MAAM,EAAIX,EAAQW,MAAM,CAAC1J,UAAU,CAAE+I,EAAQW,MAAM,CAC5F1J,CAAAA,GAEAA,CAAAA,EAAWuJ,WAAW,CAAGR,EAAQqD,UAAU,AAAD,EAE9CrD,EAAQQ,WAAW,CAAGR,EAAQqD,UAAU,CACxCrD,EAAQtI,KAAK,CAACsE,oBAAoB,CAAG,CAAA,EACjCgE,EAAQqD,UAAU,EAElB3D,EAAuBE,EAAkB3I,EACzC+I,GAAU,eAEdA,EAAQqD,UAAU,CAAG,CAAA,EACrBrD,EAAQuD,SAAS,EACrB,EAAG/D,GAAiB0D,EAAmB,CAAE7C,QAAS,CAAA,CAAM,EAAI,KAAK,EACrE,CAIAkD,WAAY,CACR,IAAI,CAAClC,eAAe,EACxB,CAKAA,iBAAkB,CACV,IAAI,CAAC+B,UAAU,EACf,CAAA,IAAI,CAACA,UAAU,CAAG,IAAI,CAACA,UAAU,EAAC,EAElC,IAAI,CAACE,aAAa,EAClB,CAAA,IAAI,CAACA,aAAa,CAAG,IAAI,CAACA,aAAa,EAAC,CAEhD,CACJ,EAiBM,CAAEE,MAAAA,CAAK,CAAE5M,KAAM6M,CAAiB,CAAE,CAAIpN,IA4HTqN,EA/FnC,cAA2B5D,EAMvB6D,YAAYjM,CAAK,CAAEiJ,CAAM,CAAExJ,CAAO,CAAEoD,CAAK,CAAE,CACvC,KAAK,GAQL,IAAI,CAACqG,YAAY,CAAG,CAAC,OAAO,CAC5B,IAAI,CAAClJ,KAAK,CAAGA,EACb,IAAI,CAACiJ,MAAM,CAAGA,EACd,IAAI,CAACxJ,OAAO,CAAGA,EACf,IAAI,CAACoD,KAAK,CAAGkJ,EAAkBtM,EAAQoD,KAAK,CAAEA,EAClD,CAUA9B,SAAU,CACN,KAAK,CAACA,UACF,IAAI,CAACnB,OAAO,EACZ,CAAA,IAAI,CAACA,OAAO,CAAG,IAAI,CAACA,OAAO,CAACmB,OAAO,EAAC,EAExC,IAAI,CAACf,KAAK,CAAG,KACb,IAAI,CAACiJ,MAAM,CAAG,KACd,IAAI,CAACxJ,OAAO,CAAG,IACnB,CAMAH,OAAOqG,CAAS,CAAE,CACd,IAAI,CAAC/F,OAAO,CAAC+F,EAAY,UAAY,OAAO,CAAC,IAAI,CAAClG,OAAO,CAACyM,UAAU,CAACzN,IAAI,CAAC,IAAI,CAAE,IAAI,CAACwK,MAAM,EAC/F,CAKAkD,QAAS,CACL,IAAMnM,EAAQ,IAAI,CAACA,KAAK,CAAEP,EAAU,IAAI,CAACA,OAAO,AAChD,CAAA,IAAI,CAACG,OAAO,CAAGI,EAAME,QAAQ,CACxByH,MAAM,CAAClI,EAAQkI,MAAM,CAAE,EAAG,EAAGlI,EAAQmI,KAAK,CAAEnI,EAAQiI,MAAM,EAC1DjH,GAAG,CAACT,EAAMK,kBAAkB,EAC5BoJ,GAAG,CAAChK,EAAQkH,KAAK,EACtB,IAAI,CAACyF,aAAa,CAAC3M,EAAQiG,OAAO,EAElC,IAAI,CAAC2C,SAAS,EAClB,CAUA+D,cAAc1G,CAAO,CAAE,CACnB,IAAI,CAAC9F,OAAO,CAAC8F,EAAU,OAAS,OAAO,GACvC,IAAI,CAACjG,OAAO,CAACiG,OAAO,CAAGA,CAC3B,CASA2G,OAAOhN,CAAW,CAAE,CAChB,IAAMW,EAAQ,IAAI,CAACA,KAAK,CAAEiJ,EAAS,IAAI,CAACA,MAAM,CAAEpG,EAAQ,IAAI,CAACA,KAAK,CAAEpD,EAAUqM,EAAM,CAAA,EAAM,IAAI,CAACrM,OAAO,CAAEJ,GACxG,IAAI,CAAC0B,OAAO,GACZ,IAAI,CAACkL,WAAW,CAACjM,EAAOiJ,EAAQxJ,EAASoD,GACzC,IAAI,CAACsJ,MAAM,CAACnM,EAAMK,kBAAkB,EACpC,IAAI,CAACf,MAAM,EACf,CACJ,EAuBMgN,EAAoErP,EAAwD,OAAU,CAACsP,cAAc,CAC3J,IAAIC,EAAyElP,EAAoBC,CAAC,CAAC+O,GASnG,GAAM,CAAE3J,OAAQ,CAAEpE,UAAWkO,CAAW,CAAE,CAAE,CAAID,IAE1C,CAAEhH,QAASkH,CAAiB,CAAE3N,UAAW4N,CAAmB,CAAE,CAAIhO,GA4BxE,OAAMiO,EAiBF,OAAOC,UAAUC,CAAK,CAAE,CACpB,OAAO,IAAIF,EAAUE,EAAMnK,MAAM,CAAC3C,KAAK,CAAE,KAAM,CAC3CyC,EAAGqK,EAAMrK,CAAC,CACV6D,EAAGwG,EAAMxG,CAAC,CACV1D,MAAOkK,EAAMnK,MAAM,CAACC,KAAK,CACzBmK,MAAOD,EAAMnK,MAAM,CAACoK,KAAK,AAC7B,EACJ,CAcA,OAAOC,cAAcF,CAAK,CAAEG,CAAe,CAAE,CACzC,IAAMtK,EAASmK,EAAMnK,MAAM,CAAE3C,EAAQ2C,EAAO3C,KAAK,CAC7CyC,EAAIqK,EAAMI,KAAK,EAAI,EAAG5G,EAAIwG,EAAMK,KAAK,EAAI,EAAG/M,EAgBhD,OAfIJ,EAAMyK,QAAQ,GACVqC,EAAMM,IAAI,EACV3K,EAAIqK,EAAMK,KAAK,CACf7G,EAAIwG,EAAMI,KAAK,GAGfzK,EAAIzC,EAAMqN,SAAS,CAAIP,CAAAA,EAAMK,KAAK,EAAI,CAAA,EACtC7G,EAAItG,EAAMsN,UAAU,CAAIR,CAAAA,EAAMI,KAAK,EAAI,CAAA,IAG3CvK,GAAU,CAACsK,IAEXxK,GAAKrC,AADLA,CAAAA,EAAUuC,EAAO4K,UAAU,EAAC,EACfC,UAAU,CACvBlH,GAAKlG,EAAQqN,UAAU,EAEpB,CACHhL,EAAGA,EACH6D,EAAGA,CACP,CACJ,CAYA,OAAOoH,eAAeZ,CAAK,CAAE,CACzB,MAAO,CACHrK,EAAGqK,EAAMrK,CAAC,CACV6D,EAAGwG,EAAMxG,CAAC,CACV1D,MAAOkK,EAAMnK,MAAM,CAACC,KAAK,CACzBmK,MAAOD,EAAMnK,MAAM,CAACoK,KAAK,AAC7B,CACJ,CAMAd,YAAYjM,CAAK,CAAEiJ,CAAM,CAAExJ,CAAO,CAAE,CAYhC,IAAI,CAAC2N,IAAI,CAAG,CAAA,EAEZ,IAAI,CAACN,KAAK,CAAG,IAAI,CAOjB,IAAI,CAACnK,MAAM,CAAG,CACV+C,QAAS,CAAA,EACT1F,MAAOA,EACPuN,WAAYd,EAAYc,UAAU,AACtC,EAKA,IAAI,CAACtE,MAAM,CAAGA,GAAU,KAOxB,IAAI,CAACxJ,OAAO,CAAGA,EAkCf,IAAI,CAACkO,YAAY,CAAC,IAAI,CAACC,UAAU,GACrC,CAMAD,aAAalO,CAAO,CAAE,CAClB,IAAI,CAACoO,OAAO,CAAGpO,EAAQoO,OAAO,CAC9B,IAAI,CAACC,OAAO,CAACrO,EAAS,KACtB,IAAI,CAACqO,OAAO,CAACrO,EAAS,KACtB,IAAI,CAACsO,OAAO,EAChB,CAOAH,YAAa,CACT,OAAO,IAAI,CAACI,iBAAiB,GACzB,IAAI,CAACvO,OAAO,CAAC,IAAI,CAACwJ,MAAM,EACxB,IAAI,CAACxJ,OAAO,AACpB,CAOAuO,mBAAoB,CAChB,MAAO,AAAwB,YAAxB,OAAO,IAAI,CAACvO,OAAO,AAC9B,CAMAsL,cAAe,CACX,IAAMmC,EAAQ,IAAI,CAACA,KAAK,CAAEC,EAAQ,IAAI,CAACA,KAAK,CAAEvK,EAAQ,IAAI,CAACD,MAAM,CAACC,KAAK,CAAEmK,EAAQ,IAAI,CAACpK,MAAM,CAACoK,KAAK,CAAEtE,EAAI,CACpGhG,EAAGyK,EACH5G,EAAG6G,EACHpC,aAAc,CAAA,EACdtL,QAAS,CAAC,CACd,EAWA,OAVImD,GACA6F,CAAAA,EAAEsC,YAAY,CAAG2B,EAAkBQ,IAAUA,GAAS,GAAKA,GAAStK,EAAMqL,GAAG,AAAD,EAE5ElB,GACAtE,CAAAA,EAAEsC,YAAY,CACVtC,EAAEsC,YAAY,EACV2B,EAAkBS,IAClBA,GAAS,GAAKA,GAASJ,EAAMkB,GAAG,AAAD,EAE3CtB,EAAoB,IAAI,CAAChK,MAAM,CAAC3C,KAAK,CAAE,oBAAqByI,GACrDA,EAAEsC,YAAY,AACzB,CAKAgD,SAAU,CACN,IAAMpL,EAAS,IAAI,CAACA,MAAM,CAAEC,EAAQD,EAAOC,KAAK,CAAEmK,EAAQpK,EAAOoK,KAAK,CAAEtN,EAAU,IAAI,CAACmO,UAAU,GAC7FhL,GACA,IAAI,CAACH,CAAC,CAAGhD,EAAQgD,CAAC,CAClB,IAAI,CAACyK,KAAK,CAAGtK,EAAMsL,QAAQ,CAACzO,EAAQgD,CAAC,CAAE,CAAA,KAGvC,IAAI,CAACA,CAAC,CAAG,KAAK,EACd,IAAI,CAACyK,KAAK,CAAGzN,EAAQgD,CAAC,EAEtBsK,GACA,IAAI,CAACzG,CAAC,CAAG7G,EAAQ6G,CAAC,CAClB,IAAI,CAAC6G,KAAK,CAAGJ,EAAMmB,QAAQ,CAACzO,EAAQ6G,CAAC,CAAE,CAAA,KAGvC,IAAI,CAACA,CAAC,CAAG,KACT,IAAI,CAAC6G,KAAK,CAAG1N,EAAQ6G,CAAC,EAE1B,IAAI,CAAC6H,QAAQ,CAAG,IAAI,CAACpD,YAAY,EACrC,CAKAqD,gBAAiB,CACb,IAAMzL,EAAS,IAAI,CAACA,MAAM,CAAEC,EAAQD,EAAOC,KAAK,CAAEmK,EAAQpK,EAAOoK,KAAK,AACtE,CAAA,IAAI,CAACtK,CAAC,CAAG,IAAI,CAAChD,OAAO,CAACgD,CAAC,CAAGG,EACtB,IAAI,CAACnD,OAAO,CAACgD,CAAC,CAAGG,EAAMyL,OAAO,CAAC,IAAI,CAACnB,KAAK,CAAE,CAAA,GAC3C,IAAI,CAACA,KAAK,CACd,IAAI,CAAC5G,CAAC,CAAG,IAAI,CAAC7G,OAAO,CAAC6G,CAAC,CAAGyG,EACtBA,EAAMsB,OAAO,CAAC,IAAI,CAAClB,KAAK,CAAE,CAAA,GAC1B,IAAI,CAACA,KAAK,AAClB,CAQAmB,OAAOxE,CAAE,CAAEC,CAAE,CAAEwE,CAAO,CAAE,CACpB,GAAI,CAAC,IAAI,CAACP,iBAAiB,GAAI,CAC3B,IAAMQ,EAAMrL,KAAKqL,GAAG,CAACD,GAAUE,EAAMtL,KAAKsL,GAAG,CAACF,GAAU9L,EAAI,IAAI,CAACyK,KAAK,CAAGpD,EAAIxD,EAAI,IAAI,CAAC6G,KAAK,CAAGpD,CAC9F,CAAA,IAAI,CAACmD,KAAK,CAAGwB,AAD0FjM,EAAI+L,EAAMlI,EAAImI,EACnG3E,EAClB,IAAI,CAACqD,KAAK,CAAGwB,AAFkHlM,EAAIgM,EAAMnI,EAAIkI,EAE3HzE,EAClB,IAAI,CAACqE,cAAc,EACvB,CACJ,CAkBAQ,MAAM9E,CAAE,CAAEC,CAAE,CAAEa,CAAE,CAAEC,CAAE,CAAE,CAClB,GAAI,CAAC,IAAI,CAACmD,iBAAiB,GAAI,CAC3B,IAAMvL,EAAI,IAAI,CAACyK,KAAK,CAAGtC,EAAItE,EAAI,IAAI,CAAC6G,KAAK,CAAGtC,CAC5C,CAAA,IAAI,CAACqC,KAAK,CAAGwB,AADyC,CAAA,EAAI9D,CAAC,EAAKd,EAC9CrH,EAClB,IAAI,CAAC0K,KAAK,CAAGwB,AAF6D,CAAA,EAAI9D,CAAC,EAAKd,EAElEzD,EAClB,IAAI,CAAC8H,cAAc,EACvB,CACJ,CAQAN,QAAQrO,CAAO,CAAEoP,CAAI,CAAE,CACnB,IAAMC,EAAYD,EAAO,OAASE,EAActP,CAAO,CAACqP,EAAS,CAAE9O,EAAQ,IAAI,CAAC2C,MAAM,CAAC3C,KAAK,AAC5F,CAAA,IAAI,CAAC2C,MAAM,CAACmM,EAAS,CACjB,AAAuB,UAAvB,OAAOC,EACHA,EACArC,EAAkBqC,GACb/O,CAAK,CAAC8O,EAAS,CAACC,EAAY,EAEzB/O,EAAM5B,GAAG,CAAC2Q,GACd,IAChB,CAOAC,UAAW,CACP,IAAMC,EAAS,CAAC,IAAI,CAAC/B,KAAK,CAAE,IAAI,CAACC,KAAK,CAAE,EAAG,EAAE,CAK7C,OAJI,IAAI,CAACxK,MAAM,CAAC3C,KAAK,CAACyK,QAAQ,GAC1BwE,CAAM,CAAC,EAAE,CAAG,IAAI,CAAC9B,KAAK,CACtB8B,CAAM,CAAC,EAAE,CAAG,IAAI,CAAC/B,KAAK,EAEnB+B,CACX,CAkBA7D,UAAU8D,CAAG,CAAEC,CAAG,CAAE7E,CAAE,CAAEF,CAAE,CAAE,CACnB,IAAI,CAAC4D,iBAAiB,KACvB,IAAI,CAACd,KAAK,EAAI5C,EACd,IAAI,CAAC6C,KAAK,EAAI/C,EACd,IAAI,CAACgE,cAAc,GAE3B,CACJ,EAiHA,AAAC,SAAUhR,CAAa,EAepB,SAASgS,IACL,IAAMC,EAAgB,IAAI,CAACA,aAAa,CAAEC,EAAuB,IAAI,CAAC7P,OAAO,CAAC4P,aAAa,EAAI,EAAE,CACjGC,EAAqB5O,OAAO,CAAC,CAAC6G,EAAqB3G,KAC/C,IAAMnB,EAAUd,IAA6CmN,KAAK,CAAC,IAAI,CAACrM,OAAO,CAAC8H,mBAAmB,CAAEA,EACjG,AAAC9H,CAAAA,EAAQoD,KAAK,EACdpD,CAAAA,EAAQoD,KAAK,CAAGjC,CAAAA,EAEpB0O,CAAoB,CAAC1O,EAAE,CAAGnB,EAC1B4P,EAAc1P,IAAI,CAAC,IAAIqM,EAAyB,IAAI,CAAChM,KAAK,CAAE,IAAI,CAAEP,GACtE,EACJ,CAUA,SAASwP,EAAOnC,CAAK,EACjB,IAAM1M,EAAU0M,EAAMnK,MAAM,CAAC4K,UAAU,GAAIvN,EAAQ8M,EAAMnK,MAAM,CAAC3C,KAAK,CAAEuP,EAAMzC,EAAMM,IAAI,CACnFN,EAAMkC,QAAQ,GACdhP,EAAMwP,OAAO,EACTxP,EAAMwP,OAAO,CAACC,SAAS,CAAChR,IAAI,CAAC,CACzBuB,MAAO8M,EAAMnK,MAAM,CAAC3C,KAAK,AAC7B,EAAG8M,IACH,CAAC,EAAG,EAAG,EAAG,EAAE,CAAEmC,EAAS,CAC3BxM,EAAG8M,CAAG,CAAC,EAAE,CAAI,CAAA,IAAI,CAAC9P,OAAO,CAACgD,CAAC,EAAI,CAAA,EAC/B6D,EAAGiJ,CAAG,CAAC,EAAE,CAAI,CAAA,IAAI,CAAC9P,OAAO,CAAC6G,CAAC,EAAI,CAAA,EAC/BoB,OAAQ6H,CAAG,CAAC,EAAE,EAAI,EAClB3H,MAAO2H,CAAG,CAAC,EAAE,EAAI,CACrB,EACA,MAAO,CACHG,iBAAkBT,EAClBU,iBAAkBhR,IAA6CmN,KAAK,CAACmD,EAAQ,CACzExM,EAAGwM,EAAOxM,CAAC,CAAIqK,CAAAA,EAAMM,IAAI,CAAGhN,EAAQoN,UAAU,CAAGxN,EAAMgL,QAAQ,AAAD,EAC9D1E,EAAG2I,EAAO3I,CAAC,CAAIwG,CAAAA,EAAMM,IAAI,CAAGhN,EAAQqN,UAAU,CAAGzN,EAAMiL,OAAO,AAAD,CACjE,EACJ,CACJ,CA6BA,SAAS2E,IACL,IAAI,CAACP,aAAa,CAAC3O,OAAO,CAAC,AAACmP,GAAiBA,EAAa9O,OAAO,IACjE,IAAI,CAACf,KAAK,CAAG,KACb,IAAI,CAACqP,aAAa,CAAG,KACrB,IAAI,CAAC9M,MAAM,CAAG,KACd,IAAI,CAAC9C,OAAO,CAAG,KACX,IAAI,CAACF,UAAU,EACf,CAAA,IAAI,CAACA,UAAU,CAAG,IAAG,CAE7B,CAOA,SAASuQ,IACL,IAAMrQ,EAAU,IAAI,CAACA,OAAO,CAC5B,OAAQA,EAAQ8C,MAAM,EACjB9C,EAAQqN,KAAK,EAAInO,IAA6CoR,KAAK,CAACtQ,EAAQqN,KAAK,CAC1F,CAOA,SAASkD,IACL,IACIpP,EAAGkM,EADDmD,EAAgB,IAAI,CAACH,gBAAgB,GAAIvN,EAAS,IAAI,CAACA,MAAM,CAAE0L,EAAM,AAACgC,GAAiBA,EAAcrO,MAAM,EAAK,EAEtH,IAAKhB,EAAI,EAAGA,EAAIqN,EAAKrN,IAAK,CAEtB,GAAI,CADJkM,CAAAA,EAAQ,IAAI,CAACA,KAAK,CAACmD,CAAa,CAACrP,EAAE,CAAE2B,CAAM,CAAC3B,EAAE,CAAA,EAClC,CACR2B,EAAOX,MAAM,CAAG,EAChB,MACJ,CACIkL,EAAMM,IAAI,EACVN,EAAMiB,OAAO,GAEjBxL,CAAM,CAAC3B,EAAE,CAAGkM,CAChB,CACA,OAAOvK,CACX,CAWA,SAASuK,EAAMoD,CAAY,CAAEpD,CAAK,EAC9B,GAAIoD,GAAgBA,EAAavN,MAAM,CACnC,OAAOuN,EAEX,GAAI,CAACpD,GAASA,AAAiB,OAAjBA,EAAMnK,MAAM,CACtB,CAAA,GAAIhE,IAA6CM,QAAQ,CAACiR,GACtDpD,EAAQ,IA1PoCF,EA0PV,IAAI,CAAC5M,KAAK,CAAE,IAAI,CAAEkQ,QAEnD,GAAIvR,IAA6CwR,QAAQ,CAACD,GAC3DpD,EAAQ,IAAI,CAAC9M,KAAK,CAAC5B,GAAG,CAAC8R,IAAiB,UAEvC,GAAI,AAAwB,YAAxB,OAAOA,EAA6B,CACzC,IAAME,EAAcF,EAAazR,IAAI,CAACqO,EAAO,IAAI,EACjDA,EAAQsD,EAAYzN,MAAM,CACtByN,EACA,IAnQwCxD,EAmQd,IAAI,CAAC5M,KAAK,CAAE,IAAI,CAAEkQ,EACpD,CAAA,CAEJ,OAAOpD,CACX,CAKA,SAASuD,EAAoB1K,CAAS,EAClC,IAAI,CAAC0J,aAAa,CAAC3O,OAAO,CAAC,AAACmP,GAAiBA,EAAavQ,MAAM,CAACqG,GACrE,CAKA,SAAS2K,IACL,IAAI,CAACjB,aAAa,CAAC3O,OAAO,CAAC,AAACmP,GAAiBA,EAAa1D,MAAM,GACpE,CAeA,SAASoE,EAAUC,CAAc,CAAE1G,CAAE,CAAEC,CAAE,CAAE0G,CAAE,CAAEC,CAAE,EAC7C,GAAI,IAAI,CAAC1Q,KAAK,CAACyK,QAAQ,CAAE,CACrB,IAAMD,EAAOV,EACbA,EAAKC,EACLA,EAAKS,CACT,CACA,IAAI,CAACjI,MAAM,CAAC7B,OAAO,CAAC,CAACiQ,EAAQ/P,IAAO,IAAI,CAACgQ,cAAc,CAACJ,EAAgB1G,EAAIC,EAAI0G,EAAIC,EAAI9P,GAAK,IAAI,CACrG,CAmBA,SAASgQ,EAAeJ,CAAc,CAAE1G,CAAE,CAAEC,CAAE,CAAE0G,CAAE,CAAEC,CAAE,CAAE9P,CAAC,EACrD,IAAIkM,EAAQ,IAAI,CAACvK,MAAM,CAAC3B,EAAE,AACtB,AAACkM,CAAAA,EAAMM,IAAI,EACXN,CAAAA,EAAQ,IAAI,CAACvK,MAAM,CAAC3B,EAAE,CAAGiQ,AAjUuBjE,EAiUDC,SAAS,CAACC,EAAK,EAElEA,CAAK,CAAC0D,EAAe,CAAC1G,EAAIC,EAAI0G,EAAIC,EACtC,CASA,SAAStF,EAAUd,CAAE,CAAEF,CAAE,EACrB,IAAI,CAACmG,SAAS,CAAC,YAAa,KAAM,KAAMjG,EAAIF,EAChD,CAWA,SAAS0G,EAAexG,CAAE,CAAEF,CAAE,CAAExJ,CAAC,EAC7B,IAAI,CAACgQ,cAAc,CAAC,YAAa,KAAM,KAAMtG,EAAIF,EAAIxJ,EACzD,CAlKAxD,EAAcsH,OAAO,CAnBrB,SAAiBqM,CAAkB,EAC/B,IAAMC,EAAeD,EAAmBxS,SAAS,AAC7C,AAACyS,CAAAA,EAAa5B,gBAAgB,EAC9BzQ,IAA6CmN,KAAK,CAAC,CAAA,EAAMkF,EAAc,CACnE5B,iBAAAA,EACAH,OAAAA,EACAW,qBAAAA,EACAE,iBAAAA,EACAE,WAAAA,EACAlD,MAAAA,EACAuD,oBAAAA,EACAC,oBAAAA,EACAC,UAAAA,EACAK,eAAAA,EACAxF,UAAAA,EACA0F,eAAAA,CACJ,EAER,CAoKJ,EAAG1T,GAAkBA,CAAAA,EAAgB,CAAC,CAAA,GAMT,IAAM6T,EAA6B7T,EAW1D,CAAE0O,MAAOoF,CAAkB,CAAE,CAAIvS,GAWvC,OAAMwS,EAMFlF,YAAY1M,CAAU,CAAEE,CAAO,CAAEoD,CAAK,CAAEuO,CAAQ,CAAE,CAC9C,IAAI,CAAC7R,UAAU,CAAGA,EAClB,IAAI,CAACS,KAAK,CAAGT,EAAWS,KAAK,CAC7B,IAAI,CAACqR,UAAU,CAAID,AAAa,UAAbA,EAAuB,SAAW,SACrD,IAAI,CAAC/B,aAAa,CAAG,EAAE,CACvB,IAAI,CAAC5P,OAAO,CAAGA,EACf,IAAI,CAAC8C,MAAM,CAAG,EAAE,CAChB,IAAI,CAACM,KAAK,CAAGA,EACb,IAAI,CAACuO,QAAQ,CAAGA,EAChB,IAAI,CAACE,IAAI,CAAC/R,EAAYE,EAASoD,EACnC,CAUAhD,KAEA,GAAG0R,CAAK,CAAE,CACN,IAAI,CAAC3R,OAAO,CAACC,IAAI,CAAC0E,KAAK,CAAC,IAAI,CAAC3E,OAAO,CAAE6E,UAC1C,CASA+M,iBAAiB/R,CAAO,CAAE,CACtB,IACI1B,EAAK0T,EADHC,EAAM,IAAI,CAACzF,WAAW,CAAC0F,QAAQ,CAAEC,EAAQ,CAAC,EAAGtI,EAAa,IAAI,CAACtJ,KAAK,CAACsJ,UAAU,CAErF,IAAKvL,KAAO0B,EACRgS,EAAYC,CAAG,CAAC3T,EAAI,CAChB,AAAoB,KAAA,IAAb2T,CAAG,CAAC3T,EAAI,EACd,AAACuL,GACE,AAC4B,KAD5B,CAAC,OAAQ,SAAU,eAAe,CAC7BH,OAAO,CAACsI,IACjBG,CAAAA,CAAK,CAACH,EAAU,CAAGhS,CAAO,CAAC1B,EAAI,AAAD,EAGtC,OAAO6T,CACX,CAKA7Q,SAAU,CACF,IAAI,CAACnB,OAAO,EACZ,CAAA,IAAI,CAACA,OAAO,CAAG,IAAI,CAACA,OAAO,CAACmB,OAAO,EAAC,EAEpC,IAAI,CAAC8Q,OAAO,EACZ,CAAA,IAAI,CAACA,OAAO,CAAG,IAAI,CAACA,OAAO,CAAC9Q,OAAO,EAAC,EAExC,IAAI,CAAC6O,oBAAoB,EAC7B,CAKA0B,KAAK/R,CAAU,CAAEE,CAAO,CAAEoD,CAAK,CAAE,CAC7B,IAAI,CAACtD,UAAU,CAAGA,EAClB,IAAI,CAACS,KAAK,CAAGT,EAAWS,KAAK,CAC7B,IAAI,CAACP,OAAO,CAAGA,EACf,IAAI,CAAC8C,MAAM,CAAG,EAAE,CAChB,IAAI,CAAC8M,aAAa,CAAG,EAAE,CACvB,IAAI,CAACxM,KAAK,CAAGA,EACb,IAAI,CAACmN,UAAU,GACf,IAAI,CAACZ,gBAAgB,EACzB,CAKA9P,OAAOqG,CAAS,CAAE,CACd,IAAI,CAAC0K,mBAAmB,CAAC1K,EAC7B,CAKAwG,OAEA2F,CAAY,CAAE,CACN,IAAI,CAACrS,OAAO,CAAC2G,SAAS,EAAI,IAAI,CAACxG,OAAO,EACtC,IAAI,CAACA,OAAO,CAACmS,QAAQ,CAAC,IAAI,CAACtS,OAAO,CAAC2G,SAAS,EAEhD,IAAI,CAACkK,mBAAmB,EAC5B,CAUAhC,OAAOxE,CAAE,CAAEC,CAAE,CAAEwE,CAAO,CAAE,CACpB,IAAI,CAACgC,SAAS,CAAC,SAAUzG,EAAIC,EAAIwE,EACrC,CAaAK,MAAM9E,CAAE,CAAEC,CAAE,CAAEa,CAAE,CAAEC,CAAE,CAAE,CAClB,IAAI,CAAC0F,SAAS,CAAC,QAASzG,EAAIC,EAAIa,EAAIC,EACxC,CAKAmH,2BAA2BtM,CAAO,CAAE,CAChC,IAAI,CAAC2J,aAAa,CAAC3O,OAAO,CAAC,AAACmP,IACxBA,EAAazD,aAAa,CAAC1G,EAC/B,EACJ,CAOAuM,eAAgB,CACZ,MAAO,CAAC,CAAC,IAAI,CAAC1P,MAAM,CAACX,MAAM,AAC/B,CAaAsQ,eAAe5H,CAAE,CAAEF,CAAE,CAAE+H,CAAoB,CAAE,CACzC,IAAMnS,EAAQ,IAAI,CAACT,UAAU,CAACS,KAAK,CAEnCiH,EAAe,IAAI,CAAC1H,UAAU,CAACF,WAAW,CAE1C+S,EAAkBpS,EAAMN,WAAW,CAACyJ,OAAO,CAAC,IAAI,CAAC5J,UAAU,EAAG8S,EAAerS,EAAMP,OAAO,CAACC,WAAW,CAAC0S,EAAgB,CACvH,IAAI,CAACtB,cAAc,CAACxG,EAAIF,EAAI,GACxB+H,GACA,IAAI,CAACrB,cAAc,CAACxG,EAAIF,EAAI,GAKhCiI,CAAY,CAAC,IAAI,CAAChB,UAAU,CAAC,CAAC,IAAI,CAACxO,KAAK,CAAC,CACpCiK,KAAK,CAAG,IAAI,CAACrN,OAAO,CAACqN,KAAK,CAC/B7F,CAAY,CAAC,IAAI,CAACoK,UAAU,CAAC,CAAC,IAAI,CAACxO,KAAK,CAAC,CACpCiK,KAAK,CAAG,IAAI,CAACrN,OAAO,CAACqN,KAAK,AACnC,CAKAT,OAAOiG,CAAU,CAAE,CACf,IAAM/S,EAAa,IAAI,CAACA,UAAU,CAAEE,EAAUyR,EAAmB,CAAA,EAAM,IAAI,CAACzR,OAAO,CAAE6S,GAAaC,EAAc,IAAI,CAAC3S,OAAO,CAAC2S,WAAW,CAAEC,EAAc,IAAI,CAACvG,WAAW,CACxK,IAAI,CAAClL,OAAO,GAEZmQ,EAAmB,CAAA,EAAM,IAAI,CADL,IAAIsB,EAAYjT,EAAYE,EAAS,IAAI,CAACoD,KAAK,CAAE,IAAI,CAACuO,QAAQ,GAEtF,IAAI,CAACjF,MAAM,CAACoG,GACZ,IAAI,CAACjT,MAAM,EACf,CACJ,CACA2R,EAA0BvM,OAAO,CAACyM,GAML,IAAMsB,EAA8BtB,EAoJ3D,CAAEuB,eAAgBC,CAA+B,CAAE,CAd5B,CACzBD,eApDmB,CAInBE,MAAO,CACHC,QAAS,SACTC,WAAY,CACR9O,GAAI,QACJ+O,KAAM,EACNC,KAAM,EACNC,YAAa,GACbC,aAAc,EAClB,EAIAC,SAAU,CAAC,CACHN,QAAS,OACTC,WAAY,CACRnV,EAAG,wBACH,eAAgB,CACpB,CACJ,EAAE,AACV,EAIA,gBAAiB,CACbkV,QAAS,SACTC,WAAY,CACR9O,GAAI,gBACJ+O,KAAM,EACNC,KAAM,EACNC,YAAa,GACbC,aAAc,EAClB,EACAC,SAAU,CAAC,CACHN,QAAS,OACTC,WAAY,CAERnV,EAAG,yBACH,eAAgB,CACpB,CACJ,EAAE,AACV,CACJ,CAQA,EAeM,CAAEiB,SAAUwU,CAAyB,CAAE5N,QAAS6N,CAAwB,CAAEC,OAAAA,CAAM,CAAExH,MAAOyH,CAAsB,CAAEC,UAAAA,CAAS,CAAE,CAAI7U,IAMhI8U,EAAkBC,GAAmB,cACrCC,GAAoBD,GAAmB,gBAEvCE,GAAe,oBAAuB,CAAA,AAACjV,IAA8CkV,GAAG,CAAG,KAAS,IAAI,EAAK,IASnH,SAASH,GAAmBI,CAAU,EAClC,OAAO,SAAUC,CAAK,EAClB,IAAI,CAAClU,IAAI,CAACiU,EAAY,QAAUC,EAAQ,IAC5C,CACJ,CAIA,SAASC,KACL,IAAI,CAACvU,OAAO,CAACwU,IAAI,CAAGV,EAAuBZ,EAAiC,IAAI,CAAClT,OAAO,CAACwU,IAAI,EAAI,CAAC,EAYtG,CAIA,SAASC,GAAqBlQ,CAAE,CAAEmQ,CAAa,EAC3C,IAAM1U,EAAU,CAAEqT,WAAY,CAAE9O,GAAAA,CAAG,CAAE,EAC/B4N,EAAQ,CACV1K,OAAQiN,EAAcrN,KAAK,EAAI,OAC/BM,KAAM+M,EAAcrN,KAAK,EAAI,qBACjC,CACArH,CAAAA,EAAQ0T,QAAQ,CAAIgB,EAAchB,QAAQ,EACtCgB,EAAchB,QAAQ,CAACzB,GAAG,CAAC,SAAU0C,CAAK,EACtC,OAAOb,EAAuB3B,EAAOwC,EACzC,GACJ,IAAMC,EAAMd,EAAuB,CAAA,EAAM,CACrCT,WAAY,CACRG,YAAa,GACbC,aAAc,GACdF,KAAM,EACND,KAAM,EACNuB,OAAQ,MACZ,CACJ,EAAGH,EAAe1U,GACZ8U,EAAS,IAAI,CAACzW,UAAU,CAACuW,GAE/B,OADAE,EAAOvQ,EAAE,CAAGA,EACLuQ,CACX,CAwBA,MAAMC,WAAyB/B,EAM3B,OAAO/N,QAAQE,CAAU,CAAE6P,CAAgB,CAAE,CACzC,IAAMC,EAAmBD,EAAiBlW,SAAS,AAC9CmW,CAAAA,EAAiBC,SAAS,GAC3BvB,EAA0BxO,EAAY,oBAAqBoP,IAC3DU,EAAiBC,SAAS,CAAGT,GAErC,CAMAjI,YAAY1M,CAAU,CAAEE,CAAO,CAAEoD,CAAK,CAAE,CACpC,KAAK,CAACtD,EAAYE,EAASoD,EAAO,SAMlC,IAAI,CAACyC,IAAI,CAAG,MAChB,CAYAsP,KAAM,CACF,IAAMC,EAAU,IAAI,CAACpV,OAAO,CAAC9B,CAAC,CAC9B,GAAIkX,EACA,MAAO,AAAmB,YAAnB,OAAOA,EACVA,EAAQpW,IAAI,CAAC,IAAI,EACjBoW,EAER,IAAMtS,EAAS,IAAI,CAACA,MAAM,CAAE0L,EAAM1L,EAAOX,MAAM,CAAEjE,EAAI,EAAE,CACnDmX,EAAW7G,EAAKnB,EAAQvK,CAAM,CAAC,EAAE,CAAEwS,EAAWD,GAAY,IAAI,CAAC7F,MAAM,CAACnC,GAAO6C,gBAAgB,CAAEqF,EAAa,EAAGnH,EACnH,GAAIkH,EAEA,IADApX,EAAEgC,IAAI,CAAC,CAAC,IAAKoV,EAAStS,CAAC,CAAEsS,EAASzO,CAAC,CAAC,EAC7B,EAAE0O,EAAa/G,GAAO6G,GAEzBjH,EAAUf,AADVA,CAAAA,EAAQvK,CAAM,CAACyS,EAAW,AAAD,EACTnH,OAAO,EAAI,IAC3BkH,EAAW,IAAI,CAAC9F,MAAM,CAACnC,GAAO6C,gBAAgB,CAC9B,MAAZ9B,GAGKA,AAAY,MAAZA,EACLlQ,EAAEgC,IAAI,CAAC,CAACkO,EAASkH,EAAStS,CAAC,CAAEsS,EAASzO,CAAC,CAAC,EAEnCuH,AAAY,MAAZA,GACLlQ,EAAEgC,IAAI,CAAC,CAACkO,EAAQ,EAEpBiH,EAAWhI,EAAMnK,MAAM,CAAC+C,OAAO,CAGvC,OAAQoP,GAAY,IAAI,CAAClV,OAAO,CAC5B,IAAI,CAACI,KAAK,CAACE,QAAQ,CAAC+U,SAAS,CAACtX,EAAG,IAAI,CAACiC,OAAO,CAACuH,WAAW,IACzD,IACR,CACA8K,eAAgB,CACZ,OAAO,KAAK,CAACA,iBAAmB,CAAC,CAAC,IAAI,CAACxS,OAAO,CAAC9B,CAAC,AACpD,CACAwO,OAAO+I,CAAM,CAAE,CACX,IAAMzV,EAAU,IAAI,CAACA,OAAO,CAAEmS,EAAQ,IAAI,CAACJ,gBAAgB,CAAC/R,EAC5D,CAAA,IAAI,CAACG,OAAO,CAAG,IAAI,CAACL,UAAU,CAACS,KAAK,CAACE,QAAQ,CACxCiV,IAAI,CAAC,CAAC,CAAC,IAAK,EAAG,EAAE,CAAC,EAClBtV,IAAI,CAAC+R,GACLnR,GAAG,CAACyU,GACT,IAAI,CAACrD,OAAO,CAAG,IAAI,CAACtS,UAAU,CAACS,KAAK,CAACE,QAAQ,CACxCiV,IAAI,CAAC,CAAC,CAAC,IAAK,EAAG,EAAE,CAAC,EAClBpD,QAAQ,CAAC,2BACTlS,IAAI,CAAC,CACNU,OAAQ,CACZ,GACKE,GAAG,CAACyU,GACL,AAAC,IAAI,CAAC3V,UAAU,CAACS,KAAK,CAACsJ,UAAU,EACjC,IAAI,CAACuI,OAAO,CAAChS,IAAI,CAAC,CACd,kBAAmB,QACnBqH,OAAQ0M,GACRxM,KAAMwM,GACN,eAAgB,IAAI,CAAChU,OAAO,CAACuH,WAAW,GACpC1H,AAAe,EAAfA,EAAQ6H,IAAI,AACpB,GAEJ,KAAK,CAAC6E,SACNmH,EAAO,IAAI,CAAC1T,OAAO,CAAE,CAAE+T,kBAAAA,GAAmBF,gBAAAA,CAAgB,GAC1D,IAAI,CAAC2B,UAAU,CAAC,IAAI,CACxB,CACA9V,OAAOqG,CAAS,CAAE,CACd,GAAI,IAAI,CAAC/F,OAAO,CAAE,CACd,IAAMjC,EAAI,IAAI,CAACiX,GAAG,GAAIS,EAAS1P,EAAY,UAAY,OACnDhI,GACA,IAAI,CAACiC,OAAO,CAACyV,EAAO,CAAC,CAAE1X,EAAGA,CAAE,GAC5B,IAAI,CAACkU,OAAO,CAACwD,EAAO,CAAC,CAAE1X,EAAGA,CAAE,KAG5B,IAAI,CAACiC,OAAO,CAACC,IAAI,CAAC,CAAElC,EAAG,iBAAc,GACrC,IAAI,CAACkU,OAAO,CAAChS,IAAI,CAAC,CAAElC,EAAG,iBAAc,IAEzC,IAAI,CAACiC,OAAO,CAAC0V,MAAM,CAAG,IAAI,CAACzD,OAAO,CAACyD,MAAM,CAAG,CAAC,CAAC3X,CAClD,CACA,KAAK,CAAC2B,OAAOqG,EACjB,CAMAyP,WAAWG,CAAI,CAAE,CACb,IAAMC,EAAcD,EAAK9V,OAAO,CAAEO,EAAQuV,EAAKvV,KAAK,CAAEiU,EAAOjU,EAAMP,OAAO,CAACwU,IAAI,CAAE7M,EAAOoO,EAAYpO,IAAI,CAAEN,EAAQuM,EAAyBjM,IAASA,AAAS,SAATA,EAChJA,EACAoO,EAAYtO,MAAM,CAuBtB,CAAC,cAAe,YAAY,CACvBxG,OAAO,CAvBM,SAAUoT,CAAU,EAClC,IACI2B,EAAKC,EAAkB3X,EAAKwW,EAD1BoB,EAAWH,CAAW,CAAC1B,EAAW,CAExC,GAAI6B,EAAU,CACV,IAAK5X,KAAOkW,EAER,GAAI,AAAC0B,CAAAA,IAAcF,CAAAA,AADnBA,CAAAA,EAAMxB,CAAI,CAAClW,EAAI,AAAD,EACS+U,UAAU,EAAI2C,EAAI3C,UAAU,CAAC9O,EAAE,AAAD,GAGjD2R,IAAaF,EAAIzR,EAAE,AAAD,GAClByR,AAAgB,WAAhBA,EAAI5C,OAAO,CAAe,CAC1B6C,EAAmBD,EACnB,KACJ,CAEAC,IACAnB,EAASgB,CAAI,CAACzB,EAAW,CAAG9T,EAAME,QAAQ,CACrCyU,SAAS,CAAC,AAACa,CAAAA,EAAYxR,EAAE,EAAIwP,GAAU,EAAK,IAAMmC,EAAUpC,EAAuBmC,EAAkB,CAAE5O,MAAOA,CAAM,IACzHyO,EAAK1V,IAAI,CAACiU,EAAYS,EAAOqB,YAAY,CAAC,OAElD,CACJ,EAGJ,CACJ,CAYApB,GAAiB7C,QAAQ,CAAG,CACxBkE,UAAW,YACX1O,YAAa,eACbD,OAAQ,SACRE,KAAM,OACN7G,OAAQ,QACZ,EAkBA,GAAM,CAAEuL,MAAOgK,EAAsB,CAAE,CAAInX,GAwB3C,OAAMoX,WAAyBtD,EAM3BxG,YAAY1M,CAAU,CAAEE,CAAO,CAAEoD,CAAK,CAAE,CACpC,KAAK,CAACtD,EAAYE,EAASoD,EAAO,SAMlC,IAAI,CAACyC,IAAI,CAAG,OACZ,IAAI,CAAC8F,SAAS,CAAG,KAAK,CAAC8G,cAC3B,CAMA/F,OAAO+I,CAAM,CAAE,CACX,IAAMtD,EAAQ,IAAI,CAACJ,gBAAgB,CAAC,IAAI,CAAC/R,OAAO,CAChD,CAAA,IAAI,CAACG,OAAO,CAAG,IAAI,CAACL,UAAU,CAACS,KAAK,CAACE,QAAQ,CACxC8V,IAAI,CAAC,EAAG,KAAM,EAAG,GACjBnW,IAAI,CAAC+R,GACLnR,GAAG,CAACyU,GACT,KAAK,CAAC/I,QACV,CACA7M,OAAOqG,CAAS,CAAE,CACd,GAAI,IAAI,CAAC/F,OAAO,CAAE,CACd,IAAMmV,EAAW,IAAI,CAAC9F,MAAM,CAAC,IAAI,CAAC1M,MAAM,CAAC,EAAE,EAAEoN,gBAAgB,CACzDoF,EACA,IAAI,CAACnV,OAAO,CAAC+F,EAAY,UAAY,OAAO,CAAC,CACzClD,EAAGsS,EAAStS,CAAC,CACb6D,EAAGyO,EAASzO,CAAC,CACbsB,MAAO,IAAI,CAACnI,OAAO,CAACmI,KAAK,CACzBF,OAAQ,IAAI,CAACjI,OAAO,CAACiI,MAAM,AAC/B,GAGA,IAAI,CAAC7H,IAAI,CAAC,CACN4C,EAAG,EACH6D,EAAG,IACP,GAEJ,IAAI,CAAC1G,OAAO,CAAC0V,MAAM,CAAGW,CAAAA,CAAQlB,CAClC,CACA,KAAK,CAACzV,OAAOqG,EACjB,CACJ,CAWAoQ,GAAiBpE,QAAQ,CAAGmE,GAAuBI,AAjGkB1B,GAiGa7C,QAAQ,CAAE,CACxF/J,MAAO,QACPF,OAAQ,QACZ,GAkBA,GAAM,CAAEoE,MAAOqK,EAAwB,CAAE,CAAIxX,GAmB7C,OAAMyX,WAA2B3D,EAM7BxG,YAAY1M,CAAU,CAAEE,CAAO,CAAEoD,CAAK,CAAE,CACpC,KAAK,CAACtD,EAAYE,EAASoD,EAAO,SAMlC,IAAI,CAACyC,IAAI,CAAG,SACZ,IAAI,CAAC8F,SAAS,CAAG,KAAK,CAAC8G,cAC3B,CASA5S,OAAOqG,CAAS,CAAE,CACd,GAAI,IAAI,CAAC/F,OAAO,CAAE,CACd,IAAMmV,EAAW,IAAI,CAAC9F,MAAM,CAAC,IAAI,CAAC1M,MAAM,CAAC,EAAE,EAAEoN,gBAAgB,CACzDoF,EACA,IAAI,CAACnV,OAAO,CAAC+F,EAAY,UAAY,OAAO,CAAC,CACzClD,EAAGsS,EAAStS,CAAC,CACb6D,EAAGyO,EAASzO,CAAC,CACbe,EAAG,IAAI,CAAC5H,OAAO,CAAC4H,CAAC,AACrB,GAGA,IAAI,CAACzH,OAAO,CAACC,IAAI,CAAC,CACd4C,EAAG,EACH6D,EAAG,IACP,GAEJ,IAAI,CAAC1G,OAAO,CAAC0V,MAAM,CAAG,CAAC,CAACP,CAC5B,CACA,KAAK,CAACzV,OAAOb,IAAI,CAAC,IAAI,CAAEkH,EAC5B,CAIAwG,OAAO+I,CAAM,CAAE,CACX,IAAMtD,EAAQ,IAAI,CAACJ,gBAAgB,CAAC,IAAI,CAAC/R,OAAO,CAChD,CAAA,IAAI,CAACG,OAAO,CAAG,IAAI,CAACL,UAAU,CAACS,KAAK,CAACE,QAAQ,CACxCmW,MAAM,CAAC,EAAG,KAAM,GAChBxW,IAAI,CAAC+R,GACLnR,GAAG,CAACyU,GACT,KAAK,CAAC/I,QACV,CAOAmK,UAAUjP,CAAC,CAAE,CACT,IAAI,CAAC5H,OAAO,CAAC4H,CAAC,CAAGA,CACrB,CACJ,CAaA+O,GAAmBzE,QAAQ,CAAGwE,GAAyBD,AAtNc1B,GAsNiB7C,QAAQ,CAAE,CAAEtK,EAAG,GAAI,GAoBzG,GAAM,CAAEyE,MAAOyK,EAAyB,CAAE/Q,QAASgR,EAA2B,CAAE,CAAI7X,GAmBpF,OAAM8X,WAA4BhE,EAM9BxG,YAAY1M,CAAU,CAAEE,CAAO,CAAEoD,CAAK,CAAE,CACpC,KAAK,CAACtD,EAAYE,EAASoD,EAAO,SAMlC,IAAI,CAACyC,IAAI,CAAG,SAChB,CASAgM,KAAK/R,CAAU,CAAEE,CAAO,CAAEoD,CAAK,CAAE,CACzB2T,GAA4B/W,EAAQsN,KAAK,GACzCtN,EAAQ8C,MAAM,CAAC7B,OAAO,CAAC,AAACoM,IACpBA,EAAMC,KAAK,CAAGtN,EAAQsN,KAAK,AAC/B,GAEAyJ,GAA4B/W,EAAQmD,KAAK,GACzCnD,EAAQ8C,MAAM,CAAC7B,OAAO,CAAC,AAACoM,IACpBA,EAAMlK,KAAK,CAAGnD,EAAQmD,KAAK,AAC/B,GAEJ,KAAK,CAAC0O,KAAK/R,EAAYE,EAASoD,EACpC,CAOAsJ,OAAO+I,CAAM,CAAE,CACX,IAAI,CAACtV,OAAO,CAAG,IAAI,CAACL,UAAU,CAACS,KAAK,CAACE,QAAQ,CAACwW,aAAa,CAAC,WACvD7W,IAAI,CAAC,IAAI,CAAC2R,gBAAgB,CAAC,IAAI,CAAC/R,OAAO,GACvCgB,GAAG,CAACyU,GACT,KAAK,CAAC/I,QACV,CAKAf,UAAUd,CAAE,CAAEF,CAAE,CAAE,CACd,KAAK,CAAC8H,eAAe5H,EAAIF,EAAI,CAAA,EACjC,CAaAuM,oBAAoBC,CAAM,CAAEC,CAAM,CAAEC,CAAE,CAAEC,CAAE,CAAE,CACxC,OAAO5T,KAAK6T,GAAG,CAAC,AAACH,CAAAA,EAAOvQ,CAAC,CAAGsQ,EAAOtQ,CAAC,AAADA,EAAKwQ,EAAK,AAACD,CAAAA,EAAOpU,CAAC,CAAGmU,EAAOnU,CAAC,AAADA,EAAKsU,EACjEF,EAAOpU,CAAC,CAAGmU,EAAOtQ,CAAC,CAAGuQ,EAAOvQ,CAAC,CAAGsQ,EAAOnU,CAAC,EAAIU,KAAK8T,IAAI,CAAC,AAACJ,CAAAA,EAAOvQ,CAAC,CAAGsQ,EAAOtQ,CAAC,AAADA,EAAMuQ,CAAAA,EAAOvQ,CAAC,CAAGsQ,EAAOtQ,CAAC,AAADA,EAClG,AAACuQ,CAAAA,EAAOpU,CAAC,CAAGmU,EAAOnU,CAAC,AAADA,EAAMoU,CAAAA,EAAOpU,CAAC,CAAGmU,EAAOnU,CAAC,AAADA,EACnD,CAUAyU,SAASnC,CAAQ,CAAEoC,CAAS,CAAE,CAC1B,IAAMC,EAAKrC,EAAStS,CAAC,CAAE4U,EAAKtC,EAASzO,CAAC,CAAEgR,EAAKH,EAAU1U,CAAC,CAAE8U,EAAKJ,EAAU7Q,CAAC,CAAEwD,EAAK,AAACsN,CAAAA,EAAKE,CAAC,EAAK,EAAuBE,EAAKrU,KAAK8T,IAAI,CAAC,AAACG,CAAAA,EAAKE,CAAC,EAAMF,CAAAA,EAAKE,CAAC,EAAK,EAAI,AAACD,CAAAA,EAAKE,CAAC,EAAMF,CAAAA,EAAKE,CAAC,EAAK,GACnLE,EAAQtU,AAAiB,IAAjBA,KAAKuU,IAAI,CAD4K,AAACH,CAAAA,EAAKF,CAAC,EAAMC,CAAAA,EAAKF,CAAC,GACjLjU,KAAKwU,EAAE,CAK1C,OAJI7N,EAAKsN,GACLK,CAAAA,GAAS,GAAE,EAGR,CAAE3N,GAAAA,EAAIC,GANwF,AAACsN,CAAAA,EAAKE,CAAC,EAAK,EAMhGC,GAAAA,EAAII,GADV,IAAI,CAACC,KAAK,GACIJ,MAAAA,CAAM,CACnC,CAKAI,OAAQ,CACJ,IAAM9K,EAAQ,IAAI,CAAC+K,QAAQ,GAC3B,OAAOtB,GAA4BzJ,GAC/B5J,KAAK6T,GAAG,CAACjK,EAAMmB,QAAQ,CAAC,IAAI,CAACzO,OAAO,CAACmY,EAAE,EAAI7K,EAAMmB,QAAQ,CAAC,IAC1D,IAAI,CAACzO,OAAO,CAACmY,EAAE,AACvB,CAKAE,UAAW,CACP,IAAMC,EAAa,IAAI,CAACtY,OAAO,CAACsN,KAAK,CACrC,OAAO,IAAI,CAAC/M,KAAK,CAAC+M,KAAK,CAACgL,EAAW,AACvC,CAOAC,oBAAoBlL,CAAK,CAAE,CACvB,OAAO,IAAI,CAACmC,MAAM,CAACnC,GAAO6C,gBAAgB,AAC9C,CAOArQ,OAAOqG,CAAS,CAAE,CACd,GAAI,IAAI,CAAC/F,OAAO,CAAE,CACd,IAAMmV,EAAW,IAAI,CAACiD,mBAAmB,CAAC,IAAI,CAACzV,MAAM,CAAC,EAAE,EAAG4U,EAAY,IAAI,CAACa,mBAAmB,CAAC,IAAI,CAACzV,MAAM,CAAC,EAAE,EAAGqP,EAAQ,IAAI,CAACsF,QAAQ,CAACnC,EAAUoC,GAC7IpC,EACA,IAAI,CAACnV,OAAO,CAAC+F,EAAY,UAAY,OAAO,CAAC,CACzCmE,GAAI8H,EAAM9H,EAAE,CACZC,GAAI6H,EAAM7H,EAAE,CACZyN,GAAI5F,EAAM4F,EAAE,CACZI,GAAIhG,EAAMgG,EAAE,CACZK,SAAUrG,EAAM6F,KAAK,CACrBS,gBAAiBtG,EAAM9H,EAAE,CACzBqO,gBAAiBvG,EAAM7H,EAAE,AAC7B,GAGA,IAAI,CAACnK,OAAO,CAACC,IAAI,CAAC,CACd4C,EAAG,EACH6D,EAAG,IACP,GAEJ,IAAI,CAAC1G,OAAO,CAAC0V,MAAM,CAAGW,CAAAA,CAAQlB,CAClC,CACA,KAAK,CAACzV,OAAOqG,EACjB,CAOAyS,WAAWR,CAAE,CAAE,CACX,IAAMvM,EAAS,IAAI,CAAC9L,UAAU,CAACF,WAAW,CAACgM,MAAM,AACjD,CAAA,IAAI,CAAC5L,OAAO,CAACmY,EAAE,CAAGA,EACdvM,GAAUA,CAAM,CAAC,EAAE,GACnBA,CAAM,CAAC,EAAE,CAACuM,EAAE,CAAGA,EACfvM,CAAM,CAAC,EAAE,CAACuM,EAAE,CAAGA,EAEvB,CACJ,CAaAnB,GAAoB9E,QAAQ,CAAG4E,GAA0BL,AA3aY1B,GA2amB7C,QAAQ,CAAE,CAC9FiG,GAAI,IACR,GASA,IAAMS,GAAgEpb,EAAwD,OAAU,CAACqb,UAAU,CACnJ,IAAIC,GAAqEjb,EAAoBC,CAAC,CAAC8a,IAU/F,GAAM,CAAEG,OAAAA,EAAM,CAAE,CAAID,KAGd,CAAEjF,OAAQmF,EAAwB,CAAEC,eAAAA,EAAc,CAAEC,SAAAA,EAAQ,CAAEzZ,KAAM0Z,EAAsB,CAAE,CAAIja,IAUtG,SAASka,GAAgBpW,CAAC,CAAE6D,CAAC,CAAEwS,CAAC,CAAEC,CAAC,CAAEtZ,CAAO,EACxC,IAAMuZ,EAAUvZ,GAAWA,EAAQuZ,OAAO,CAAEC,EAAUxZ,GAAWA,EAAQwZ,OAAO,CAC5E9D,EAAM+D,EAASC,EAAUL,EAAI,EA4BjC,OA3BIH,GAASK,IAAYL,GAASM,KAC9B9D,EAAO,CAAC,CAAC,IAAK6D,EAASC,EAAQ,CAAC,CAG5BC,AADJA,CAAAA,EAAU5S,EAAI2S,CAAM,EACN,GACVC,CAAAA,EAAU,CAACH,EAAIG,CAAM,EAErBA,EAAUJ,GACVK,CAAAA,EAAUH,EAAUvW,EAAKqW,EAAI,EAAKI,EAAUJ,EAAII,CAAM,EAGtDD,EAAU3S,EAAIyS,EACd5D,EAAKxV,IAAI,CAAC,CAAC,IAAK8C,EAAI0W,EAAS7S,EAAIyS,EAAE,EAG9BE,EAAU3S,EACf6O,EAAKxV,IAAI,CAAC,CAAC,IAAK8C,EAAI0W,EAAS7S,EAAE,EAG1B0S,EAAUvW,EACf0S,EAAKxV,IAAI,CAAC,CAAC,IAAK8C,EAAG6D,EAAIyS,EAAI,EAAE,EAGxBC,EAAUvW,EAAIqW,GACnB3D,EAAKxV,IAAI,CAAC,CAAC,IAAK8C,EAAIqW,EAAGxS,EAAIyS,EAAI,EAAE,GAGlC5D,GAAQ,EAAE,AACrB,CAsBA,MAAMiE,WAA0B3G,EAkB5B,OAAO4G,gBAAgBC,CAAY,CAAE/J,CAAG,CAAE,CACtC,MAAO,CACH9M,EAAGU,KAAKoW,KAAK,CAAC,AAAChK,CAAAA,EAAI9M,CAAC,EAAI,CAAA,EAAM6W,CAAAA,EAAa7W,CAAC,EAAI,CAAA,EAC5C,AAAC8M,CAAAA,EAAI3H,KAAK,CAAI0R,CAAAA,EAAa1R,KAAK,EAAI,CAAA,CAAC,EACjC8Q,GAAeY,EAAaxT,KAAK,GACzCQ,EAAGnD,KAAKoW,KAAK,CAAC,AAAChK,CAAAA,EAAIjJ,CAAC,EAAI,CAAA,EAAMgT,CAAAA,EAAahT,CAAC,EAAI,CAAA,EAC5C,AAACiJ,CAAAA,EAAI7H,MAAM,CAAI4R,CAAAA,EAAa5R,MAAM,EAAI,CAAA,CAAC,EACnCgR,GAAeY,EAAatS,aAAa,EACrD,CACJ,CACA,OAAOtC,QAAQ+P,CAAgB,CAAE,CAE7B+E,AADgB/E,EAAiBlW,SAAS,CAACib,OAAO,CAC1CC,SAAS,CAAGZ,EACxB,CAOA,OAAOa,iBAAiB1Z,CAAK,CAAEoC,CAAK,CAAEkX,CAAY,CAAEK,CAAS,CAAE,CAC3D,IAYIC,EAZE9T,EAAQwT,EAAaxT,KAAK,CAAEkB,EAAgBsS,EAAatS,aAAa,CAAER,EAAUpE,EAAMmN,GAAG,CAAG,EAAKnN,EAAMoE,OAAO,EAAI,EAAIqT,EAAOzX,EAAM0X,OAAO,GAElJra,EAAU,CACNqG,MAAOA,EACPkB,cAAeA,EACfvE,EAAG6W,EAAa7W,CAAC,CACjB6D,EAAGgT,EAAahT,CAAC,CACjBsB,MAAOxF,EAAMwF,KAAK,CAClBF,OAAQtF,EAAMsF,MAAM,AACxB,EAEAjF,EAAI,AAACkX,CAAAA,EAAUlX,CAAC,EAAI,CAAA,EAAKzC,EAAMgL,QAAQ,CAAE1E,EAAI,AAACqT,CAAAA,EAAUrT,CAAC,EAAI,CAAA,EAAKtG,EAAMiL,OAAO,CA0C/E,MAvCA2O,CAAAA,EAAMnX,EAAI+D,CAAM,EACN,IACFV,AAAU,UAAVA,EACArG,EAAQqG,KAAK,CAAG,OAGhBrG,EAAQgD,CAAC,CAAG,AAAChD,CAAAA,EAAQgD,CAAC,EAAI,CAAA,EAAKmX,GAIvCA,CAAAA,EAAMnX,EAAIoX,EAAKjS,KAAK,CAAGpB,CAAM,EACnBxG,EAAMqN,SAAS,GACjBvH,AAAU,SAAVA,EACArG,EAAQqG,KAAK,CAAG,QAGhBrG,EAAQgD,CAAC,CAAG,AAAChD,CAAAA,EAAQgD,CAAC,EAAI,CAAA,EAAKzC,EAAMqN,SAAS,CAAGuM,GAIzDA,CAAAA,EAAMtT,EAAIE,CAAM,EACN,IACFQ,AAAkB,WAAlBA,EACAvH,EAAQuH,aAAa,CAAG,MAGxBvH,EAAQ6G,CAAC,CAAG,AAAC7G,CAAAA,EAAQ6G,CAAC,EAAI,CAAA,EAAKsT,GAIvCA,CAAAA,EAAMtT,EAAIuT,EAAKnS,MAAM,CAAGlB,CAAM,EACpBxG,EAAMsN,UAAU,GAClBtG,AAAkB,QAAlBA,EACAvH,EAAQuH,aAAa,CAAG,SAGxBvH,EAAQ6G,CAAC,CAAG,AAAC7G,CAAAA,EAAQ6G,CAAC,EAAI,CAAA,EAAKtG,EAAMsN,UAAU,CAAGsM,GAGnDna,CACX,CAMAwM,YAAY1M,CAAU,CAAEE,CAAO,CAAEoD,CAAK,CAAE,CACpC,KAAK,CAACtD,EAAYE,EAASoD,EAAO,QACtC,CAaAiO,eAAexG,CAAE,CAAEF,CAAE,CAAE,CACnB,KAAK,CAAC0G,eAAexG,EAAIF,EAAI,EACjC,CAOAgB,UAAUd,CAAE,CAAEF,CAAE,CAAE,CACd,IAAMpK,EAAQ,IAAI,CAACT,UAAU,CAACS,KAAK,CAEnCiC,EAAe,IAAI,CAAC1C,UAAU,CAACF,WAAW,CAE1C+S,EAAkBpS,EAAMN,WAAW,CAACyJ,OAAO,CAAC,IAAI,CAAC5J,UAAU,EAAiD8S,EAAe0H,AAA1C/Z,EAAMP,OAAO,CAACC,WAAW,AAAiC,CAAC0S,EAAgB,CAC5J,GAAIpS,EAAMyK,QAAQ,CAAE,CAChB,IAAMD,EAAOF,EACbA,EAAKF,EACLA,EAAKI,CACT,CAEA,IAAI,CAAC/K,OAAO,CAACgD,CAAC,EAAI6H,EAClB,IAAI,CAAC7K,OAAO,CAAC6G,CAAC,EAAI8D,EAElBiI,CAAY,CAAC,IAAI,CAAChB,UAAU,CAAC,CAAC,IAAI,CAACxO,KAAK,CAAC,CAACJ,CAAC,CAAG,IAAI,CAAChD,OAAO,CAACgD,CAAC,CAC5D4P,CAAY,CAAC,IAAI,CAAChB,UAAU,CAAC,CAAC,IAAI,CAACxO,KAAK,CAAC,CAACyD,CAAC,CAAG,IAAI,CAAC7G,OAAO,CAAC6G,CAAC,CAC5DrE,CAAY,CAAC,IAAI,CAACoP,UAAU,CAAC,CAAC,IAAI,CAACxO,KAAK,CAAC,CAACJ,CAAC,CAAG,IAAI,CAAChD,OAAO,CAACgD,CAAC,CAC5DR,CAAY,CAAC,IAAI,CAACoP,UAAU,CAAC,CAAC,IAAI,CAACxO,KAAK,CAAC,CAACyD,CAAC,CAAG,IAAI,CAAC7G,OAAO,CAAC6G,CAAC,AAChE,CACA6F,OAAO+I,CAAM,CAAE,CACX,IAAMzV,EAAU,IAAI,CAACA,OAAO,CAAEmS,EAAQ,IAAI,CAACJ,gBAAgB,CAAC/R,GAAUkH,EAAQlH,EAAQkH,KAAK,CAAEqT,EAAe,IAAI,CAACza,UAAU,CAACS,KAAK,CAACP,OAAO,CAACO,KAAK,CAAEia,EAAkBD,EAAaE,mBAAmB,EAC/LF,EAAahU,eAAe,CAMhC,GALA,IAAI,CAACpG,OAAO,CAAG,IAAI,CAACL,UAAU,CAACS,KAAK,CAACE,QAAQ,CACxCkC,KAAK,CAAC,GAAI,EAAG,MAClB3C,EAAQiH,KAAK,CAAE,KAAK,EAAG,KAAK,EAAGjH,EAAQsH,OAAO,CAAE,KAAK,EAAG,oBACnDlH,IAAI,CAAC+R,GACLnR,GAAG,CAACyU,GACL,CAAC,IAAI,CAAC3V,UAAU,CAACS,KAAK,CAACsJ,UAAU,CAAE,CACnC,GAAI3C,AAAgB,aAAhBA,EAAMG,KAAK,CAAiB,CAC5B,IAAMqT,EAAa,AAACf,GAAkBgB,uBAAuB,CAACjR,OAAO,CAAC1J,EAAQiH,KAAK,EAAI,IACnFjH,AAA4B,SAA5BA,EAAQuG,eAAe,CACvBiU,EACAxa,EAAQuG,eAAe,AAC3BW,CAAAA,EAAMG,KAAK,CAAG,IAAI,CAACvH,UAAU,CAACS,KAAK,CAACE,QAAQ,CAACma,WAAW,CAAC,AAAsB,UAAtB,OAAOF,EAA0BA,EACtF,AAA2B,UAA3B,OAAOF,EAA+BA,EAClC,UACZ,CACA,IAAI,CAACra,OAAO,CACP6J,GAAG,CAAChK,EAAQkH,KAAK,EACjBF,MAAM,CAAChH,EAAQgH,MAAM,CAC9B,CACA,IAAI,CAAC7G,OAAO,CAAC0a,SAAS,CAAG7a,EAAQ6a,SAAS,CAC1C,KAAK,CAACnO,QACV,CACA7M,OAAOqG,CAAS,CAAE,CACd,IAAMlG,EAAU,IAAI,CAACA,OAAO,CAAE4C,EAAO,IAAI,CAACA,IAAI,EAAI5C,EAAQ+Y,MAAM,EAAI/Y,EAAQ4C,IAAI,CAAED,EAAQ,IAAI,CAACxC,OAAO,CAAEkN,EAAQ,IAAI,CAACvK,MAAM,CAAC,EAAE,CAC9H,GAAI,CAACH,EAAO,YACR,IAAI,CAAC9C,MAAM,CAACqG,GAGhBvD,EAAMvC,IAAI,CAAC,CACPwC,KAAMA,EACFmW,GAAO+B,OAAOlY,GAAOyK,EAAO,IAAI,CAACvN,UAAU,CAACS,KAAK,EACjDP,EAAQ4G,SAAS,CAAC5H,IAAI,CAACqO,EAAO,IAAI,CAC1C,GACA,IAAMmC,EAAS,IAAI,CAACA,MAAM,CAACnC,GACrB8E,EAAQ,IAAI,CAACmD,QAAQ,CAAC9F,GACxB2C,GACAxP,EAAMuX,SAAS,CAAG/H,EAClBA,EAAMoH,OAAO,CAAG/J,EAAOU,gBAAgB,CAAClN,CAAC,CACzCmP,EAAMqH,OAAO,CAAGhK,EAAOU,gBAAgB,CAACrJ,CAAC,CACzClE,CAAK,CAACuD,EAAY,UAAY,OAAO,CAACiM,IAGtCxP,EAAMvC,IAAI,CAAC,CACP4C,EAAG,EACH6D,EAAG,KACP,GAEJlE,EAAMkT,MAAM,CAAG,CAAC,CAAC1D,EACjB,KAAK,CAACtS,OAAOqG,EACjB,CAMAsJ,OAEA0B,CAAM,CAAE,CACJ,IAAM1B,EAAS,KAAK,CAACA,OAAO1K,KAAK,CAAC,IAAI,CAAEE,WAAYhC,EAAI,IAAI,CAAChD,OAAO,CAACgD,CAAC,EAAI,EAAG6D,EAAI,IAAI,CAAC7G,OAAO,CAAC6G,CAAC,EAAI,EAKnG,OAJA2I,EAAOU,gBAAgB,CAAClN,CAAC,EAAIA,EAC7BwM,EAAOU,gBAAgB,CAACrJ,CAAC,EAAIA,EAC7B2I,EAAOS,gBAAgB,CAACjN,CAAC,EAAIA,EAC7BwM,EAAOS,gBAAgB,CAACpJ,CAAC,EAAIA,EACtB2I,CACX,CAIA8F,SAAS9F,CAAM,CAAE,CACb,IAAMsG,EAAO,IAAI,CAAC3V,OAAO,CAAEI,EAAQ,IAAI,CAACT,UAAU,CAACS,KAAK,CAAEwP,EAAUxP,EAAMwP,OAAO,CAAE1C,EAAQ,IAAI,CAACvK,MAAM,CAAC,EAAE,CAAEiT,EAAc,IAAI,CAAC/V,OAAO,CAAE+a,EAAyBvL,EAAOU,gBAAgB,CAAE8K,EAAyBxL,EAAOS,gBAAgB,CACrOgL,EAAcC,EAASC,EAAkBC,EAAkBC,EAAWhO,EAAMnK,MAAM,CAAC+C,OAAO,EAC1FmL,AAjrDgDjE,EAirD1BrO,SAAS,CAACwM,YAAY,CAACtM,IAAI,CAACqO,GACtD,GAAIyI,GAAQuF,EAAU,CAClB,GAAM,CAAElT,MAAAA,EAAQ,CAAC,CAAEF,OAAAA,EAAS,CAAC,CAAE,CAAG6N,CAC9BC,CAAAA,EAAYuF,QAAQ,EAAIvL,EACxBkL,EAAelL,EAAQwL,WAAW,CAACvc,IAAI,CAAC,CACpCuB,MAAAA,EACA+a,SAAUnC,GAAuBpD,EAAYuF,QAAQ,CAAE,IACvDE,gBAAiBzL,EAAQyL,eAAe,CACxClS,QAASyG,EAAQzG,OAAO,AAC5B,EAAGnB,EAAOF,EAAQ,CACdwF,MAAOuN,EAAuBhY,CAAC,CAC/B0K,MAAOsN,EAAuBnU,CAAC,CAC/B4U,SAAUpO,EAAMoO,QAAQ,CACxBC,QAASrO,EAAMqO,OAAO,CACtBpC,EAAI0B,EAAuB/S,MAAM,EAC7B+S,EAAuB7S,KAAK,AACpC,GAEK4N,EAAYtJ,UAAU,CAC3BwO,EAAelF,EAAYtJ,UAAU,CAACzN,IAAI,CAAC,IAAI,GAG/Ckc,EAAU,CACNlY,EAAG+X,EAAuB/X,CAAC,CAC3B6D,EAAGkU,EAAuBlU,CAAC,CAC3BsB,MAAO,EACPF,OAAQ,CACZ,EACAgT,EAAetB,GAAkBC,eAAe,CAACZ,GAAyBjD,EAAa,CACnF5N,MAAAA,EACAF,OAAAA,CACJ,GAAIiT,GACA,AAA0B,YAA1B,IAAI,CAAClb,OAAO,CAAC8G,QAAQ,EACrBmU,CAAAA,EAAetB,GAAkBC,eAAe,CAACD,GAAkBM,gBAAgB,CAAC1Z,EAAOuV,EAAMC,EAAakF,GAAeC,EAAO,GAGxInF,EAAY5P,IAAI,GAChBgV,EAAmBF,EAAajY,CAAC,CAAGzC,EAAMgL,QAAQ,CAClD6P,EAAmBH,EAAapU,CAAC,CAAGtG,EAAMiL,OAAO,CACjD6P,EACI9a,EAAM+K,YAAY,CAAC6P,EAAkBC,IACjC7a,EAAM+K,YAAY,CAAC6P,EAAmBhT,EAAOiT,EAAmBnT,GAEhF,CACA,OAAOoT,EAAWJ,EAAe,IACrC,CACJ,CAWAtB,GAAkBzH,QAAQ,CAAG,CACzB3L,gBAAiB,OACjBC,YAAa,SACbE,YAAa,eACb5F,OAAQ,SACR2F,aAAc,IACdM,QAAS,SACb,EAOA4S,GAAkBgB,uBAAuB,CAAG,CAAC,YAAY,AAwCzD,OAAMgB,WAA0B3I,EAM5BxG,YAAY1M,CAAU,CAAEE,CAAO,CAAEoD,CAAK,CAAE,CACpC,KAAK,CAACtD,EAAYE,EAASoD,EAAO,SAMlC,IAAI,CAACyC,IAAI,CAAG,QACZ,IAAI,CAAC8F,SAAS,CAAG,KAAK,CAAC8G,cAC3B,CACA/F,OAAO+I,CAAM,CAAE,CACX,IAAMtD,EAAQ,IAAI,CAACJ,gBAAgB,CAAC,IAAI,CAAC/R,OAAO,EAAGA,EAAU,IAAI,CAACA,OAAO,AACzE,CAAA,IAAI,CAACG,OAAO,CAAG,IAAI,CAACL,UAAU,CAACS,KAAK,CAACE,QAAQ,CACxCmb,KAAK,CAAC5b,EAAQ6b,GAAG,CAAE,EAAG,KAAM7b,EAAQmI,KAAK,CAAEnI,EAAQiI,MAAM,EACzD7H,IAAI,CAAC+R,GACLnR,GAAG,CAACyU,GACT,IAAI,CAACtV,OAAO,CAACgI,KAAK,CAAGnI,EAAQmI,KAAK,CAClC,IAAI,CAAChI,OAAO,CAAC8H,MAAM,CAAGjI,EAAQiI,MAAM,CACpC,KAAK,CAACyE,QACV,CACA7M,OAAOqG,CAAS,CAAE,CACd,GAAI,IAAI,CAAC/F,OAAO,CAAE,CACd,IAAMqP,EAAS,IAAI,CAACA,MAAM,CAAC,IAAI,CAAC1M,MAAM,CAAC,EAAE,EAAGwS,EAAWwG,AA9DGnC,GA8D6B7a,SAAS,CAACwW,QAAQ,CAACtW,IAAI,CAAC,IAAI,CAAEwQ,GACjH8F,EACA,IAAI,CAACnV,OAAO,CAAC+F,EAAY,UAAY,OAAO,CAAC,CACzClD,EAAGsS,EAAStS,CAAC,CACb6D,EAAGyO,EAASzO,CAAC,AACjB,GAGA,IAAI,CAAC1G,OAAO,CAACC,IAAI,CAAC,CACd4C,EAAG,EACH6D,EAAG,IACP,GAEJ,IAAI,CAAC1G,OAAO,CAAC0V,MAAM,CAAGW,CAAAA,CAAQlB,CAClC,CACA,KAAK,CAACzV,OAAOqG,EACjB,CACJ,CAYAyV,GAAkBzJ,QAAQ,CAAG,CACzB/J,MAAO,QACPF,OAAQ,SACRnH,OAAQ,QACZ,EASA,IAAMib,GAAyDve,EAAwD,OAAU,CAACwe,GAAG,CACrI,IAAIC,GAA8Dpe,EAAoBC,CAAC,CAACie,IAmBxF,GAAM,CAAE5c,SAAU+c,EAAiB,CAAEjF,cAAAA,EAAa,CAAE,CAAI/X,IA4GrBid,GAtGnC,MAMI3P,YAAY4P,CAAS,CAAEC,CAAQ,CAAE,CAC7B,IAAI,CAACA,QAAQ,CAAGA,EAChB,IAAI,CAACC,SAAS,CAAG,IAAI,CAACC,oBAAoB,CAACH,GAC3C,IAAI,CAACI,WAAW,CAAG,IAAI,CAACC,cAAc,EAC1C,CAkBAF,qBAAqBH,CAAS,CAAEzV,EAAY,wCAAwC,CAAE,CAClF,OAAOsQ,GAAc,MAAO,CAAEtQ,UAAAA,CAAU,EAAG,KAAK,EAAGyV,EACvD,CAUAK,eAAe9V,EAAY,wBAAwB,CAAE,CACjD,IAAM+V,EAAQ,IAAI,CAAEL,EAAW,IAAI,CAACA,QAAQ,CAEtCG,EAAcvF,GAAc,SAAU,CAAEtQ,UAAAA,CAAU,EAAG,KAAK,EAAG,IAAI,CAAC2V,SAAS,EAgBjF,OAfArF,GAAc,OAAQ,CAClBtQ,UAAW,iBACf,EAAG,CACCgW,gBAAiB,OAAUN,CAAAA,EAASO,KAAK,CAAC,0BACtCP,EAAWA,EAAW,WAAU,EAAK,GAC7C,EAAGG,GACH,CAAC,QAAS,aAAa,CAACvb,OAAO,CAAC,AAAC4b,IAC7BX,GAAkBM,EAAaK,EAAWH,EAAMI,iBAAiB,CAACC,IAAI,CAACL,GAC3E,GAEAR,GAAkBc,SAAU,UAAW,SAAUzb,CAAK,EAC9CA,AAAe,WAAfA,EAAM0b,IAAI,EACVP,EAAMI,iBAAiB,EAE/B,GACON,CACX,CAKAM,mBAAoB,CAChB,IAAI,CAACI,UAAU,EACnB,CAOAC,UAAUC,EAAe,+BAA+B,CAAE,CACtD,IAAMC,EAAW,IAAI,CAACf,SAAS,CAAEgB,EAAmB,IAAI,CAACd,WAAW,AACpE,CAAA,IAAI,CAAC3W,IAAI,CAAG,KAAK,EAEjBwX,EAASE,SAAS,CAAG,AAACtB,KAAkDuB,SAAS,CAE7EH,EAAS1W,SAAS,CAAC+C,OAAO,CAAC0T,IAAiB,IAC5CC,EAASI,SAAS,CAACC,MAAM,CAACN,GAE1BC,EAASM,eAAe,CAAC,UAG7BN,EAASO,WAAW,CAACN,GACrBD,EAASnW,KAAK,CAAC2W,OAAO,CAAG,QACzBR,EAASnW,KAAK,CAACe,MAAM,CAAG,EAC5B,CAIAiV,YAAa,CACT,IAAI,CAACZ,SAAS,CAACpV,KAAK,CAAC2W,OAAO,CAAG,MACnC,CACJ,EAsBM,CAAEzV,IAAK0V,EAAoB,CAAEC,UAAAA,EAAS,CAAE,CAAI7e,IAE5C,CAAE+X,cAAe+G,EAA8B,CAAEze,QAAS0e,EAAwB,CAAEze,SAAU0e,EAAyB,CAAE1V,WAAY2V,EAA2B,CAAE1e,KAAM2e,EAAqB,CAAEC,WAAAA,EAAU,CAAE,CAAInf,IAuGrN,SAASof,GAAclC,CAAS,CAAE7b,CAAK,CAAEge,CAAU,CAAEve,CAAO,CAAEwe,CAAO,CAAEC,CAAM,MAKrEC,EAAgBC,EAJpB,GAAI,CAACpe,EACD,OAEJ,IAAMqe,EAAW,IAAI,CAACA,QAAQ,CAAE5c,EAAO,IAAI,CAACA,IAAI,CAEhDmc,GAA4Bne,EAAS,CAACsU,EAAOuK,KAEzCH,EAAiBH,AAAe,KAAfA,EAAoBA,EAAa,IAAMM,EAASA,EAC7DX,GAA0B5J,KAG1B,CAAC2J,GAAyB3J,IAErB2J,GAAyB3J,IAAU4J,GAA0B5J,CAAK,CAAC,EAAE,GAElE,AAACqK,AADLA,CAAAA,EAAY3c,CAAI,CAAC6c,EAAO,EAAIA,CAAK,EAClBjC,KAAK,CAAC,QACjB4B,EAAQte,IAAI,CAAC,CACT,CAAA,EACAye,EACAvC,EACH,EAELkC,GAActf,IAAI,CAAC,IAAI,CAAEod,EAAW7b,EAAOme,EAAgBpK,EAAOkK,EAAS,CAAA,IAG3EA,EAAQte,IAAI,CAAC,CACT,IAAI,CACJwe,EACA,aACAtC,EACA9H,EACH,EAGb,GACImK,IACAJ,GAAWG,EAAS,AAACrgB,GAAOA,CAAC,CAAC,EAAE,CAACye,KAAK,CAAC,WAAa,GAAK,GACrDmB,IACAS,EAAQM,OAAO,GAEnBN,EAAQvd,OAAO,CAAC,AAAC8d,IACTA,AAAgB,CAAA,IAAhBA,CAAQ,CAAC,EAAE,CACXf,GAA+B,OAAQ,CACnCrX,UAAW,6BACf,EAAG,KAAK,EAAGoY,CAAQ,CAAC,EAAE,EAAEnB,WAAW,CAACE,GAAqBkB,cAAc,CAACD,CAAQ,CAAC,EAAE,IAGnFA,CAAQ,CAAC,EAAE,CAAG,CACVzK,MAAOyK,CAAQ,CAAC,EAAE,CAAC,EAAE,CACrBlZ,KAAMkZ,CAAQ,CAAC,EAAE,CAAC,EAAE,AACxB,EACAH,EAAS9Z,KAAK,CAACia,CAAQ,CAAC,EAAE,CAAEA,EAASE,MAAM,CAAC,IAEpD,GAER,CA2BA,GAAM,CAAE7W,IAAK8W,EAAmB,CAAE,CAAIhgB,IAEhC,CAAEigB,YAAAA,EAAW,CAAE,CAAIpS,IAEnB,CAAE5N,SAAUigB,EAAwB,CAAEnI,cAAeoI,EAA6B,CAAEtZ,QAASuZ,EAAuB,CAAE/f,QAASggB,EAAuB,CAAE/f,SAAUggB,EAAwB,CAAEhX,WAAYiX,EAA0B,CAAEpB,WAAYqB,EAA0B,CAAE,CAAIxgB,GAYlRzB,EADOA,EAGRA,GAAuBA,CAAAA,EAAqB,CAAC,CAAA,EAF1B,CAACA,CAAkB,CAAC,mBAAmB,CAAG,EAAE,CAAG,mBACjEA,CAAkB,CAACA,CAAkB,CAAC,iBAAiB,CAAG,EAAE,CAAG,iBAMnE,IAAMkiB,GAAqB,CACvB,wBAAyB,CAAC,WAAY,YAAa,YAAY,CAC/D,yBAA0B,CAAC,MAAO,MAAO,OAAQ,OAAQ,MAAM,AACnE,EAcA,SAASC,GAAiBtD,CAAS,EAE/B,IAAMuD,EAASR,GAA8B,MAAO,CAChD1Y,UAAW,0BACf,EAAG,KAAK,EAAG2V,GAELwD,EAAST,GAA8B,MAAO,CAChD1Y,UAAW,0BACf,EAAG,KAAK,EAAG2V,GAKX,OAHA+C,GAA8B,MAAO,CACjC1Y,UAAW,kCACf,EAAG,KAAK,EAAGmZ,GACJ,CACHD,OAAQA,EACRC,OAAQA,CACZ,CACJ,CAgDA,SAASC,GAA8Bxf,CAAK,CAAE2C,CAAM,CAAE8c,CAAU,CAAEC,CAAa,EAC3E,IAAMC,EAAShd,EAAOid,MAAM,EAAIjd,EAAOlD,OAAO,CAACmgB,MAAM,AAErDF,CAAAA,EAAc1C,SAAS,CAAG,AAACtB,KAAkDuB,SAAS,CAEtF6B,GAA8B,KAAM,CAChC1Y,UAAW,4BACf,EAAG,KAAK,EAAGsZ,GAAerC,WAAW,CAACsB,GAAoBF,cAAc,CAACoB,GAAYld,EAAQ8c,GAAYK,iBAAiB,GAE1HhB,GAA8B,QAAS,CACnCxZ,KAAM,SACNya,KAAM,mBAAqBN,EAC3B1L,MAAO0L,CACX,EAAG,KAAK,EAAGC,GAEXM,GAAcvhB,IAAI,CAAC,IAAI,CAAEghB,EAAY,SAAUzf,EAAO0f,EAAe/c,EAAQA,EAAOsd,YAAY,EAAItd,EAAOsd,YAAY,CAACxgB,OAAO,CAACuE,EAAE,EAC9H2b,EAAOO,cAAc,EACrBF,GAAcvhB,IAAI,CAAC,IAAI,CAAEghB,EAAY,SAAUzf,EAAO0f,EAAe/c,EAAQA,EAAOsd,YAAY,EAAIN,EAAOO,cAAc,EAG7HC,GAAe1hB,IAAI,CAAC,IAAI,CAAEuB,EAAO,SAAU2f,EAAQF,EAAYC,EACnE,CAwBA,SAASU,GAAiBpgB,CAAK,CAAE6b,CAAS,CAAEwE,CAAQ,CAAEC,CAAM,EAIxD,SAASC,EAAgB5d,CAAM,CAAE6d,CAAa,EAC1C,IAAMjV,EAASmU,EAAc1B,UAAU,CAClC7K,QAAQ,CAAC,EAAE,CAChBqM,GAA8B/gB,IAAI,CAAC0d,EAAOnc,EAAO2C,EAAQ6d,EAAed,GACpEnU,GACAA,CAAAA,EAAO5E,KAAK,CAAC2W,OAAO,CAAG,OAAM,EAG7BmD,GAAU9d,EAAOlD,OAAO,EACxBqf,GAA8B,QAAS,CACnCxZ,KAAM,SACNya,KAAM,iBAAmBS,EACzBzM,MAAOpR,EAAOlD,OAAO,CAACuE,EAAE,AAC5B,EAAG,KAAK,EAAG0b,GAAegB,YAAY,CAAC,4BAA6B/d,EAAOlD,OAAO,CAACuE,EAAE,CAE7F,CACA,IAAMmY,EAAQ,IAAI,CAAE1a,EAAO0a,EAAM1a,IAAI,CAAE6d,EAASzD,EAAU8E,gBAAgB,CAAC,4BAA4B,CAAC,EAAE,CAAEpB,EAAS1D,EAAU8E,gBAAgB,CAAC,4BAA4B,CAAC,EAAE,CAAEF,EAASJ,AAAa,SAAbA,EAAqB1d,EAAU8d,EACrNzgB,EAAM2C,MAAM,CACZ3C,EAAMP,OAAO,CAACmhB,WAAW,EAAI,CAAC,EAElC,GAAI,CAAC5gB,GAAS2C,EACV,OAEJ,IAAI4S,EAAMsL,EAAsB,EAAE,AAE9B,CAACJ,GAAWzB,GAAwBrc,GAI/Bqc,GAAwBrc,IAC7Bke,CAAAA,EAAsBC,GAAkBriB,IAAI,CAAC,IAAI,CAAEkE,EAAM,EAHzDke,EAAsBE,GAAatiB,IAAI,CAAC,IAAI,CAAEkE,EAAQ2d,GAM1DnB,GAA2B0B,EAAqB,CAACjjB,EAAGojB,KAChD,IAAMC,EAAcrjB,EAAEkiB,iBAAiB,CAACoB,WAAW,GAAIC,EAAcH,EAAElB,iBAAiB,CAACoB,WAAW,GACpG,OAAO,AAACD,EAAcE,EAClB,GAAK,CAACF,CAAAA,EAAcE,CAAU,CACtC,GAGI7B,EAAOnM,QAAQ,CAAC,EAAE,EAClBmM,EAAOnM,QAAQ,CAAC,EAAE,CAACgK,MAAM,GAG7B,IAAMiE,EAAgBtC,GAA8B,KAAM,CACtD1Y,UAAW,2BACf,EAAG,KAAK,EAAGkZ,GACLI,EAAgBH,EAAOoB,gBAAgB,CAAC,oCAAoC,CAAC,EAAE,CAiBrF,GAhBAE,EAAoBngB,OAAO,CAAC,AAAC2gB,IACzB,GAAM,CAAEvB,kBAAAA,CAAiB,CAAEU,cAAAA,CAAa,CAAE7d,OAAAA,CAAM,CAAE,CAAG0e,EACrD9L,EAAOuJ,GAA8B,KAAM,CACvC1Y,UAAW,2BACf,EAAG,KAAK,EAAGgb,GACX,IAAME,EAAMxC,GAA8B,SAAU,CAChD1Y,UAAW,iCACXmb,YAAazB,CACjB,EAAG,KAAK,EAAGvK,GACX,CAAC,QAAS,aAAa,CAAC7U,OAAO,CAAC,AAAC4b,IAC7BuC,GAAyByC,EAAKhF,EAAW,WACrCiE,EAAgB5d,EAAQ6d,EAC5B,EACJ,EACJ,GAEIK,EAAoBjf,MAAM,CAAG,EAAG,CAChC,GAAM,CAAEe,OAAAA,CAAM,CAAE6d,cAAAA,CAAa,CAAE,CAAGK,CAAmB,CAAC,EAAE,CACxDN,EAAgB5d,EAAQ6d,EAC5B,MACUC,IACN/E,KAAiD8F,cAAc,CAAC9B,EAAc1B,UAAU,CAAC7K,QAAQ,CAAC,EAAE,CAAE1R,EAAKggB,aAAa,EAAI,IAC5H/B,EAAc1B,UAAU,CAAC7K,QAAQ,CAAC,EAAE,CAC/BxM,KAAK,CAAC2W,OAAO,CAAG,OAE7B,CAiBA,SAAS6C,GAAengB,CAAK,CAAEge,CAAU,CAAE2B,CAAM,CAAEra,CAAI,CAAEuW,CAAS,EAC9D,GAAI,CAAC7b,EACD,OAEJ,IAAMqe,EAAW,IAAI,CAACA,QAAQ,CAC9Ba,GAA2BS,EAAQ,CAAC5L,EAAO2N,KAEvC,IAAMvD,EAAiBH,EAAa,IAAM0D,EAC1C,GAAI3C,GAAwBhL,IACxBoK,EASA,GARIc,GAAyBlL,KAGzBsK,EAAS5f,IAAI,CAAC,IAAI,CAAE0f,EAAgB7Y,EAAMuW,EAAW,CAAC,GACtDsE,GAAe1hB,IAAI,CAAC,IAAI,CAAEuB,EAAOme,EAAgBpK,EAAOzO,EAAMuW,IAI9DsC,KAAkBjhB,EAAoB,CAEtC,IAAMykB,EAAYC,GAAanjB,IAAI,CAAC,IAAI,CAAE6G,EAAM6Y,EAAgBtC,GAEhEgG,GAAoBpjB,IAAI,CAAC,IAAI,CAAEuB,EAAOge,EAAY2D,EAAWrc,EAAMoc,EAAW3N,EAClF,KAGAoK,AAAmB,0BAAnBA,GACKa,GAAwBjL,IAEzBsK,EAAS5f,IAAI,CAAC,IAAI,CAAE0f,EAAgB7Y,EAAMuW,EAAW,CACjD9H,MAAOA,EACPzO,KAAM,QACV,EAIZ,EACJ,CAYA,SAASwc,GAAa9hB,CAAK,CAAE6b,CAAS,EAClC,IAAMM,EAAQ,IAAI,CAAEmD,EAASzD,EAAU8E,gBAAgB,CAAC,4BAA4B,CAAC,EAAE,CAKpFoB,EAAkB,IAAI,CAACtgB,IAAI,CAACugB,WAAW,CAAEC,EAAenD,GAA8B,MAAO,CAC5F1Y,UAAW,0BACf,EAAG,KAAK,EAAGkZ,GACL4C,EAAoB,SAAUC,CAAS,EAEzC/B,GAAiB3hB,IAAI,CAAC0d,EAAOnc,EAAOmc,EAAMJ,SAAS,CAAE,MAAOoG,EAChE,EAEMC,EAAQ,IAAI,CAAC/D,QAAQ,CAbwE,mBAa9D,QAAS4D,EAb2F,CACrIlO,MAAO,GACPzO,KAAM,OACN+c,QAAS,oBACTC,eAAgB,0CACpB,GAQ8E/W,EAASuT,GAA8B,IAAK,CACtHyC,YAAaQ,CACjB,EAAG,KAAK,EAAGE,GACXG,EAAMlF,SAAS,CAACzc,GAAG,CAAC,sCACpB8K,EAAO2R,SAAS,CAACzc,GAAG,CAAC,uBAErBoe,GAAyBuD,EAAO,QAAS,WACrCF,EAAkB,IAAI,CAACnO,KAAK,EAExB,IAAI,CAACA,KAAK,CAACnS,MAAM,CACjB2J,EAAO5E,KAAK,CAAC2W,OAAO,CAAG,eAGvB/R,EAAO5E,KAAK,CAAC2W,OAAO,CAAG,MAE/B,GAEA,CAAC,QAAS,aAAa,CAAC5c,OAAO,CAAC,AAAC4b,IAC7BuC,GAAyBtT,EAAQ+Q,EAAW,WAExC8F,EAAMrO,KAAK,CAAG,GACdmO,EAAkB,IAElB3W,EAAO5E,KAAK,CAAC2W,OAAO,CAAG,MAC3B,EACJ,EACJ,CAeA,SAASsE,GAAapB,CAAa,CAAE+B,CAAU,CAAE1G,CAAS,EACtD,IAAM2G,EAAkBD,EAAWE,KAAK,CAAC,KAAMC,EAAYF,CAAe,CAACA,EAAgB5gB,MAAM,CAAG,EAAE,CAAE+gB,EAAa,cAAgBJ,EAAa,SAAW/B,EAAe/e,EAAO,IAAI,CAACA,IAAI,CAE5Lqd,GAA8B,QAAS,CACnCuD,QAASM,CACb,EAAG,KAAM9G,GAAWwB,WAAW,CAACsB,GAAoBF,cAAc,CAAChd,CAAI,CAACihB,EAAU,EAAIH,IAEtF,IAAMZ,EAAY7C,GAA8B,SAAU,CACtDiB,KAAM4C,EACNvc,UAAW,yBACXpC,GAAI,qBAAuBue,CAC/B,EAAG,KAAM1G,GAET,OADA8F,EAAUjB,YAAY,CAAC,KAAM,qBAAuB6B,GAC7CZ,CACX,CAwBA,SAASE,GAAoB7hB,CAAK,CAAEuiB,CAAU,CAAEZ,CAAS,CAAEnB,CAAa,CAAEoC,CAAa,CAAEC,CAAc,CAAEC,CAAa,EAE9GP,AAAe,WAAfA,GAA2BA,AAAe,WAAfA,EAE3BviB,EAAM2C,MAAM,CAACjC,OAAO,CAAC,AAACiC,IAClB,IAAMogB,EAAgBpgB,EAAOlD,OAAO,CAAEujB,EAAaD,EAAchD,IAAI,EACjEgD,EAAcnD,MAAM,CACpBjd,EAAOod,IAAI,CACXgD,EAAc/e,EAAE,EAAI,EACC,CAAA,gCAArB+e,EAAc/e,EAAE,EAChB+e,EAAc/e,EAAE,GAAM8e,CAAAA,GAClBA,EAAcrjB,OAAO,EACrBqjB,EAAcrjB,OAAO,CAACuE,EAAE,AAAD,IACvB,AAAC+a,GAAwB8D,IACzBN,AAAe,WAAfA,GACA5f,AAAgB,WAAhBA,EAAO2C,IAAI,EACXud,CAAAA,EAAiBE,EAAc/e,EAAE,AAAD,EAEpC8a,GAA8B,SAAU,CACpC/K,MAAOgP,EAAc/e,EAAE,AAC3B,EAAG,KAAK,EAAG2d,GAAWtE,WAAW,CAACsB,GAAoBF,cAAc,CAACuE,IAE7E,GAEKxC,GAAiBoC,GAGtBK,AAD2E7D,EAAkB,CAAzEwD,EAAgB,IAAMpC,EAAgE,CAC1F9f,OAAO,CAAC,AAAC8H,IACrBsW,GAA8B,SAAU,CACpC/K,MAAOvL,CACX,EAAG,KAAK,EAAGmZ,GAAWtE,WAAW,CAACsB,GAAoBF,cAAc,CAACjW,GACzE,GAGAuW,GAAwB8D,IACxBlB,CAAAA,EAAU5N,KAAK,CAAG8O,CAAa,CAEvC,CAiBA,SAAS9B,GAAape,CAAM,CAAE2d,CAAM,EAChC,IAII4C,EAJgBzhB,EAAO0a,AAAb,IAAI,CAAenc,KAAK,EAAImc,AAA5B,IAAI,CAA8Bnc,KAAK,CAACP,OAAO,CAACgC,IAAI,CAAE0hB,EAAmB1hB,GACnFA,EAAK2hB,UAAU,EACf3hB,EAAK2hB,UAAU,CAACjH,KAAK,EACrB1a,EAAK2hB,UAAU,CAACjH,KAAK,CAACgH,gBAAgB,CAAEtC,EAAsB,EAAE,CAkCpE,OAhCA3B,GAA2Bvc,EAAQ,CAACA,EAAQoR,KACxC,IAAMgP,EAAgBpgB,GAAUA,EAAOlD,OAAO,CAE9C,GAAIkD,EAAOid,MAAM,EAAImD,GACjBA,EAAcnD,MAAM,CAAE,CACtB,GAAM,CAAEE,kBAAAA,CAAiB,CAAEU,cAAAA,CAAa,CAAE,CAAGX,GAAYld,EAAQoR,GACjE,GAAIuM,EAAQ,CAGR,IAAM+C,EAAQ,AAAIC,OADEhD,EAAOiD,OAAO,CAAC,sBAAuB,QACpB,KAAMC,EAAQL,GAChDA,CAAgB,CAAC3C,EAAc,EAC/B2C,CAAgB,CAAC3C,EAAc,CAACxe,IAAI,CAAC,MAAQ,GAC7C8d,CAAAA,EAAkBzD,KAAK,CAACgH,IACxBG,EAAMnH,KAAK,CAACgH,EAAK,IACjBH,EAAiB,CACbpD,kBAAAA,EACAU,cAAAA,EACA7d,OAAQA,CACZ,EACAke,EAAoBlhB,IAAI,CAACujB,GAEjC,MAEIA,EAAiB,CACbpD,kBAAAA,EACAU,cAAAA,EACA7d,OAAQA,CACZ,EACAke,EAAoBlhB,IAAI,CAACujB,EAEjC,CACJ,GACOrC,CACX,CAYA,SAASC,GAAkBne,CAAM,EAC7B,IAAMke,EAAsB,EAAE,CAW9B,OATAle,EAAOjC,OAAO,CAAC,AAACiC,IACRA,EAAO8gB,EAAE,CAAC,QACV5C,EAAoBlhB,IAAI,CAAC,CACrBmgB,kBAAmBnd,EAAOod,IAAI,CAC9BS,cAAe7d,EAAO2C,IAAI,CAC1B3C,OAAQA,CACZ,EAER,GACOke,CACX,CA+BA,SAAShB,GAAYld,CAAM,CAAE6d,CAAa,EACtC,IAAM/gB,EAAUkD,EAAOlD,OAAO,CAE1BujB,EAAa,AAACpE,EAAW,CAAC4B,EAAc,EACxC5B,EAAW,CAAC4B,EAAc,CAACjiB,SAAS,CAACmlB,QAAQ,EAC7ClD,EAAcmD,WAAW,GAAIlE,EAAae,EAM9C,OAJI/gB,GAAWA,EAAQ6F,IAAI,GACvBma,EAAa9c,EAAOlD,OAAO,CAAC6F,IAAI,CAChC0d,EAAargB,EAAOod,IAAI,EAErB,CACHD,kBAAmBkD,EACnBxC,cAAef,CACnB,CACJ,CAsBA,SAASO,GAAcQ,CAAa,CAAE+B,CAAU,CAAEviB,CAAK,CAAE6b,CAAS,CAAEiH,CAAa,CAAED,CAAc,EAG7F,GAAI,CAAC7iB,EACD,OAGJ,IAAM2hB,EAAYC,GAAanjB,IAAI,CANrB,IAAI,CAMyB+hB,EAAe+B,EAAY1G,GAEtEgG,GAAoBpjB,IAAI,CARV,IAAI,CAQcuB,EAAOuiB,EAAYZ,EAAW,KAAK,EAAG,KAAK,EAAG,KAAK,EAAGmB,GAElF/D,GAAwB8D,IACxBlB,CAAAA,EAAU5N,KAAK,CAAG8O,CAAa,CAEvC,CA0BA,GAAM,CAAEhb,IAAK+b,EAAa,CAAE,CAAIjlB,IAE1B,CAAEC,SAAUilB,EAAkB,CAAEnN,cAAeoN,EAAuB,CAAE,CAAInlB,IAWlF,SAASolB,KAEL,OAAOD,GAAwB,MAAO,CAElC1d,UAAW,sDACf,EAAG,KAAK,EAJS,IAAI,CAAC2V,SAAS,CAKnC,CAWA,SAASiI,GAAYC,CAAO,CAAEC,CAAU,EACpC,IAAMpH,EAAW,IAAI,CAACf,SAAS,CAAEta,EAAO,IAAI,CAACA,IAAI,CAC7C2E,EAAY,qBACZ8d,AAAe,CAAA,IAAfA,GACA9d,CAAAA,GAAa,0BAAyB,EAG1C,IAAM+d,EAAWL,GAAwB,SAAU,CAC/C1d,UAAAA,CACJ,EAAG,KAAK,EAAG0W,GAGX,OAFAqH,EAAS9G,WAAW,CAACuG,GAAcnF,cAAc,CAAChd,CAAI,CAACwiB,EAAU,SAAS,EAAIA,IAC9EE,EAASzD,YAAY,CAAC,2BAA4BuD,GAC3CE,CACX,CAKA,SAASC,KACL,IAAMtH,EAAW,IAAI,CAACf,SAAS,CAAEsI,EAAOvH,EACnC6D,gBAAgB,CAAC,wBAAyB2D,EAAcxH,EACxD6D,gBAAgB,CAAC,gCACtB,IAAK,IAAI/f,EAAI,EAAGA,EAAIyjB,EAAKziB,MAAM,CAAEhB,IAC7ByjB,CAAI,CAACzjB,EAAE,CAACsc,SAAS,CAACC,MAAM,CAAC,8BACzBmH,CAAW,CAAC1jB,EAAE,CAACsc,SAAS,CAACC,MAAM,CAAC,2BAExC,CA4BA,SAASoH,GAAUC,CAAG,CAAE3hB,CAAK,EACzB,IAAM4hB,EAAU,IAAI,CAAC1I,SAAS,CACzB4E,gBAAgB,CAAC,+BACtB6D,CAAAA,EAAIpe,SAAS,EAAI,8BACjBqe,CAAO,CAAC5hB,EAAM,CAACuD,SAAS,EAAI,2BAChC,CAOA,SAASse,GAAWR,CAAU,EAC1B,IAAM/H,EAAQ,IAAI,CAClBkI,AADsDvH,AAAvB,IAAI,CAACf,SAAS,CAAkB4E,gBAAgB,CAAC,wBAC3EjgB,OAAO,CAAC,CAAC8jB,EAAK5jB,KACXsjB,CAAAA,AAAe,IAAfA,GACAM,AAAiD,SAAjDA,EAAI5O,YAAY,CAAC,2BAAqC,GAG1D,CAAC,QAAS,aAAa,CAAClV,OAAO,CAAC,AAAC4b,IAC7BuH,GAAmBW,EAAKlI,EAAW,WAE/B8H,GAAY3lB,IAAI,CAAC0d,GACjBoI,GAAU9lB,IAAI,CAAC0d,EAAO,IAAI,CAAEvb,EAChC,EACJ,EACJ,EACJ,CA0BA,GAAM,CAAEiH,IAAK8c,EAAS,CAAE,CAAIhmB,IAEtB,CAAEiP,WAAAA,EAAU,CAAE,CAAIjP,IAKlB,CAAEC,SAAUgmB,EAAc,CAAElO,cAAemO,EAAmB,CAAEvR,OAAQwR,EAAY,CAAE/lB,UAAWgmB,EAAe,CAAE7lB,KAAM8lB,EAAU,CAAE,CAAIrmB,GA0D9I,OAAMsmB,WAAcrJ,GAMhB3P,YAAY4P,CAAS,CAAEC,CAAQ,CAAE9b,CAAK,CAAE,CACpC,KAAK,CAAC6b,EAAWC,GACjB,IAAI,CAAC9b,KAAK,CAAGA,EACb,IAAI,CAACyB,IAAI,CAAG,AAACmM,CAAAA,KAAanM,IAAI,CAAC2hB,UAAU,EAAI,CAAC,CAAA,EAAGjH,KAAK,EAAI,CAAC,EAC3DyI,GAAe,IAAI,CAAC7I,SAAS,CAAE,YAAa,KACxC,IAAMmJ,EAAmBllB,GACrBA,EAAMmlB,kBAAkB,EACxBnlB,EAAMmlB,kBAAkB,CAACD,gBAAgB,CAC7C,GAAIA,EAAkB,CAClBA,EAAiBpc,WAAW,CAAG,CAAA,EAC/B,IAAMsc,EAASR,GAAeD,GAAW,QAAS,KAC9CU,WAAW,KACPH,EAAiBpc,WAAW,CAAG,CAAA,CACnC,EAAG,GACHsc,GACJ,EACJ,CACJ,EACJ,CA0BA/G,SAASC,CAAM,CAAEkC,CAAa,CAAE3E,CAAS,CAAEyJ,CAAe,CAAE,CACxD,IAAM9C,EAAkBlE,EAAOmE,KAAK,CAAC,KAAMF,EAAaC,CAAe,CAACA,EAAgB5gB,MAAM,CAAG,EAAE,CAAEH,EAAO,IAAI,CAACA,IAAI,CAAE8jB,EAAY,cAAgB/E,EAAgB,IAAMwE,GAAWM,EAAgBjD,OAAO,CAAEE,EACzM,CAACA,EAAWlG,KAAK,CAAC,UAElBwI,GAAoB,QAAS,CACzBxC,QAASkD,EACTnf,UAAWkf,EAAgBhD,cAAc,AAC7C,EAAG,KAAK,EAAGzG,GAAWwB,WAAW,CAACsH,GAAUlG,cAAc,CAAChd,CAAI,CAAC8gB,EAAW,EAAIA,IAGnF,IAAMH,EAAQyC,GAAoB,QAAS,CACvC9E,KAAMwF,EACNxR,MAAOuR,EAAgBvR,KAAK,CAC5BzO,KAAMggB,EAAgBhgB,IAAI,CAC1Bc,UAAW,wBACf,EAAG,KAAK,EAAGyV,GAEX,OADAuG,EAAM1B,YAAY,CAAC,uBAAwBpC,GACpC8D,CACX,CACA7F,mBAAoB,CAChB,GAAI,IAAI,CAACvc,KAAK,CAAE,CACZ,IAAMmlB,EAAqB,IAAI,CAACnlB,KAAK,CAACmlB,kBAAkB,CACxDJ,GAAgBI,EAAoB,cAChCA,GACAA,EAAmBK,qBAAqB,EACxCT,GAAgBI,EAAoB,iBAAkB,CAAE5Z,OAAQ4Z,EAAmBK,qBAAqB,AAAC,EAEjH,MAEI,KAAK,CAACjJ,mBAEd,CAiBAkJ,UAAU5J,CAAS,CAAEzZ,CAAK,CAAEkD,CAAI,CAAEogB,CAAS,CAAEC,CAAQ,CAAE,CACnD,IAAMpa,EAASsZ,GAAoB,SAAU,KAAK,EAAG,KAAK,EAAGhJ,GAU7D,OATAtQ,EAAO8R,WAAW,CAACsH,GAAUlG,cAAc,CAACrc,IACxCujB,GACA,CAAC,QAAS,aAAa,CAACjlB,OAAO,CAAC,AAAC4b,IAC7BsI,GAAerZ,EAAQ+Q,EAAW,KAC9B,IAAI,CAACK,UAAU,GACRgJ,EAASC,AAlJpC,SAAmB/J,CAAS,CAAEvW,CAAI,EAC9B,IAAMugB,EAAY7iB,MAAMzE,SAAS,CAACiG,KAAK,CAAC/F,IAAI,CAACod,EAAU8E,gBAAgB,CAAC,UAAWmF,EAAa9iB,MAAMzE,SAAS,CAACiG,KAAK,CAAC/F,IAAI,CAACod,EAAU8E,gBAAgB,CAAC,WAAsIoF,EAAWlK,EAAU8E,gBAAgB,CAAhJ,6CAA8J,CAAC,EAAE,CAAEqF,EAAWnK,EAAU8E,gBAAgB,CAA3I,6CAAyJ,CAAC,EAAE,CACpYsF,EAAe,CACjBC,WAAY5gB,EACZygB,SAAUA,GAAYA,EAASnQ,YAAY,CAAC,UAAY,GACxD+J,OAAQ,CAAC,CACb,EA4BA,OA3BAkG,EAAUnlB,OAAO,CAAC,AAAC0hB,IACf,IAAM+D,EAAQ/D,EAAMxM,YAAY,CAAC,wBAAoCwM,EAAMxM,YAAY,CAAC,6BAGpFqQ,EAAaG,QAAQ,CAAGhE,EAAMrO,KAAK,CAE9BoS,EACLF,EAAatG,MAAM,CAACwG,EAAM,CAAG/D,EAAMrO,KAAK,CAIxCkS,EAAa3gB,IAAI,CAAG8c,EAAMrO,KAAK,AAEvC,GACA+R,EAAWplB,OAAO,CAAC,AAAC2lB,IAChB,IAAMriB,EAAKqiB,EAAOriB,EAAE,CAEpB,GAAIA,AAAO,6BAAPA,GACAA,AAAO,6BAAPA,EAAmC,CACnC,IAAMsiB,EAAYtiB,EAAGye,KAAK,CAAC,qBAAqB,CAAC,EAAE,AACnDwD,CAAAA,EAAatG,MAAM,CAAC2G,EAAU,CAAGD,EAAOtS,KAAK,AACjD,CACJ,GACIiS,GACAC,CAAAA,EAAatG,MAAM,CAAC,wBAAwB,CAAGqG,EAC1CpQ,YAAY,CAAC,UAAY,EAAC,EAE5BqQ,CACX,EA+G8CP,EAAWpgB,KAE7C,GAEGiG,CACX,CASAgb,SAASjhB,CAAI,CAAEtF,CAAK,CAAEP,CAAO,CAAEkmB,CAAQ,CAAE,CAChC3lB,IAIL,IAAI,CAAC4c,SAAS,GAEVtX,AAAS,eAATA,GACA,IAAI,CAACkhB,UAAU,CAACC,OAAO,CAAChoB,IAAI,CAAC,IAAI,CAAEuB,EAAOP,EAASkmB,GAGnDrgB,AAAS,uBAATA,GACA,IAAI,CAAC5F,WAAW,CAACgnB,UAAU,CAACjoB,IAAI,CAAC,IAAI,CAAEuB,EAAOP,EAASkmB,GAGvDrgB,AAAS,oBAATA,GACA,IAAI,CAAC5F,WAAW,CAAC+mB,OAAO,CAAChoB,IAAI,CAAC,IAAI,CAAEuB,EAAOP,EAASkmB,GAGpDrgB,AAAS,SAATA,GACA,IAAI,CAAC5F,WAAW,CAAC+mB,OAAO,CAAChoB,IAAI,CAAC,IAAI,CAAEuB,EAAOP,EAASkmB,EAAU,CAAA,GAElE,IAAI,CAACrgB,IAAI,CAAGA,EAEZ,IAAI,CAACyW,SAAS,CAACpV,KAAK,CAACe,MAAM,CAAG,IAAI,CAACqU,SAAS,CAAC4K,YAAY,CAAG,KAChE,CACJ,CACA7B,GAAaG,GAAM1mB,SAAS,CAAE,CAC1BmB,YAt9BqB,CACrB+mB,QAnJJ,SAAiBzmB,CAAK,CAAEP,CAAO,CAAEkmB,CAAQ,CAAEiB,CAAM,EAC7C,GAAI,CAAC5mB,EACD,OAEJ,IAAM8c,EAAW,IAAI,CAACf,SAAS,CAAEta,EAAO,IAAI,CAACA,IAAI,CAE7C6d,EAAS7B,GAA+B,KAAM,CAC9CrX,UAAW,6BACf,EAAG,KAAK,EAAG0W,GACXwC,EAAOjC,WAAW,CAACE,GAAqBkB,cAAc,CAAChd,CAAI,CAAChC,EAAQonB,OAAO,CAAC,EAAIpnB,EAAQonB,OAAO,EAAI,KAEnGvH,EAAS7B,GAA+B,MAAO,CAC3CrX,UAAY,oDAChB,EAAG,KAAK,EAAG0W,GACX,IAAMgK,EAAYrJ,GAA+B,MAAO,CACpDrX,UAAW,6BACf,EAAG,KAAK,EAAG0W,GACXiB,GAActf,IAAI,CAAC,IAAI,CAAE6gB,EAAQtf,EAAO,GAAIP,EAAS,EAAE,CAAE,CAAA,GACzD,IAAI,CAACgmB,SAAS,CAACqB,EAAWF,EACrBnlB,EAAKgkB,SAAS,EAAI,MAClBhkB,EAAKslB,UAAU,EAAI,OAASH,EAAS,MAAQ,OAAQ9J,EAAU6I,EACxE,EA+HIe,WAtHJ,SAAoB1mB,CAAK,CAAEP,CAAO,CAAEkmB,CAAQ,EACxC,IAAMlkB,EAAO,IAAI,CAACA,IAAI,CAAEqb,EAAW,IAAI,CAACf,SAAS,CAAEwK,EAAW,IAAI,CAACA,QAAQ,CAAE1J,EAAe,+BAExFC,AAA6C,CAAA,KAA7CA,EAAS1W,SAAS,CAAC+C,OAAO,CAAC0T,IAC3BC,CAAAA,EAAS1W,SAAS,EAAI,IAAMyW,EAAe,2BAA0B,EAGrE7c,GACA8c,CAAAA,EAASnW,KAAK,CAACqgB,GAAG,CAAGhnB,EAAMiL,OAAO,CAAG,GAAK,IAAG,EAGjD,IAAM7I,EAAQqb,GAA+B,IAAK,CAC9CrX,UAAW,6BACf,EAAG,KAAK,EAAG0W,GACX1a,EAAMse,YAAY,CAAC,aAAc,mBACjCte,EAAMib,WAAW,CAACE,GAAqBkB,cAAc,CAACZ,GAEtDpc,CAAI,CAAChC,EAAQonB,OAAO,CAAC,EAAIpnB,EAAQonB,OAAO,CAExCpnB,EAAQ4L,MAAM,EAAI5L,EAAQ4L,MAAM,CAAC,EAAE,CAAC/F,IAAI,CAAE,MAE1C,IAAIiG,EAAS,IAAI,CAACka,SAAS,CAAC3I,EAAUrb,EAAKwlB,UAAU,EAAI,OAAQ,OAAQnK,EAAU,KAC/EyJ,EAAS9nB,IAAI,CAAC,IAAI,CAAE,kBAAmBuB,EAAOP,EAASkmB,EAC3D,EACApa,CAAAA,EAAOnF,SAAS,EAAI,qCACpBqX,GAA+B,OAAQ,CACnCrX,UAAW,iBACf,EAAG,CACCgW,gBAAiB,CAAC,IAAI,EAAE,IAAI,CAACN,QAAQ,CAAC,SAAS,CAAC,AACpD,EAAGvQ,GACHA,EAAS,IAAI,CAACka,SAAS,CAAC3I,EAAUrb,EAAKylB,YAAY,EAAI,SAAU,SAAUpK,EAAU6I,GACrFpa,EAAOnF,SAAS,EAAI,uCACpBqX,GAA+B,OAAQ,CACnCrX,UAAW,iBACf,EAAG,CACCgW,gBAAiB,CAAC,IAAI,EAAE,IAAI,CAACN,QAAQ,CAAC,YAAY,CAAC,AACvD,EAAGvQ,EACP,CAkFA,EAo9BIib,WAlXoB,CACpBC,QAlhBJ,SAAiCzmB,CAAK,CAAEmnB,CAAQ,CAAExB,CAAQ,EACtD,IACIyB,EADE3lB,EAAO,IAAI,CAACA,IAAI,CAEtB,GAAI,CAACzB,EACD,OAGJ,IAAI,CAACqkB,IAAI,CAAC/S,IAAI,CAAC7S,IAAI,CAAC,IAAI,CAAEuB,GAE1B,IAAMqnB,EAAiB,IAAI,CAACtL,SAAS,CAChC4E,gBAAgB,CAAC,gCAEtBtB,GAAiBgI,CAAc,CAAC,EAAE,EAClCvF,GAAarjB,IAAI,CAAC,IAAI,CAAEuB,EAAOqnB,CAAc,CAAC,EAAE,EAChDjH,GAAiB3hB,IAAI,CAAC,IAAI,CAAEuB,EAAOqnB,CAAc,CAAC,EAAE,CAAE,OACtDD,EAAkBC,CAAc,CAAC,EAAE,CAC9B1G,gBAAgB,CAAC,4BAA4B,CAAC,EAAE,CACrD,IAAI,CAAC8E,SAAS,CAAC2B,EAAiB3lB,EAAKgkB,SAAS,EAAI,MAAO,MAAO2B,EAAiBzB,GAEjFtG,GAAiBgI,CAAc,CAAC,EAAE,EAClCjH,GAAiB3hB,IAAI,CAAC,IAAI,CAAEuB,EAAOqnB,CAAc,CAAC,EAAE,CAAE,QACtDD,EAAkBC,CAAc,CAAC,EAAE,CAC9B1G,gBAAgB,CAAC,4BAA4B,CAAC,EAAE,CACrD,IAAI,CAAC8E,SAAS,CAAC2B,EAAiB3lB,EAAKslB,UAAU,EAAI,OAAQ,OAAQK,EAAiBzB,GACpF,IAAI,CAACF,SAAS,CAAC2B,EAAiB3lB,EAAKylB,YAAY,EAAI,SAAU,SAAUE,EAAiBzB,EAC9F,EA0fI2B,UApFJ,WACI,IAAIC,EAAU,EAOd,OANA,IAAI,CAAC5kB,MAAM,CAACjC,OAAO,CAAC,AAAC8mB,IACbA,CAAAA,EAAM5H,MAAM,EACZ4H,EAAM/nB,OAAO,CAACmgB,MAAM,AAAD,GACnB2H,GAER,GACOA,CACX,CA4EA,EAgXIlD,KA1Oc,CACd/S,KAvDJ,SAActR,CAAK,EACf,GAAI,CAACA,EACD,OAEJ,IAAMynB,EAAkB,IAAI,CAACjB,UAAU,CAACc,SAAS,CAAC7oB,IAAI,CAACuB,GAEjD0nB,EAAW1D,GAAYvlB,IAAI,CAAC,IAAI,CAAE,OACxCulB,GAAYvlB,IAAI,CAAC,IAAI,CAAE,OAAQgpB,GAE/B1D,GAAetlB,IAAI,CAAC,IAAI,EACxBslB,GAAetlB,IAAI,CAAC,IAAI,EACxBimB,GAAWjmB,IAAI,CAAC,IAAI,CAAEgpB,GAEtBlD,GAAU9lB,IAAI,CAAC,IAAI,CAAEipB,EAAU,EACnC,CA0CA,CAyOA,GAsBA,GAAM,CAAEC,SAAAA,EAAQ,CAAE,CAAIhpB,IAGhB,CAAEC,SAAUgpB,EAAyB,CAAEC,WAAAA,EAAU,CAAE1oB,KAAM2oB,EAAqB,CAAE,CAAInpB,IAmB1F,SAASopB,KACD,IAAI,CAAC5L,KAAK,EACV,IAAI,CAACA,KAAK,CAACQ,UAAU,EAE7B,CAIA,SAASqL,GAA8BC,CAAM,EACrC,AAAC,IAAI,CAAC9L,KAAK,EAEX,CAAA,IAAI,CAACA,KAAK,CAAG,IAjD6B8I,GAiDb,IAAI,CAACjlB,KAAK,CAAC+b,SAAS,CAAG,IAAI,CAAC/b,KAAK,CAACP,OAAO,CAAC2jB,UAAU,CAACtH,QAAQ,EACrF,IAAI,CAAC9b,KAAK,CAACP,OAAO,CAACyoB,UAAU,EAC1B,IAAI,CAACloB,KAAK,CAACP,OAAO,CAACyoB,UAAU,CAACC,GAAG,CAACrM,QAAQ,EAC9C,sDAAwD,IAAI,CAAC9b,KAAK,CAAA,EAE1E,IAAI,CAACmc,KAAK,CAACoK,QAAQ,CAAC0B,EAAOG,QAAQ,CAAE,IAAI,CAACpoB,KAAK,CAAEioB,EAAOxoB,OAAO,CAAEwoB,EAAOI,QAAQ,CACpF,CAMA,SAASC,GAAiCjkB,CAAO,CAAEoE,CAAC,EAE5C,AAAC,IAAI,CAAC8f,OAAO,CAAC9f,EAAEQ,MAAM,CAAE,qBACxB5E,EAAQE,KAAK,CAAC,IAAI,CAAEvB,MAAMzE,SAAS,CAACiG,KAAK,CAAC/F,IAAI,CAACgG,UAAW,GAElE,CAS6B,OA/C7B,SAAiB+jB,CAAuB,CAAE3jB,CAAY,EAC9CgjB,GAAWF,GAAU,WACrBC,GAA0BY,EAAyB,aAAcT,IACjEH,GAA0BY,EAAyB,YAAaR,IAChEF,GAAsBjjB,EAAatG,SAAS,CAAE,uBAAwB+pB,IAE9E,EAuDM,CAAEG,qBAAAA,EAAoB,CAAE,CAAI9pB,IAY5B,CAAE+pB,eAAAA,EAAc,CAAE,CAAI/pB,IAKtB,CAAEgqB,wBAAAA,EAAuB,CAAE9pB,MAAO+pB,EAAgB,CAAE7pB,UAAW8pB,EAAoB,CAAE/c,MAAOgd,EAAgB,CAAE5pB,KAAM6pB,EAAe,CAAEhZ,MAAAA,EAAK,CAAE,CAAIpR,IAyBtJ,SAASqqB,GAA0BC,CAAW,CAAE3W,CAAU,EACtD,IAAM4W,EAAgB,CAAC,EAYvB,MAXA,CAAC,SAAU,SAAS,CAACxoB,OAAO,CAAC,AAACqf,IAC1B,IAAMoJ,EAAkBF,CAAW,CAAClJ,EAAK,CAAEqJ,EAAkB9W,CAAU,CAACyN,EAAK,CACzEoJ,IACIC,EACAF,CAAa,CAACnJ,EAAK,CAAGhQ,GAAMqZ,GAAiB1X,GAAG,CAAC,CAAC2X,EAAczoB,IAAMkoB,GAAiBK,CAAe,CAACvoB,EAAE,CAAEyoB,IAG3GH,CAAa,CAACnJ,EAAK,CAAGkJ,CAAW,CAAClJ,EAAK,CAGnD,GACOmJ,CACX,CAqBA,MAAMI,WAAmBlhB,EASrB,OAAO1D,QAAQE,CAAU,CAAE2kB,CAAuB,CAAE1kB,CAAY,CAAE4P,CAAgB,CAAE,CAChFlP,EAA4Bb,OAAO,CAAC4kB,GAAY1kB,EAAYC,GAC5D0W,AA/iD8DnC,GA+iD9B1U,OAAO,CAAC+P,GACxCyB,AAz1E6D1B,GAy1E9B9P,OAAO,CAACE,EAAY6P,GACnD8U,EAAwB7kB,OAAO,CAAC4kB,GAAY1kB,GAC5C4kB,GAA+BD,EAAyB1kB,EAC5D,CAMAoH,YAAYjM,CAAK,CAAEX,CAAW,CAAE,CAC5B,KAAK,GACL,IAAI,CAAC0E,IAAI,CAAG,cAOZ,IAAI,CAAC/D,KAAK,CAAGA,EAOb,IAAI,CAACuC,MAAM,CAAG,EAAE,CAOhB,IAAI,CAAC8M,aAAa,CAAG,EAAE,CACvB,IAAI,CAACtL,IAAI,CAAG,cACZ,IAAI,CAAClB,KAAK,CAAG,GAOb,IAAI,CAACV,MAAM,CAAG,EAAE,CAOhB,IAAI,CAACkJ,MAAM,CAAG,EAAE,CAOhB,IAAI,CAACoe,UAAU,CAACpqB,GAOhB,IAAI,CAACA,WAAW,CAAGA,EAGnB,IAAMqqB,EAAkBV,GAA0B,IAAI,CAACvpB,OAAO,CAAEJ,EAChE,CAAA,IAAI,CAACI,OAAO,CAAC0C,MAAM,CAAGunB,EAAgBvnB,MAAM,CAC5C,IAAI,CAAC1C,OAAO,CAAC4L,MAAM,CAAGqe,EAAgBre,MAAM,CA0B5C,IAAI,CAACiG,IAAI,CAACtR,EAAO,IAAI,CAACP,OAAO,CACjC,CASAkqB,cAAe,CACX,IAAI,CAACC,WAAW,GACZ,IAAI,CAACC,SAAS,EACd,IAAI,CAACC,SAAS,EACd,IAAI,CAACrqB,OAAO,CAACmG,IAAI,EAEjB,CAAA,IAAI,CAACzF,QAAQ,CAAG,IAAI,CAACH,KAAK,CAACE,QAAQ,CAACC,QAAQ,CAAC,IAAI,CAAC4pB,UAAU,GAAE,CAEtE,CAIAC,WAAY,CACR,IAAMC,EAAiB,IAAI,CAACxqB,OAAO,CAAC0C,MAAM,EAAI,EAAE,CAChD8nB,EAAcvpB,OAAO,CAAC,CAACuB,EAAcrB,KACjC,IAAMwB,EAAQ,IAAI,CAAC8nB,SAAS,CAACjoB,EAAcrB,GAC3CkoB,GAAiB,CAAA,EAAMmB,CAAa,CAACrpB,EAAE,CAAEwB,EAAM3C,OAAO,CAC1D,EACJ,CAIA0qB,WAAY,CACR,IAAM9e,EAAS,IAAI,CAAC5L,OAAO,CAAC4L,MAAM,EAAI,EAAE,CACxCA,EAAO3K,OAAO,CAAC,CAACuG,EAAcrG,KAC1B,IAAM8F,EAAQ,IAAI,CAAC0jB,SAAS,CAACnjB,EAAcrG,GAC3CkoB,GAAiB,CAAA,EAAMzd,CAAM,CAACzK,EAAE,CAAE8F,EAAMjH,OAAO,CACnD,EACJ,CAQAsB,SAAU,CACN,IAAMf,EAAQ,IAAI,CAACA,KAAK,CAAEqqB,EAAc,SAAU9U,CAAI,EAClDA,EAAKxU,OAAO,EAChB,EACA,IAAI,CAACoB,MAAM,CAACzB,OAAO,CAAC2pB,GACpB,IAAI,CAAChf,MAAM,CAAC3K,OAAO,CAAC2pB,GACpB,IAAI,CAACR,SAAS,CAAG,KACjB,IAAI,CAACC,SAAS,CAAG,KACjBlB,GAAiB5oB,EAAMsqB,eAAe,CAAE,IAAI,CAACC,cAAc,EAC3D,KAAK,CAACxpB,UACN,IAAI,CAAC6O,oBAAoB,GACzB+Y,GAAwB,IAAI,CAAE3oB,EAClC,CAKAqqB,YAAY9U,CAAI,CAAE,CAEdqT,GAAiB,IAAI,CAACrT,EAAKnE,QAAQ,CAAG,IAAI,CAAEmE,GAC5CA,EAAKxU,OAAO,EAChB,CAIAgpB,YAAa,CACT,GAAI,IAAI,CAACF,SAAS,EAAI,IAAI,CAACC,SAAS,CAChC,MAAO,CACHrnB,EAAG,IAAI,CAAConB,SAAS,CAACW,IAAI,CACtBlkB,EAAG,IAAI,CAACwjB,SAAS,CAAC9C,GAAG,CACrBpf,MAAO,IAAI,CAACiiB,SAAS,CAACjiB,KAAK,CAC3BF,OAAQ,IAAI,CAACoiB,SAAS,CAACpiB,MAAM,AACjC,CAER,CAKA+iB,eAAezqB,CAAK,CAAEX,CAAW,CAAE,CAC/B,IAAI,CAACoqB,UAAU,CAACpqB,GAChB,IAAMqqB,EAAkBV,GAA0B,IAAI,CAACvpB,OAAO,CAAEJ,EAChE,CAAA,IAAI,CAACI,OAAO,CAAC0C,MAAM,CAAGunB,EAAgBvnB,MAAM,CAC5C,IAAI,CAAC1C,OAAO,CAAC4L,MAAM,CAAGqe,EAAgBre,MAAM,CAC5C,IAAI,CAACrL,KAAK,CAAGA,EACb,IAAI,CAACuC,MAAM,CAAG,EAAE,CAChB,IAAI,CAAC8M,aAAa,CAAG,EAAE,CACvB,IAAI,CAACtL,IAAI,CAAG,cACZ,IAAI,CAAC1E,WAAW,CAAGA,EACnB,IAAI,CAAC8C,MAAM,CAAG,EAAE,CAChB,IAAI,CAACkJ,MAAM,CAAG,EAAE,AACpB,CAKAiG,KAAKoZ,CAAkB,CAAEC,CAAY,CAAE9nB,EAAQ,IAAI,CAACA,KAAK,CAAE,CACvD,IAAM7C,EAAQ,IAAI,CAACA,KAAK,CAAE4qB,EAAc,IAAI,CAACnrB,OAAO,CAACkG,SAAS,AAC9D,CAAA,IAAI,CAAC9C,KAAK,CAAGA,EACb,IAAI,CAACmN,UAAU,GACf,IAAI,CAACZ,gBAAgB,GACrB,IAAI,CAAC+a,SAAS,GACd,IAAI,CAACH,SAAS,GACd,IAAI,CAACa,iBAAiB,GACtB,IAAI,CAACjnB,eAAe,CAAG6kB,GAAqBzoB,EAAO4qB,EACvD,CAKAV,UAAUjoB,CAAY,CAAEY,CAAK,CAAE,CAC3B,IAEkBT,EAAQ,IApwDoCgX,GAowDA,IAAI,CAFlD0P,GAAiB,IAAI,CAACrpB,OAAO,CAACwC,YAAY,CAAE,CACxDsF,oBAAqB,IAAI,CAAC9H,OAAO,CAAC8H,mBAAmB,AACzD,EAAGtF,GAA0EY,GAG7E,OAFAT,EAAMgP,QAAQ,CAAG,QACjB,IAAI,CAACjP,MAAM,CAACxC,IAAI,CAACyC,GACVA,CACX,CAUAgoB,UAAUnjB,CAAY,CAAEpE,CAAK,CAAE,CAC3B,IAAMpD,EAAUqpB,GAAiB,IAAI,CAACrpB,OAAO,CAACwH,YAAY,CAAE,CACxDM,oBAAqB,IAAI,CAAC9H,OAAO,CAAC8H,mBAAmB,AACzD,EAAGN,GAAeP,EAAQ,IAAK4iB,GAAWwB,SAAS,CAACrrB,EAAQ6F,IAAI,CAAC,CAAE,IAAI,CAAE7F,EAASoD,GAGlF,OAFA6D,EAAM0K,QAAQ,CAAG,QACjB,IAAI,CAAC/F,MAAM,CAAC1L,IAAI,CAAC+G,GACVA,CACX,CAIApH,OAAOqG,CAAS,CAAE,CACd,IAAI,CAACqK,UAAU,GACX,AAAC,IAAI,CAACpQ,OAAO,EACb,IAAI,CAACuM,MAAM,GAEX,IAAI,CAAChM,QAAQ,EACb,IAAI,CAACA,QAAQ,CAACwD,OAAO,CAAC,IAAI,CAAComB,UAAU,IAEzC,IAAI,CAACgB,WAAW,CAAC,IAAI,CAAC1f,MAAM,CAAE1F,GAC9B,IAAI,CAAColB,WAAW,CAAC,IAAI,CAAC5oB,MAAM,CAAEwD,GAC9B,IAAI,CAAC0K,mBAAmB,CAAC1K,EAC7B,CAKAqlB,WAAWzV,CAAI,CAAE5P,CAAS,CAAE,CACxB4P,EAAKvF,UAAU,GACVuF,EAAKtD,aAAa,IAIf,AAACsD,EAAK3V,OAAO,EACb,IAAI,CAACqrB,UAAU,CAAC1V,GAEpBA,EAAKjW,MAAM,CAACypB,GAAgBpjB,EAAW,CAAA,IAAS4P,EAAK3V,OAAO,CAAC0V,MAAM,EAC/DC,EAAKhT,MAAM,CAACX,MAAM,EAClBspB,AAtUhB,SAA0B3V,CAAI,EAC1B,IAAMnT,EAAQmT,EAAK3V,OAAO,CAAEurB,EAAmB5V,EAAKhT,MAAM,CAAC1B,IAAI,CAAC,AAACiM,GAAWA,AAAyB,CAAA,IAAzBA,EAAMnK,MAAM,CAAC+C,OAAO,EAC5FoH,AAAkB,CAAA,IAAlBA,EAAMpH,OAAO,EACbtD,IACK+oB,EAGI/oB,AAAqB,WAArBA,EAAMgpB,UAAU,EACrBhpB,EAAMipB,IAAI,GAHVjpB,EAAMkpB,IAAI,GAMtB,EA2TiC/V,IARrB,IAAI,CAAC8U,WAAW,CAAC9U,EAWzB,CAIAwV,YAAYQ,CAAK,CAAE5lB,CAAS,CAAE,CAC1B,IAAI/E,EAAI2qB,EAAM3pB,MAAM,CAGpB,KAAOhB,KACH,IAAI,CAACoqB,UAAU,CAACO,CAAK,CAAC3qB,EAAE,CAAE+E,EAElC,CAKAwX,QAAS,CAEL,OAAO,IAAI,CAACnd,KAAK,CAACoF,gBAAgB,CAAC,IAAI,CAC3C,CAIA+G,QAAS,CACL,IAAMjM,EAAW,IAAI,CAACF,KAAK,CAACE,QAAQ,AACpC,CAAA,IAAI,CAACN,OAAO,CAAGM,EACVI,CAAC,CAAC,cACFT,IAAI,CAAC,CACNC,QAAS,EACTS,OAAQ,IAAI,CAACd,OAAO,CAACc,MAAM,CAC3B6qB,WAAY,IAAI,CAAC3rB,OAAO,CAACiG,OAAO,CAC5B,UACA,QACR,GACKjF,GAAG,GACR,IAAI,CAAC+qB,WAAW,CAAGtrB,EACdI,CAAC,CAAC,qBACFG,GAAG,CAAC,IAAI,CAACb,OAAO,EACjB,IAAI,CAACH,OAAO,CAACmG,IAAI,EACjB,IAAI,CAAC4lB,WAAW,CAAChrB,IAAI,CAAC,IAAI,CAACR,KAAK,CAACC,WAAW,EAEhD,IAAI,CAACwrB,WAAW,CAAGvrB,EACdI,CAAC,CAAC,qBACFT,IAAI,CAAC,CAEN2N,WAAY,EACZC,WAAY,CAChB,GACKhN,GAAG,CAAC,IAAI,CAACb,OAAO,EACrB,IAAI,CAAC+pB,YAAY,GACb,IAAI,CAACxpB,QAAQ,EACb,IAAI,CAACP,OAAO,CAACY,IAAI,CAAC,IAAI,CAACL,QAAQ,EAGnC,IAAI,CAACurB,WAAW,CAAC,IAAI,CAACrgB,MAAM,EAC5B,IAAI,CAACqgB,WAAW,CAAC,IAAI,CAACvpB,MAAM,EAC5B,IAAI,CAACkG,SAAS,GACd,IAAI,CAACiI,mBAAmB,EAC5B,CAIA2a,WAAW1V,CAAI,CAAE,CACbA,EAAKpJ,MAAM,CAACoJ,AAAkB,UAAlBA,EAAKnE,QAAQ,CACrB,IAAI,CAACqa,WAAW,CAChB,IAAI,CAACD,WAAW,CACxB,CAIAE,YAAYH,CAAK,CAAE,CACf,IAAI3qB,EAAI2qB,EAAM3pB,MAAM,CACpB,KAAOhB,KACH,IAAI,CAACqqB,UAAU,CAACM,CAAK,CAAC3qB,EAAE,CAEhC,CAIAgpB,aAAc,CACV,IAAM+B,EAAQ,IAAI,CAAC3rB,KAAK,CAAC4C,KAAK,CAAEgpB,EAAQ,IAAI,CAAC5rB,KAAK,CAAC+M,KAAK,CAAE8e,EAAa,AAAC,CAAA,IAAI,CAACpsB,OAAO,CAAC0C,MAAM,EAAI,EAAE,AAAD,EAC3F2pB,MAAM,CAAC,IAAI,CAACrsB,OAAO,CAAC4L,MAAM,EAAI,EAAE,EAChC0gB,MAAM,CAAC,CAACC,EAAMC,KACf,IAAMnf,EAAQmf,GACTA,CAAAA,EAAanf,KAAK,EACdmf,EAAa1pB,MAAM,EAAI0pB,EAAa1pB,MAAM,CAAC,EAAE,EACtD,MAAO,CACHopB,CAAK,CAAC7e,GAASA,EAAMlK,KAAK,CAAC,EAAIopB,CAAI,CAAC,EAAE,CACtCJ,CAAK,CAAC9e,GAASA,EAAMC,KAAK,CAAC,EAAIif,CAAI,CAAC,EAAE,CACzC,AACL,EAAG,EAAE,CACL,CAAA,IAAI,CAACnC,SAAS,CAAGgC,CAAU,CAAC,EAAE,CAC9B,IAAI,CAAC/B,SAAS,CAAG+B,CAAU,CAAC,EAAE,AAClC,CAIA7Z,2BAA2BtM,CAAO,CAAE,CAChC,IAAMwmB,EAAiC,SAAU3W,CAAI,EACjDA,EAAKvD,0BAA0B,CAACtM,EACpC,EACA,IAAI,CAAC2J,aAAa,CAAC3O,OAAO,CAAC,AAACmP,IACxBA,EAAazD,aAAa,CAAC1G,EAC/B,GACA,IAAI,CAAC2F,MAAM,CAAC3K,OAAO,CAACwrB,GACpB,IAAI,CAAC/pB,MAAM,CAACzB,OAAO,CAACwrB,EACxB,CAIArB,mBAAoB,CAChB,IAAMtrB,EAAa,IAAI,AACvBA,CAAAA,EAAWgrB,cAAc,CAAG,WACxB,OAAOhrB,EAAW4C,MAAM,CAAC4pB,MAAM,CAAC,SAAU5pB,CAAM,CAAEC,CAAK,EAInD,OAHI,AAACA,EAAM3C,OAAO,CAACsG,YAAY,EAC3B5D,EAAOxC,IAAI,CAACyC,EAAMxC,OAAO,EAEtBuC,CACX,EAAG,EAAE,CACT,EACA5C,EAAWS,KAAK,CAACsqB,eAAe,CAAC3qB,IAAI,CAACJ,EAAWgrB,cAAc,CACnE,CAOAd,WAAWpqB,CAAW,CAAE,CACpB,IAAI,CAACI,OAAO,CAAGqpB,GAEf,IAAI,CAACJ,cAAc,CAEnB,AAACrpB,EAAYiG,IAAI,EACb,IAAI,CAACojB,cAAc,CAACrjB,KAAK,CAAChG,EAAYiG,IAAI,CAAC,EAAK,CAAC,EAAGjG,EAC5D,CAQA+M,cAAc1G,CAAO,CAAE,CACnB,IAAMjG,EAAU,IAAI,CAACA,OAAO,CAAE2jB,EAAa,IAAI,CAACpjB,KAAK,CAACmlB,kBAAkB,CAAEiG,EAAarC,GAAgBrjB,EAAS,CAACjG,EAAQiG,OAAO,EAEhI,GADA,IAAI,CAAC9F,OAAO,CAACC,IAAI,CAAC,aAAcurB,EAAa,UAAY,UACrD,CAACA,EAAY,CACb,IAAMc,EAAiC,SAAU3W,CAAI,EACjDA,EAAKvD,0BAA0B,CAACoZ,EACpC,EACA,IAAI,CAAC/f,MAAM,CAAC3K,OAAO,CAACwrB,GACpB,IAAI,CAAC/pB,MAAM,CAACzB,OAAO,CAACwrB,GAChB9I,EAAW8B,gBAAgB,GAAK,IAAI,EACpC9B,EAAWjH,KAAK,EAChBiH,AAA0B,uBAA1BA,EAAWjH,KAAK,CAAC7W,IAAI,EACrBujB,GAAqBzF,EAAY,aAEzC,CACA3jB,EAAQiG,OAAO,CAAG0lB,CACtB,CAUA/e,OAAOhN,CAAW,CAAEC,CAAM,CAAE,CACxB,IAAMU,EAAQ,IAAI,CAACA,KAAK,CAAE0pB,EAAkBV,GAA0B,IAAI,CAAC3pB,WAAW,CAAEA,GAAc8sB,EAAmBnsB,EAAMN,WAAW,CAACyJ,OAAO,CAAC,IAAI,EAAG1J,EAAUqpB,GAAiB,CAAA,EAAM,IAAI,CAACzpB,WAAW,CAAEA,EAC7MI,CAAAA,EAAQ0C,MAAM,CAAGunB,EAAgBvnB,MAAM,CACvC1C,EAAQ4L,MAAM,CAAGqe,EAAgBre,MAAM,CACvC,IAAI,CAACtK,OAAO,GACZ,IAAI,CAAC0pB,cAAc,CAACzqB,EAAOP,GAC3B,IAAI,CAAC6R,IAAI,CAACtR,EAAOP,GAEjBO,EAAMP,OAAO,CAACC,WAAW,CAACysB,EAAiB,CAAG,IAAI,CAAC1sB,OAAO,CAC1D,IAAI,CAACiK,UAAU,CAAG,CAAA,EACdqf,GAAgBzpB,EAAQ,CAAA,IACxBU,EAAMc,eAAe,GAEzB+nB,GAAqB,IAAI,CAAE,eAC3B,IAAI,CAACnf,UAAU,CAAG,CAAA,CACtB,CACJ,CAIA4f,GAAW8C,YAAY,CAAGpgB,EAI1Bsd,GAAW1c,SAAS,CA1vHwCA,EAkwH5D0c,GAAWwB,SAAS,CAAG,CACnB,KApsFiE/U,GAqsFjE,OAnlFmEK,GAolFnE,QA73EoEK,GA83EpE,KAjzFiEjC,GAkzFjE,MAp6DkE4G,EAq6DtE,EAIAkO,GAAWjkB,KAAK,CAAG,CAAC,EACpBikB,GAAW/qB,SAAS,CAACmqB,cAAc,CAAGjjB,EACtCijB,GAAehpB,WAAW,CAAG+F,EAQ7B6jB,GAAW/qB,SAAS,CAAC2K,YAAY,CAAG,CAAC,MAAO,cAAe,OAAQ,SAAS,CAC5E+H,EAA0BvM,OAAO,CAAC4kB,QAyEvBjsB,GAmERA,GAA+BA,CAAAA,EAA6B,CAAC,CAAA,CA9C5DA,CAAAA,GAA2BqH,OAAO,CANlC,SAAiB1E,CAAK,EAIlB,OAHI,AAACA,EAAMojB,UAAU,EACjBpjB,CAAAA,EAAMojB,UAAU,CAAG,IAAIiJ,GAAUrsB,EAAK,EAEnCA,CACX,CAYA,OAAMqsB,GAMFpgB,YAAYjM,CAAK,CAAE,CACf,IAAI,CAACssB,OAAO,CAAG,EAAE,CACjB,IAAI,CAACtsB,KAAK,CAAGA,CACjB,CAaAusB,UAAUC,CAAQ,CAAE,CAChB,IAAI,CAACxsB,KAAK,CAACojB,UAAU,CAACkJ,OAAO,CAAC3sB,IAAI,CAAC6sB,EACvC,CAIAngB,OAAO5M,CAAO,CAAEH,CAAM,CAAE,CACpB,IAAI,CAACgtB,OAAO,CAAC5rB,OAAO,CAAC,AAAC8rB,IAClBA,EAAS/tB,IAAI,CAAC,IAAI,CAACuB,KAAK,CAAEP,EAASH,EACvC,EACJ,CACJ,CACAjC,GAA2BgvB,SAAS,CAAGA,GAOd,IAAMI,GAAoCpvB,EAcjE,CAAEmI,QAASknB,EAAmC,CAAE/T,SAAUgU,EAAoC,CAAEztB,KAAM0tB,EAAgC,CAAE,CAAIjuB,IAW5IkuB,GAAyB,CAC3B7mB,gBAAiB,SACjBC,YAAa,SACbC,aAAc,SACdY,MAAO,SACPM,KAAM,SACNR,SAAU,SACVzE,OAAQ,SACR4d,KAAM,SACN7Y,OAAQ,SACR4lB,MAAO,QACX,EAgEmCC,GALA,CAC/BF,uBAAAA,GACAG,gBA3CJ,SAAyBC,CAAM,EAC3B,OAAOA,EAAO3M,MAAM,CAAC,AAAC4M,IAClB,IAAMC,EAAWD,EAAME,IAAI,CAACC,WAAW,GAAIC,EAAUH,EAASI,GAAG,CAAEC,EAAUL,EAAS/pB,GAAG,CAGzFqqB,EAAiBb,GAAiCM,EAAME,IAAI,CAACK,cAAc,CAAE,GAC7E,OAAOd,GAAqCW,IAAYX,GAAqCa,IACzFN,EAAMnZ,KAAK,EAAKuZ,EAAUG,GAC1BP,EAAMnZ,KAAK,EAAKyZ,EAAUC,GAE1B,CAACP,EAAME,IAAI,CAAC3tB,OAAO,CAACiuB,UAAU,AACtC,EAAE,CAAC,EAAE,AACT,EAgCIC,aApBJ,SAAsB5vB,CAAG,CAAEgW,CAAK,EAC5B,IAAM6Z,EAAiBf,EAAsB,CAAC9uB,EAAI,CAC9C8vB,EAAY,OAAO9Z,EAIvB,OAHI2Y,GAAoCkB,IACpCC,CAAAA,EAAYD,CAAa,EAEtB,CAAA,CACH,OAAU,OACV,OAAU,SACV,QAAW,UACf,CAAA,CAAC,CAACC,EAAU,AAChB,CAUA,EAeM,CAAEb,gBAAiBc,EAA0C,CAAE,CAAGf,GAElE,CAAEpU,SAAUoV,EAAmC,CAAEjiB,MAAOkiB,EAAgC,CAAE,CAAIrvB,IA8XjEsvB,GAJD,CAC9BxsB,KAlXS,CAQT2hB,WAAY,CAMRjH,MAAO,CACH+R,aAAc,gBACdC,MAAO,QACP9X,OAAQ,SACR+X,QAAS,UACTC,UAAW,YACXjsB,MAAO,QACP6E,aAAc,gBACdqnB,YAAa,UACblnB,KAAM,OACNoR,OAAQ,OACRrR,YAAa,aACbD,OAAQ,aACR4lB,MAAO,QACP/M,KAAM,OACN9d,aAAc,gBACdE,OAAQ,SACR6D,gBAAiB,mBACjBuoB,iBAAkB,oBAClBtoB,YAAa,eACbC,aAAc,gBACdC,YAAa,eACbQ,MAAO,QACPH,QAAS,UACTI,SAAU,YACVE,MAAO,QACPY,OAAQ,SACR2D,OAAQ,eACZ,CACJ,CACJ,EAuUI+X,WAlUe,CAWfoL,kBAAmB,gCA6BnBC,SAAU,CAQNC,iBAAkB,CAEdtoB,UAAW,+BAEXuoB,MAAO,SAAUlmB,CAAC,EACd,IAAMwkB,EAAS,IAAI,CAACjtB,KAAK,CAAC+I,OAAO,EAAE6lB,eAAenmB,GAAIomB,EAAU5B,GAAUa,GAA2Cb,EAAOrqB,KAAK,EAAGksB,EAAU7B,GAAUa,GAA2Cb,EAAOlgB,KAAK,EAAGqW,EAAa,IAAI,CAACpjB,KAAK,CAACP,OAAO,CAAC2jB,UAAU,CAE5P,GAAI,AAACyL,GAAYC,EAGjB,OAAO,IAAI,CAAC9uB,KAAK,CAAC+E,aAAa,CAACipB,GAAiC,CAC7DnH,QAAS,SACTvhB,KAAM,kBACN+F,OAAQ,CAAC,CACD/F,KAAM,SACNwH,MAAO,CACHrK,EAAGosB,EAAQ9a,KAAK,CAChBzN,EAAGwoB,EAAQ/a,KAAK,CAChBnR,MAAOisB,EAAQzB,IAAI,CAACvqB,KAAK,CACzBkK,MAAO+hB,EAAQ1B,IAAI,CAACvqB,KAAK,AAC7B,EACAwE,EAAG,CACP,EAAE,AACV,EAAG+b,EAAW2L,kBAAkB,CAAE3L,EAAWqL,QAAQ,CAACC,gBAAgB,CACjEK,kBAAkB,EAC3B,EAEAC,MAAO,CACH,SAAUvmB,CAAC,CAAElJ,CAAU,EACnB,IAEIwb,EAFE1P,EAAS9L,EAAWE,OAAO,CAAC4L,MAAM,CAAE4jB,EAAiB,AAAC5jB,GAAUA,CAAM,CAAC,EAAE,EAAIA,CAAM,CAAC,EAAE,CAACyB,KAAK,EAC9F,CAAC,EAEL,GAAIihB,GAAoCkB,EAAcrsB,KAAK,GACvDmrB,GAAoCkB,EAAcliB,KAAK,EAAG,CAC1D,IAAMtC,EAAW,IAAI,CAACzK,KAAK,CAACyK,QAAQ,CAAEhI,EAAI,IAAI,CAACzC,KAAK,CAAC4C,KAAK,CAACqsB,EAAcrsB,KAAK,CAAC,CAC1EsL,QAAQ,CAAC+gB,EAAcxsB,CAAC,EAAG6D,EAAI,IAAI,CAACtG,KAAK,CAAC+M,KAAK,CAACkiB,EAAcliB,KAAK,CAAC,CACpEmB,QAAQ,CAAC+gB,EAAc3oB,CAAC,EAC7ByU,EAAW5X,KAAKC,GAAG,CAACD,KAAK8T,IAAI,CAAC9T,KAAK+rB,GAAG,CAACzkB,EAAWnE,EAAImC,EAAE8B,MAAM,CAAG9H,EAAIgG,EAAE8B,MAAM,CAAE,GAC3EpH,KAAK+rB,GAAG,CAACzkB,EAAWhI,EAAIgG,EAAE4B,MAAM,CAAG/D,EAAImC,EAAE4B,MAAM,CAAE,IAAK,EAC9D,CACA9K,EAAW8M,MAAM,CAAC,CACdhB,OAAQ,CAAC,CACDhE,EAAG0T,CACP,EAAE,AACV,EACJ,EACH,AACL,EASAoU,kBAAmB,CACf/oB,UAAW,gCACXuoB,MAAO,SAAUlmB,CAAC,EACd,IAAMwkB,EAAS,IAAI,CAACjtB,KAAK,CAAC+I,OAAO,EAAE6lB,eAAenmB,GAAIomB,EAAU5B,GAAUa,GAA2Cb,EAAOrqB,KAAK,EAAGksB,EAAU7B,GAAUa,GAA2Cb,EAAOlgB,KAAK,EAAGqW,EAAa,IAAI,CAACpjB,KAAK,CAACP,OAAO,CAAC2jB,UAAU,CAC5P,GAAI,AAACyL,GAAYC,EAGjB,OAAO,IAAI,CAAC9uB,KAAK,CAAC+E,aAAa,CAACipB,GAAiC,CAC7DnH,QAAS,UACTvhB,KAAM,kBACN+F,OAAQ,CACJ,CACI/F,KAAM,UACN1C,MAAOisB,EAAQzB,IAAI,CAACvqB,KAAK,CACzBkK,MAAO+hB,EAAQ1B,IAAI,CAACvqB,KAAK,CACzBN,OAAQ,CAAC,CACDE,EAAGosB,EAAQ9a,KAAK,CAChBzN,EAAGwoB,EAAQ/a,KAAK,AACpB,EAAG,CACCtR,EAAGosB,EAAQ9a,KAAK,CAChBzN,EAAGwoB,EAAQ/a,KAAK,AACpB,EAAE,CACN6D,GAAI,CACR,EACH,AACL,EAAGwL,EAAW2L,kBAAkB,CAAE3L,EAAWqL,QAAQ,CAACU,iBAAiB,CAClEJ,kBAAkB,EAC3B,EACAC,MAAO,CACH,SAAUvmB,CAAC,CAAElJ,CAAU,EACnB,IAAM0J,EAAS1J,EAAW8L,MAAM,CAAC,EAAE,CAAE0J,EAAW9L,EAAO+O,mBAAmB,CAAC/O,EAAO1G,MAAM,CAAC,EAAE,EAC3F0G,EAAO6H,cAAc,CAACrI,EAAE8B,MAAM,CAAGwK,EAAStS,CAAC,CAAEgG,EAAE4B,MAAM,CAAG0K,EAASzO,CAAC,CAAE,GACpE2C,EAAO3J,MAAM,CAAC,CAAA,EAClB,EACA,SAAUmJ,CAAC,CAAElJ,CAAU,EACnB,IAAM0J,EAAS1J,EAAW8L,MAAM,CAAC,EAAE,CAAE0J,EAAW9L,EAAO+O,mBAAmB,CAAC/O,EAAO1G,MAAM,CAAC,EAAE,EAAG4U,EAAYlO,EAAO+O,mBAAmB,CAAC/O,EAAO1G,MAAM,CAAC,EAAE,EAAG6sB,EAAOnmB,EAAO0N,mBAAmB,CAAC5B,EAAUoC,EAAW1O,EAAE8B,MAAM,CAAE9B,EAAE4B,MAAM,EAAG0C,EAAQ9D,EAAO6O,QAAQ,GAAIuX,EAAQlsB,KAAK6T,GAAG,CAACjK,EAAMsB,OAAO,CAAC,GAAKtB,EAAMsB,OAAO,CAAC+gB,IACjTnmB,EAAOmP,UAAU,CAACiX,GAClBpmB,EAAO3J,MAAM,CAAC,CAAA,EAClB,EACH,AACL,EAQAgwB,oBAAqB,CAEjBlpB,UAAW,kCAEXuoB,MAAO,SAAUlmB,CAAC,EACd,IAAMwkB,EAAS,IAAI,CAACjtB,KAAK,CAAC+I,OAAO,EAAE6lB,eAAenmB,GAAIomB,EAAU5B,GAAUa,GAA2Cb,EAAOrqB,KAAK,EAAGksB,EAAU7B,GAAUa,GAA2Cb,EAAOlgB,KAAK,EAE/M,GAAI,CAAC8hB,GAAW,CAACC,EACb,OAEJ,IAAMrsB,EAAIosB,EAAQ9a,KAAK,CAAEzN,EAAIwoB,EAAQ/a,KAAK,CAAEnR,EAAQisB,EAAQzB,IAAI,CAACvqB,KAAK,CAAEkK,EAAQ+hB,EAAQ1B,IAAI,CAACvqB,KAAK,CAAEugB,EAAa,IAAI,CAACpjB,KAAK,CAACP,OAAO,CAAC2jB,UAAU,CAC9I,OAAO,IAAI,CAACpjB,KAAK,CAAC+E,aAAa,CAACipB,GAAiC,CAC7DnH,QAAS,YACTvhB,KAAM,kBACN+F,OAAQ,CAAC,CACD/F,KAAM,OACN/C,OAAQ,CACJ,CAAEK,MAAAA,EAAOmK,MAAAA,EAAOtK,EAAAA,EAAG6D,EAAAA,CAAE,EACrB,CAAE1D,MAAAA,EAAOmK,MAAAA,EAAOtK,EAAAA,EAAG6D,EAAAA,CAAE,EACrB,CAAE1D,MAAAA,EAAOmK,MAAAA,EAAOtK,EAAAA,EAAG6D,EAAAA,CAAE,EACrB,CAAE1D,MAAAA,EAAOmK,MAAAA,EAAOtK,EAAAA,EAAG6D,EAAAA,CAAE,EACrB,CAAEuH,QAAS,GAAI,EAClB,AACL,EAAE,AACV,EAAGuV,EACE2L,kBAAkB,CAAE3L,EACpBqL,QAAQ,CACRa,mBAAmB,CACnBP,kBAAkB,EAC3B,EAEAC,MAAO,CACH,SAAUvmB,CAAC,CAAElJ,CAAU,EACnB,IAAM8L,EAAS9L,EAAWE,OAAO,CAAC4L,MAAM,CAAE9I,EAAU,AAAC8I,GAAUA,CAAM,CAAC,EAAE,EAAIA,CAAM,CAAC,EAAE,CAAC9I,MAAM,EACxF,EAAE,CAAG0qB,EAAS,IAAI,CAACjtB,KAAK,CAAC+I,OAAO,EAAE6lB,eAAenmB,GAAIomB,EAAU5B,GAAUa,GAA2Cb,EAAOrqB,KAAK,EAAGksB,EAAU7B,GAAUa,GAA2Cb,EAAOlgB,KAAK,EAClN,GAAI8hB,GAAWC,EAAS,CACpB,IAAMrsB,EAAIosB,EAAQ9a,KAAK,CAAEzN,EAAIwoB,EAAQ/a,KAAK,AAE1CxR,CAAAA,CAAM,CAAC,EAAE,CAACE,CAAC,CAAGA,EAEdF,CAAM,CAAC,EAAE,CAACE,CAAC,CAAGA,EACdF,CAAM,CAAC,EAAE,CAAC+D,CAAC,CAAGA,EAEd/D,CAAM,CAAC,EAAE,CAAC+D,CAAC,CAAGA,EACd/G,EAAW8M,MAAM,CAAC,CACdhB,OAAQ,CAAC,CACD9I,OAAQA,CACZ,EAAE,AACV,EACJ,CACJ,EACH,AACL,EAOAgtB,gBAAiB,CAEbnpB,UAAW,8BAEXuoB,MAAO,SAAUlmB,CAAC,EACd,IAAMwkB,EAAS,IAAI,CAACjtB,KAAK,CAAC+I,OAAO,EAAE6lB,eAAenmB,GAAIomB,EAAU5B,GAAUa,GAA2Cb,EAAOrqB,KAAK,EAAGksB,EAAU7B,GAAUa,GAA2Cb,EAAOlgB,KAAK,EAAGqW,EAAa,IAAI,CAACpjB,KAAK,CAACP,OAAO,CAAC2jB,UAAU,CAE5P,GAAI,AAACyL,GAAYC,EAGjB,OAAO,IAAI,CAAC9uB,KAAK,CAAC+E,aAAa,CAACipB,GAAiC,CAC7DnH,QAAS,QACTvhB,KAAM,kBACNrD,aAAc,CACVuW,OAAQ,UACRjS,SAAU,OACVX,KAAM,CAAA,CACV,EACAzD,OAAQ,CAAC,CACD2K,MAAO,CACHlK,MAAOisB,EAAQzB,IAAI,CAACvqB,KAAK,CACzBkK,MAAO+hB,EAAQ1B,IAAI,CAACvqB,KAAK,CACzBJ,EAAGosB,EAAQ9a,KAAK,CAChBzN,EAAGwoB,EAAQ/a,KAAK,AACpB,CACJ,EAAE,AACV,EAAGqP,EACE2L,kBAAkB,CAAE3L,EACpBqL,QAAQ,CACRc,eAAe,CACfR,kBAAkB,EAC3B,CACJ,CACJ,EAmDAvnB,OAAQ,CAAC,EAcTunB,mBAAoB,CAChBppB,UAAW,CACP6pB,MAAO,CACX,CACJ,CACJ,CASA,EAgBM,CAAE/F,WAAAA,EAAU,CAAE,CAAI9qB,IAElB,CAAE6Z,OAAQiX,EAAyB,CAAE,CAAIlX,KAEzC,CAAEoP,SAAU+H,EAA2B,CAAE7nB,IAAK8nB,EAAsB,CAAEC,IAAAA,EAAG,CAAE,CAAIjxB,IAG/E,CAAEquB,gBAAiB6C,EAAkC,CAAElC,aAAcmC,EAA+B,CAAE,CAAG/C,GAEzG,CAAEnuB,SAAUmxB,EAA2B,CAAElwB,KAAAA,EAAI,CAAE2F,QAASwqB,EAA0B,CAAEjxB,UAAWkxB,EAA4B,CAAEjxB,QAASkxB,EAA0B,CAAEC,WAAAA,EAAU,CAAExX,SAAUyX,EAA2B,CAAEnxB,SAAUoxB,EAA2B,CAAEvkB,MAAOwkB,EAAwB,CAAEroB,WAAYsoB,EAA6B,CAAErxB,KAAMsxB,EAAuB,CAAE3I,WAAY4I,EAA6B,CAAE,CAAI9xB,IA+B5Z,SAAS+xB,KACD,IAAI,CAAC1wB,KAAK,CAACmlB,kBAAkB,EAC7B,IAAI,CAACnlB,KAAK,CAACmlB,kBAAkB,CAACwL,kBAAkB,EAExD,CAIA,SAASC,KACD,IAAI,CAACzL,kBAAkB,EACvB,IAAI,CAACA,kBAAkB,CAACpkB,OAAO,EAEvC,CAIA,SAAS8vB,KACL,IAAMpxB,EAAU,IAAI,CAACA,OAAO,CACxBA,GAAWA,EAAQ2jB,UAAU,EAAI3jB,EAAQ2jB,UAAU,CAACqL,QAAQ,GAC5D,IAAI,CAACtJ,kBAAkB,CAAG,IAAI2L,GAAmB,IAAI,CAAErxB,EAAQ2jB,UAAU,EACzE,IAAI,CAAC+B,kBAAkB,CAAC4L,UAAU,GAClC,IAAI,CAAC5L,kBAAkB,CAAC6L,UAAU,GAE1C,CAIA,SAASC,KACL,IAAM9L,EAAqB,IAAI,CAACA,kBAAkB,CAAE+L,EAAoB,0BACxE,GAAI,IAAI,EAAI/L,EAAoB,CAG5B,IAAIgM,EAAiB,CAAA,EAMrB,GALA,IAAI,CAACxuB,MAAM,CAACjC,OAAO,CAAC,AAACiC,IACb,CAACA,EAAOlD,OAAO,CAACiuB,UAAU,EAAI/qB,EAAO+C,OAAO,EAC5CyrB,CAAAA,EAAiB,CAAA,CAAG,CAE5B,GACI,IAAI,CAAChM,kBAAkB,EACvB,IAAI,CAACA,kBAAkB,CAACpJ,SAAS,EACjC,IAAI,CAACoJ,kBAAkB,CAACpJ,SAAS,CAAC,EAAE,CAAE,CACtC,IAAMA,EAAY,IAAI,CAACoJ,kBAAkB,CAACpJ,SAAS,CAAC,EAAE,CACtDwU,GAA8BpL,EAAmBiM,eAAe,CAAE,CAACrd,EAAOhW,KAGtE,IAAMszB,EAAatV,EAAU4E,gBAAgB,CAAC,IAAM5iB,GACpD,GAAIszB,EACA,IAAK,IAAIzwB,EAAI,EAAGA,EAAIywB,EAAWzvB,MAAM,CAAEhB,IAAK,CACxC,IAAM2K,EAAS8lB,CAAU,CAACzwB,EAAE,CAAE0wB,EAAM/lB,EAAOnF,SAAS,AAC1B,CAAA,WAAtB2N,EAAMwd,WAAW,EAOXJ,EAOFG,AAAmC,KAAnCA,EAAInoB,OAAO,CAAC+nB,IACZ3lB,EAAO2R,SAAS,CAACC,MAAM,CAAC+T,GAPxBI,AAAmC,KAAnCA,EAAInoB,OAAO,CAAC+nB,IACZ3lB,CAAAA,EAAOnF,SAAS,EAAI,IAAM8qB,CAAgB,CAStD,CAER,EACJ,CACJ,CACJ,CAIA,SAASM,KACL,IAAI,CAACb,kBAAkB,EAC3B,CAIA,SAASc,KACL,IAAI,CAACjM,qBAAqB,CAAG,IACjC,CAKA,SAASkM,GAAqBC,CAAc,EACxC,IAmDIC,EAAaC,EAnDXC,EAAgBH,EAAepzB,SAAS,CAACmqB,cAAc,CAAClhB,MAAM,EAChEmqB,EAAepzB,SAAS,CAACmqB,cAAc,CAAClhB,MAAM,CAACuqB,KAAK,CAKxD,SAASC,EAAmBC,CAAc,EACtC,IAAM1yB,EAAa,IAAI,CAAE6jB,EAAa7jB,EAAWS,KAAK,CAACmlB,kBAAkB,CAAE+M,EAAiB9O,EAAW8B,gBAAgB,AACnH4M,CAAAA,GACAA,EAAcrzB,IAAI,CAACc,EAAY0yB,GAE/BC,IAAmB3yB,GAEnB6jB,EAAWuN,kBAAkB,GAC7BvN,EAAW8B,gBAAgB,CAAG3lB,EAC9BA,EAAWyS,0BAA0B,CAAC,CAAA,GACtCie,GAA6B7M,EAAY,YAAa,CAClD7jB,WAAYA,EACZ6oB,SAAU,qBACV3oB,QAAS2jB,EAAW+O,kBAAkB,CAAC5yB,GACvC8oB,SAAU,SAAU+J,CAAI,EACpB,GAAIA,AAAoB,WAApBA,EAAKlM,UAAU,CACf9C,EAAW8B,gBAAgB,CAAG,CAAA,EAC9B9B,EAAWpjB,KAAK,CAACoF,gBAAgB,CAAC7F,OAEjC,CACD,IAAM0oB,EAAS,CAAC,EAChB7E,EAAWiP,eAAe,CAACD,EAAKzS,MAAM,CAAEsI,GACxC7E,EAAWuN,kBAAkB,GAC7B,IAAMrC,EAAcrG,EAAOqG,WAAW,AACN,CAAA,YAA5B/uB,EAAWE,OAAO,CAAC6F,IAAI,GAGvBgpB,EAAYgE,UAAU,CAACC,OAAO,CAAIjE,AACb,IADaA,EAAYgE,UAAU,CACnDnrB,WAAW,CAChBmnB,EAAYkE,UAAU,CAACD,OAAO,CAAIjE,AACb,IADaA,EAAYkE,UAAU,CACnDrrB,WAAW,EAEpB5H,EAAW8M,MAAM,CAAC4b,EACtB,CACJ,CACJ,IAIAgI,GAA6B7M,EAAY,cAG7C6O,EAAe/M,gBAAgB,CAAG,CAAA,CACtC,CAoBAoL,GAAyB,CAAA,EAAMqB,EAAepzB,SAAS,CAACmqB,cAAc,CAAClhB,MAAM,CAAE,CAC3EuqB,MAAOC,EACPS,WAhBJ,SAAoBhqB,CAAC,EACjBmpB,EAAcnpB,EAAEiqB,OAAO,CAAC,EAAE,CAACC,OAAO,CAClCd,EAAcppB,EAAEiqB,OAAO,CAAC,EAAE,CAACE,OAAO,AACtC,EAcIC,SAVJ,SAA2BpqB,CAAC,EAGpB,AAFampB,GAAczuB,KAAK8T,IAAI,CAAC9T,KAAK+rB,GAAG,CAAC0C,EAAcnpB,EAAEqqB,cAAc,CAAC,EAAE,CAACH,OAAO,CAAE,GACzFxvB,KAAK+rB,GAAG,CAAC2C,EAAcppB,EAAEqqB,cAAc,CAAC,EAAE,CAACF,OAAO,CAAE,KAAO,GAE3DZ,EAAmBvzB,IAAI,CAAC,IAAI,CAAEgK,EAEtC,CAKA,EACJ,CASA,MAAMqoB,GAMF,OAAOpsB,QAAQC,CAAe,CAAEC,CAAU,CAAE,CACpC6rB,GAA8Bf,GAA6B,wBAC3DK,GAA4BprB,EAAiB,SAAU+rB,IAEvDgB,GAAqB/sB,GAErB4rB,GAA8B5rB,EAAgBU,KAAK,CAAE,AAACssB,IAClDD,GAAqBC,EACzB,GACA5B,GAA4BnrB,EAAY,UAAWgsB,IACnDb,GAA4BnrB,EAAY,OAAQisB,IAChDd,GAA4BnrB,EAAY,SAAUqsB,IAClDlB,GAA4Be,GAAoB,aAAcU,IAC9DzB,GAA4Be,GAAoB,iBAAkBW,IAClEhI,GAAWwE,IAEnB,CAMAhiB,YAAYjM,CAAK,CAAEP,CAAO,CAAE,CACxB,IAAI,CAAC2xB,eAAe,CAAG,KAAK,EAC5B,IAAI,CAACpxB,KAAK,CAAGA,EACb,IAAI,CAACP,OAAO,CAAGA,EACf,IAAI,CAACszB,cAAc,CAAG,EAAE,CACxB,IAAI,CAAChX,SAAS,CACV,IAAI,CAAC/b,KAAK,CAAC+b,SAAS,CAACiX,sBAAsB,CAAC,IAAI,CAACvzB,OAAO,CAAC+uB,iBAAiB,EAAI,IAC9E,AAAC,IAAI,CAACzS,SAAS,CAACna,MAAM,EACtB,CAAA,IAAI,CAACma,SAAS,CAAG4T,GAAuBqD,sBAAsB,CAAC,IAAI,CAACvzB,OAAO,CAAC+uB,iBAAiB,EAAI,GAAE,CAE3G,CAMAyE,UAAUxqB,CAAC,CAAE,CACT,IAAMwkB,EAAS,IAAI,CAACjtB,KAAK,CAAC+I,OAAO,EAAE6lB,eAAenmB,GAClD,MAAO,CACHwkB,GAAU4C,GAAmC5C,EAAOrqB,KAAK,EACzDqqB,GAAU4C,GAAmC5C,EAAOlgB,KAAK,EAC5D,AACL,CAOAgkB,YAAa,CACT,IAAM3N,EAAa,IAAI,CAAEpjB,EAAQojB,EAAWpjB,KAAK,CAAEkzB,EAAoB9P,EAAWrH,SAAS,CAAEtc,EAAU2jB,EAAW3jB,OAAO,AAEzH2jB,CAAAA,EAAWgO,eAAe,CAAG,CAAC,EAC9Bb,GAA+B9wB,EAAQgvB,QAAQ,EAAI,CAAC,EAAI,AAAC1a,IACrDqP,EAAWgO,eAAe,CAACrd,EAAM3N,SAAS,CAAC,CAAG2N,CAClD,GAEA,EAAE,CAACrT,OAAO,CAACjC,IAAI,CAACy0B,EAAmB,AAACC,IAChC/P,EAAW2P,cAAc,CAACpzB,IAAI,CAACowB,GAA4BoD,EAAc,QAAS,AAACnyB,IAC/E,IAAMytB,EAAWrL,EAAWgQ,eAAe,CAACD,EAAcnyB,EACtDytB,CAAAA,GACC,CAACA,EAASljB,MAAM,CAAC2R,SAAS,CACtBmW,QAAQ,CAAC,4BACdjQ,EAAWkQ,mBAAmB,CAAC7E,EAASljB,MAAM,CAAEkjB,EAASjnB,MAAM,CAAExG,EAEzE,GACJ,GACAuvB,GAA+B9wB,EAAQ+H,MAAM,EAAI,CAAC,EAAI,CAACme,EAAUrJ,KACzD6T,GAAWxK,IACXvC,EAAW2P,cAAc,CAACpzB,IAAI,CAACowB,GAA4B3M,EAAY9G,EAAWqJ,EAAU,CAAEhd,QAAS,CAAA,CAAM,GAErH,GACAya,EAAW2P,cAAc,CAACpzB,IAAI,CAACowB,GAA4B/vB,EAAM+b,SAAS,CAAE,QAAS,SAAUtT,CAAC,EACxF,CAACzI,EAAM8I,WAAW,EAClB9I,EAAM+K,YAAY,CAACtC,EAAE8B,MAAM,CAAGvK,EAAMgL,QAAQ,CAAEvC,EAAE4B,MAAM,CAAGrK,EAAMiL,OAAO,CAAE,CACpEC,gBAAiB,CAAA,CACrB,IACAkY,EAAWmQ,kBAAkB,CAAC,IAAI,CAAE9qB,EAE5C,IACA2a,EAAW2P,cAAc,CAACpzB,IAAI,CAACowB,GAA4B/vB,EAAM+b,SAAS,CAAE,AAACpd,IAA8CmJ,aAAa,CAAG,YAAc,YAAa,SAAUW,CAAC,EAC7K2a,EAAWoQ,0BAA0B,CAAC,IAAI,CAAE/qB,EAChD,EAAG,AAAC9J,IAA8CmJ,aAAa,CAAG,CAAEa,QAAS,CAAA,CAAM,EAAI,KAAK,GAChG,CAOAqoB,YAAa,CACT,IAAM5N,EAAa,IAAI,CACvBqJ,GACK/nB,OAAO,CAAC,IAAI,CAAC1E,KAAK,EAAEojB,UAAU,CAC9BmJ,SAAS,CAAC,AAAC9sB,IACZ2jB,EAAW/W,MAAM,CAAC5M,EACtB,EACJ,CAiBA6zB,oBAAoB/nB,CAAM,CAAE/D,CAAM,CAAEisB,CAAU,CAAE,CAC5C,IAAyBzzB,EAAQojB,AAAd,IAAI,CAAqBpjB,KAAK,CAAE0zB,EAAe1zB,EAAME,QAAQ,CAACyzB,UAAU,CACvFC,EAAqB,CAAA,CACrBxQ,CAFe,IAAI,CAERoC,qBAAqB,GAC5BpC,AAHW,IAAI,CAGJoC,qBAAqB,CAACtI,SAAS,GAAK3R,EAAO2R,SAAS,EAC/D0W,CAAAA,EAAqB,CAAA,CAAI,EAE7B3D,GANe,IAAI,CAMsB,iBAAkB,CAAE1kB,OAAQ6X,AANtD,IAAI,CAM6DoC,qBAAqB,AAAC,GAClGpC,AAPW,IAAI,CAOJyQ,SAAS,GAEhBzQ,AATO,IAAI,CASA0Q,kBAAkB,EAC7B1Q,AAAuC,gBAAvCA,AAVO,IAAI,CAUA0Q,kBAAkB,CAAC/vB,IAAI,EAClC/D,EAAMoF,gBAAgB,CAACge,AAXhB,IAAI,CAWuB0Q,kBAAkB,EAExD1Q,AAbW,IAAI,CAaJ2Q,cAAc,CAAG3Q,AAbjB,IAAI,CAawByQ,SAAS,CAAG,CAAA,IAGvDD,GACAxQ,AAjBe,IAAI,CAiBR4Q,cAAc,CAAGxsB,EAC5B4b,AAlBe,IAAI,CAkBRoC,qBAAqB,CAAGja,EACnC0kB,GAnBe,IAAI,CAmBsB,eAAgB,CAAE1kB,OAAQA,CAAO,GAEtE/D,EAAO8J,IAAI,EACX9J,EAAO8J,IAAI,CAAC7S,IAAI,CAtBL,IAAI,CAsBc8M,EAAQkoB,GAErCjsB,CAAAA,EAAOmnB,KAAK,EAAInnB,EAAOwnB,KAAK,AAAD,GAC3BhvB,EAAME,QAAQ,CAACyzB,UAAU,CAAC5hB,QAAQ,CAAC,0BAIvC/R,EAAMkoB,UAAU,EAAI3c,EAAO2R,SAAS,CAACC,MAAM,CAAC,qBAC5CuW,EAAaO,WAAW,CAAC,wBACzB7Q,AA/Be,IAAI,CA+BRyQ,SAAS,CAAG,CAAA,EACvBzQ,AAhCe,IAAI,CAgCR2Q,cAAc,CAAG,CAAA,EAC5B3Q,AAjCe,IAAI,CAiCR4Q,cAAc,CAAG,KAEpC,CAeAT,mBAAmBvzB,CAAK,CAAEyzB,CAAU,CAAE,CAClCzzB,EAAQ,IAAI,CAACA,KAAK,CAClB,IAAyBklB,EAAmB9B,AAAzB,IAAI,CAAgC8B,gBAAgB,CAAE8O,EAAiB5Q,AAAvE,IAAI,CAA8E4Q,cAAc,CAAEN,EAAe1zB,EAAME,QAAQ,CAACyzB,UAAU,CACzJzO,IAGI,AAACA,EAAiBpc,WAAW,EAC5B2qB,EAAWvO,gBAAgB,GAE5BuO,EAAWxqB,MAAM,CAAC+U,UAAU,EAE3BkW,AA1XjB,SAAyBC,CAAE,CAAE5wB,CAAC,EAC1B,IAAM6wB,EAAexE,GAAIyE,OAAO,CAAC91B,SAAS,CAAE+1B,EAAiBF,EAAaG,OAAO,EAC7EH,EAAaI,iBAAiB,EAC9BJ,EAAaK,qBAAqB,CAClCC,EAAM,KACV,GAAIN,EAAaO,OAAO,CACpBD,EAAMN,EAAaO,OAAO,CAACl2B,IAAI,CAAC01B,EAAI5wB,QAGpC,EAAG,CACC,GAAI+wB,EAAe71B,IAAI,CAAC01B,EAAI5wB,GACxB,OAAO4wB,EAEXA,EAAKA,EAAGS,aAAa,EAAIT,EAAGnW,UAAU,AAC1C,OAASmW,AAAO,OAAPA,GAAeA,AAAgB,IAAhBA,EAAGU,QAAQ,CAAQ,CAE/C,OAAOH,CACX,EAyWiCjB,EAAWxqB,MAAM,CAAE,qBAG/Bic,EAAiBpc,WAAW,EAEjCuc,WAAW,KACPH,EAAiBpc,WAAW,CAAG,CAAA,CACnC,EAAG,GANHmnB,GAVW,IAAI,CAU0B,eAS5C+D,GAAmBA,EAAerF,KAAK,GAGvCvL,AAtBc,IAAI,CAsBPyQ,SAAS,EAsBrBzQ,AA5Ce,IAAI,CA4CRyQ,SAAS,CAACJ,EAAYrQ,AA5ClB,IAAI,CA4CyB0Q,kBAAkB,EAC1D1Q,AA7CW,IAAI,CA6CJ4L,KAAK,GAChB5L,AA9CW,IAAI,CA8CJ0R,SAAS,GAChBd,EAAehF,KAAK,CAAC5L,AA/Cd,IAAI,CA+CqB0R,SAAS,CAAC,CAE1C1R,AAjDO,IAAI,CAiDA2Q,cAAc,CAAG3Q,AAjDrB,IAAI,CAiD4ByQ,SAAS,CAAGG,EAAehF,KAAK,CAAC5L,AAjDjE,IAAI,CAiDwE0R,SAAS,CAAC,EAG7F7E,GApDO,IAAI,CAoD8B,iBAAkB,CAAE1kB,OAAQ6X,AApD9D,IAAI,CAoDqEoC,qBAAqB,AAAC,GACtGkO,EAAaO,WAAW,CAAC,wBAErBD,EAAee,GAAG,EAClBf,EAAee,GAAG,CAACt2B,IAAI,CAxDpB,IAAI,CAwD6Bg1B,EAAYrQ,AAxD7C,IAAI,CAwDoD0Q,kBAAkB,EAEjF1Q,AA1DO,IAAI,CA0DAyQ,SAAS,CAAG,CAAA,EACvBzQ,AA3DO,IAAI,CA2DA2Q,cAAc,CAAG,CAAA,EAC5B3Q,AA5DO,IAAI,CA4DA4Q,cAAc,CAAG,SApCpC5Q,AAxBe,IAAI,CAwBR0Q,kBAAkB,CAAGE,EAAerF,KAAK,CAAClwB,IAAI,CAxB1C,IAAI,CAwBmDg1B,GAElErQ,AA1BW,IAAI,CA0BJ0Q,kBAAkB,EAAIE,EAAehF,KAAK,EACrD5L,AA3BW,IAAI,CA2BJ0R,SAAS,CAAG,EACvB1R,AA5BW,IAAI,CA4BJ4L,KAAK,CAAG,CAAA,EACnB5L,AA7BW,IAAI,CA6BJ2Q,cAAc,CAAG3Q,AA7BjB,IAAI,CA6BwByQ,SAAS,CAC5CG,EAAehF,KAAK,CAAC5L,AA9Bd,IAAI,CA8BqB0R,SAAS,CAAC,GAG9C7E,GAjCW,IAAI,CAiC0B,iBAAkB,CAAE1kB,OAAQ6X,AAjC1D,IAAI,CAiCiEoC,qBAAqB,AAAC,GACtGkO,EAAaO,WAAW,CAAC,wBACzB7Q,AAnCW,IAAI,CAmCJ4L,KAAK,CAAG,CAAA,EACnB5L,AApCW,IAAI,CAoCJ4Q,cAAc,CAAG,KAExBA,EAAee,GAAG,EAClBf,EAAee,GAAG,CAACt2B,IAAI,CAvChB,IAAI,CAuCyBg1B,EAAYrQ,AAvCzC,IAAI,CAuCgD0Q,kBAAkB,IAyB7F,CAaAN,2BAA2BwB,CAAU,CAAEC,CAAS,CAAE,CAC1C,IAAI,CAAClB,cAAc,EACnB,IAAI,CAACA,cAAc,CAACkB,EAAW,IAAI,CAACnB,kBAAkB,CAE9D,CAiBAzB,gBAAgB1S,CAAM,CAAEsI,CAAM,CAAE,CAkC5B,OAjCAsI,GAA8B5Q,EAAQ,CAAC5L,EAAOmhB,KAC1C,IAAMC,EAAcC,WAAWrhB,GAAQoB,EAAO+f,EAAMzS,KAAK,CAAC,KAAM4S,EAAalgB,EAAKvT,MAAM,CAAG,EAQ3F,GANIwuB,CAAAA,GAA4B+E,IAC3BphB,EAAMsI,KAAK,CAAC,WACZ6Y,EAAM7Y,KAAK,CAAC,YACbtI,CAAAA,EAAQohB,CAAU,EAGlBphB,AAAU,cAAVA,EAAuB,CACvB,IAAImB,EAAS+S,EACb9S,EAAKzU,OAAO,CAAC,CAACqf,EAAMld,KAChB,GAAIkd,AAAS,cAATA,GAAwBA,AAAS,gBAATA,EAAwB,CAChD,IAAMuV,EAAW9E,GAAwBrb,CAAI,CAACtS,EAAQ,EAAE,CAAE,GACtDwyB,CAAAA,IAAexyB,EAEfqS,CAAM,CAAC6K,EAAK,CAAGhM,GAETmB,CAAM,CAAC6K,EAAK,EAElB7K,CAAAA,CAAM,CAAC6K,EAAK,CAAGuV,EAASjZ,KAAK,CAAC,OAC1B,EAAE,CACF,CAAC,CAAA,EAKLnH,EAASA,CAAM,CAAC6K,EAAK,CAE7B,CACJ,EACJ,CACJ,GACOkI,CACX,CAMA0I,oBAAqB,CACb,IAAI,CAACzL,gBAAgB,GACrB,IAAI,CAACA,gBAAgB,CAAClT,0BAA0B,CAAC,CAAA,GACjD,IAAI,CAACkT,gBAAgB,CAAG,CAAA,EAEhC,CAaAiN,mBAAmB5yB,CAAU,CAAE,CAC3B,IAAME,EAAUF,EAAWE,OAAO,CAAE81B,EAAYzE,GAAmB0E,mBAAmB,CAAEC,EAAkBF,EAAUG,aAAa,CAAEpwB,EAAOkrB,GAAwB/wB,EAAQ6F,IAAI,CAAE7F,EAAQ4L,MAAM,EAAI5L,EAAQ4L,MAAM,CAAC,EAAE,EAC/M5L,EAAQ4L,MAAM,CAAC,EAAE,CAAC/F,IAAI,CAAE7F,EAAQ0C,MAAM,EAAI1C,EAAQ0C,MAAM,CAAC,EAAE,EAC3D1C,EAAQ0C,MAAM,CAAC,EAAE,CAACmD,IAAI,CAAE,SAAUqwB,EAAe7E,GAAmB8E,sBAAsB,CAACn2B,EAAQonB,OAAO,CAAC,EAAI,EAAE,CAAEgP,EAAgB,CACnIhP,QAASpnB,EAAQonB,OAAO,CACxBvhB,KAAMA,CACV,EAoBA,SAASwwB,EAASxX,CAAM,CAAEvgB,CAAG,CAAEg4B,CAAe,CAAE7gB,CAAM,CAAE8gB,CAAS,EAC7D,IAAIC,EACAF,GACA/F,GAA2B1R,IAC3BqX,AAA8B,KAA9BA,EAAaxsB,OAAO,CAACpL,IACpB,CAAA,AAACg4B,CAAAA,EAAgB5sB,OAAO,EACrB4sB,EAAgB5sB,OAAO,CAACpL,EAAG,GAAM,GACjCg4B,CAAe,CAACh4B,EAAI,EACpBg4B,AAAoB,CAAA,IAApBA,CAAuB,IAGvB7F,GAA2B5R,IAC3BpJ,CAAM,CAACnX,EAAI,CAAG,EAAE,CAChBugB,EAAO5d,OAAO,CAAC,CAACw1B,EAAat1B,KACpByvB,GAA4B6F,IAM7BhhB,CAAM,CAACnX,EAAI,CAAC6C,EAAE,CAAG,CAAC,EAClB2vB,GAA8B2F,EAAa,CAACC,EAAcC,KACtDN,EAASK,EAAcC,EAAWX,CAAe,CAAC13B,EAAI,CAAEmX,CAAM,CAACnX,EAAI,CAAC6C,EAAE,CAAE7C,EAC5E,IAPA+3B,EAASI,EAAa,EAAGT,CAAe,CAAC13B,EAAI,CAAEmX,CAAM,CAACnX,EAAI,CAAEA,EASpE,IAEKsyB,GAA4B/R,IACjC2X,EAAa,CAAC,EACV/F,GAA2Bhb,IAC3BA,EAAOvV,IAAI,CAACs2B,GACZA,CAAU,CAACl4B,EAAI,CAAG,CAAC,EACnBk4B,EAAaA,CAAU,CAACl4B,EAAI,EAG5BmX,CAAM,CAACnX,EAAI,CAAGk4B,EAElB1F,GAA8BjS,EAAQ,CAAC6X,EAAcC,KACjDN,EAASK,EAAcC,EAAWr4B,AAAQ,IAARA,EAC9Bg4B,EACAN,CAAe,CAAC13B,EAAI,CAAEk4B,EAAYl4B,EAC1C,IAIIA,AAAQ,WAARA,EACAmX,CAAM,CAACnX,EAAI,CAAG,CACV0xB,GAA0BnR,EAAQ/e,EAAW4C,MAAM,CAAC,EAAE,CAACI,MAAM,CAAC,EAAE,EAAE8zB,QAAQ,GAC1E,OACH,CAEInG,GAA2Bhb,GAChCA,EAAOvV,IAAI,CAAC,CAAC2e,EAAQwR,GAAgCkG,EAAW1X,GAAQ,EAGxEpJ,CAAM,CAACnX,EAAI,CAAG,CAACugB,EAAQwR,GAAgC/xB,EAAKugB,GAAQ,CAIpF,CAYA,OAXAiS,GAA8B9wB,EAAS,CAAC6e,EAAQvgB,KACxCA,AAAQ,gBAARA,GACA83B,CAAa,CAAC93B,EAAI,CAAG,CAAC,EACtBwyB,GAA8B9wB,CAAO,CAAC1B,EAAI,CAAE,CAACu4B,EAAYC,KACrDT,EAASQ,EAAYC,EAASd,EAAiBI,CAAa,CAAC93B,EAAI,CAAEw4B,EACvE,IAGAT,EAASxX,EAAQvgB,EAAKw3B,CAAS,CAACjwB,EAAK,CAAEuwB,EAAe93B,EAE9D,GACO83B,CACX,CAiBAW,qBAAqBza,CAAS,CAAE/a,CAAK,CAAE,CACnC,IAAIwH,EAAUxH,EAAMiI,MAAM,CAAEwtB,EAAa,EAAE,CAAEC,EAC7C,KAAOluB,GAAWA,EAAQqK,OAAO,GAEzB6jB,AADJA,CAAAA,EAAgB72B,GAAK2I,EAAS,QAAO,GAEjCiuB,CAAAA,EAAaA,EAAW3K,MAAM,CAAC4K,EAC1BjU,KAAK,CAAC,KAEN/Q,GAAG,CAAC,AAACqO,GAAU,CAACA,EAAMvX,EAAQ,EAAE,EAGrCA,AADJA,CAAAA,EAAUA,EAAQwV,UAAU,AAAD,IACXjC,KAIpB,OAAO0a,CACX,CAiBArD,gBAAgBrX,CAAS,CAAE/a,CAAK,CAAE,CAC9B,IACIytB,EADErL,EAAa,IAAI,CAUvB,OARAqT,AAFsC,IAAI,CAACD,oBAAoB,CAACza,EAAW/a,GAEhEN,OAAO,CAAC,AAAC0F,IACZgd,EAAWgO,eAAe,CAAChrB,CAAS,CAAC,EAAE,CAAC,EAAI,CAACqoB,GAC7CA,CAAAA,EAAW,CACPjnB,OAAQ4b,EAAWgO,eAAe,CAAChrB,CAAS,CAAC,EAAE,CAAC,CAChDmF,OAAQnF,CAAS,CAAC,EAAE,AACxB,CAAA,CAER,GACOqoB,CACX,CAQApiB,OAAO5M,CAAO,CAAE,CACZ,IAAI,CAACA,OAAO,CAAG6wB,GAAyB,CAAA,EAAM,IAAI,CAAC7wB,OAAO,CAAEA,GAC5D,IAAI,CAACk3B,YAAY,GACjB,IAAI,CAAC5F,UAAU,EACnB,CAOA4F,cAAe,CACX,IAAI,CAAC5D,cAAc,CAACryB,OAAO,CAAC,AAACk2B,GAAaA,IAC9C,CAKA71B,SAAU,CACN,IAAI,CAAC41B,YAAY,EACrB,CACJ,CAOA7F,GAAmB0E,mBAAmB,CAAG,CAGrCE,cAAe,CACXzzB,aAAc,CAAC,QAAS,SAAU,kBAAkB,CACpDE,OAAQ,CAAC,QAAQ,CACjBC,MAAO,CAAC,QAAQ,CAChBuE,MAAO,CAAC,WAAY,QAAQ,CAC5BwT,WAAY,CAAC,OAAQ,cAAe,SAAS,CAC7C0c,gBAAiB,CAAC,OAAQ,cAAe,SAAS,CAClDC,gBAAiB,CAAC,OAAQ,cAAe,SAAS,CAClD7vB,aAAc,CAAC,OAAQ,cAAe,SAAS,CAC/CoE,OAAQ,CAAC,OAAQ,cAAe,SAAS,CACzC0rB,KAAM,CAAC,cAAe,SAAS,CAC/BxI,iBAAkB,CAAC,CAAA,EAAK,CACxB9U,UAAW,CAAC,OAAQ,cAAe,SAAS,CAC5C+Y,WAAY,CAAC,cAAe,SAAS,CACrCF,WAAY,CAAC,cAAe,SAAS,AACzC,EAEAjc,OAAQ,CAAC,SAAS,CAClB+X,QAAS,CAAC,SAAS,CACnB4I,aAAc,EAAE,CAChB50B,MAAO,CAAC,eAAe,CAEvB60B,QAAS,CAAC,aAAc,aAAc,aAAa,CAEnDC,UAAW,EAAE,CACbC,OAAQ,CAAC,aAAc,OAAQ,SAAS,CACxCC,UAAW,CAAC,kBAAmB,kBAAkB,CACjDphB,KAAM,CAAC,SAAS,CAEhBqhB,YAAa,EAAE,CACfC,gBAAiB,CAAC,SAAU,eAAe,AAC/C,EAGAxG,GAAmB8E,sBAAsB,CAAG,CACxCvH,UAAW,CAAC,aAAc,aAAc,eAAe,CACvDD,QAAS,CAAC,eAAe,CACzB/X,OAAQ,CAAC,eAAe,AAC5B,EA8CA,IAAMkhB,GAAK54B,GACX44B,CAAAA,GAAEjO,UAAU,CAAGiO,GAAEjO,UAAU,EA18CkCA,GA28C7DiO,GAAEzG,kBAAkB,CAAGyG,GAAEzG,kBAAkB,EA1C0BA,GA2CrEyG,GAAEjO,UAAU,CAAC5kB,OAAO,CAAC6yB,GAAEC,KAAK,CAAED,GAAEzG,kBAAkB,CAAEyG,GAAEE,OAAO,CAAEF,GAAEG,WAAW,EAC/C,IAAMC,GAAoBh5B,WAE9Cg5B,MAAmBC,OAAO"}